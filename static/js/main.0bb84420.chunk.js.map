{"version":3,"sources":["images/logoUAC_2.png","components/LoginNavbar.js","components/Pagesone.js","components/PagesEdit.js","pages/PageEdit.jsx","components/LoginNavbarUser.js","pages/Pageone.jsx","api.js","components/Paglogin.js","pages/PLogin.jsx","components/Pagestwo.js","pages/Pagetwo.jsx","components/ModalRepor.js","components/Pagesthree.js","pages/Pagethree.jsx","components/ButtonActions.js","components/PageIndicadorCriterio.js","components/ModalReporIndicador.js","components/ModalReporResultado.js","components/Pagesfour.js","pages/Pagefour.jsx","components/Pagesfive.js","pages/Pagefive.jsx","components/Pagessix.js","pages/Pagesix.jsx","components/ListUser.js","components/Pagesseven.js","pages/Pageseven.jsx","components/Pageseight.js","pages/Pageeight.jsx","components/Pagesnine.js","pages/Pagenine.jsx","components/PagesEditES.js","pages/PageEditES.jsx","components/PagesEditIN.js","pages/PageEditIN.jsx","components/PagesEditRE.js","pages/PageEditRE.jsx","components/PagesEditOB.js","pages/PageEditOB.jsx","components/PagesReport.js","components/Prueba.js","pages/PageReport.jsx","components/PagesReportes.js","pages/PageReportes.jsx","components/Footer.js","Layout.js","App.js","serviceWorker.js","index.js","images/LogoUAC.png"],"names":["module","exports","LoginNavbar","className","src","Logo","alt","React","Component","Pagesone","props","traerUsuario","a","URL","sessionStorage","getItem","fetch","response","json","data","setState","result","createCursos","pCursosID","pfullnameC","setItem","state","userid","this","map","cursos","visible","id","logo","fullname","href","onClick","role","PageEdit","PagesEdit","LoginNavbarUser","toggle","bind","isOpen","container","document","getElementById","ReactDOM","render","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","rel","integrity","crossorigin","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","handleClick","class","Pageone","cargarUser","username","userpictureurl","BASE_URL","callAPI","endpoint","options","headers","Accept","url","API","objetivosEducacionalesCrud","list","method","listCb","create","ObjetivoCrudID","body","JSON","stringify","read","update","updates","remove","resultadoEstudianteCrud","ResultadoCrudID","escuelaCrud","EscuelaCrudID","asignacionCrud","AsignacionCrudID","AEstado","upAsignacion","rubricalist","TEstado","TEstadoValidacion","asignacionIndicadorCrud","asignacionIndicadorCrudID","rubriclist","personaCrud","PersonaCrudID","cursoCrud","docentecurso","CursoCrudID","IndiNivel","indicadorCrud","ListInxRe","IndicadorCrudID","cursoObjetivoCrud","listxCurso","CursoObjetivoCrudID","listobxCurso","objetivoResultadoCrud","ObjetivoResultadoCrudID","listrexCurso","resultadoIndicadorCrud","listreinxCurso","ResultadoIndicadorCrudID","ListxCurso","GRubricaCrud","GRubricaCrudID","GCriterioCrud","GCriterioCrudID","rubricaCrud","RubricaCrud","RubricaCrudID","CriterioCrud","CriterioCrudID","nivelCrud","NivelCrud","NivelCrudID","Reportes","ReporteActividad","Actividad","ReporteCSV","validate","validarIndCri","Paglogin","handleChange","e","target","name","value","users","password","token","error","errorcode","alert","data2","firstname","lastname","userprivateaccesskey","Storage","console","log","cPersona","Cod_Persona","Nombre","Apellidos","NomPersona","Correo","Grado","api","handleSubmit","preventDefault","onSubmit","type","onChange","placeholder","PLogin","Pagestwo","courses","dtAlumno","traerAlumno","forEach","element","idnumber","createUsuario","email","replace","pCod_Persona","pNombre","pApellidos","pNomPersona","pCorreo","pGrado","dataC","cCurso","Cod_Curso","NomCurso","Descripcion","categoryname","Docente","contacts","Semestre","shortname","displayname","Pagetwo","params","styles","StyleSheet","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","author","marginBottom","subtitle","margin","text","image","marginVertical","marginHorizontal","header","color","pageNumber","position","bottom","left","section","padding","flexGrow","Pagesthree","traerUnidades","unidad","Pagethree","ButtonActions","pFlag_Estado","cAsignacion","Cod_Asignacion","cid","Flag_Estado","Id_Asignacion","traerEstado","cEstado","Checked","checked","RubricaAsignacion","traerValidar","cValiEstado","validacion","valor","MERROR","gradingsummary","participantcount","submissiondraftscount","submissionssubmittedcount","submissionsneedgradingcount","warnings","updateAsignacion","pCod_Asignacion","pParticipantes","pPresentados","pPendientes","Participantes","Presentados","Pendientes","onCheckChange","cValidar","Cod_Rubrica","data-toggle","data-placement","PageIndicadorCriterio","traerRubrica","pCod_Curso","pId_Asignacion","rubrica","dtRubrica","traerIndidacor","cIndicador","dtIndicadores","resultadoIndicadors","createIndicadorAsignacion","pCod_Rubrica","pCod_Criterio","pNivelCriterio","pCod_Resultado","pTCod_Resultado","cIndicadorAsignacion","Cod_Criterio","NivelCriterio","Cod_Resultado","TCod_Resultado","deleteCriterio","dCod_Escuela","pCod_Escuela","footer","dtsRubrica","deleteProductDialog","IndicadorEditor","addNew","actionTemplate","Cid","updatedCars","rowIndex","field","cars1","onEditorValueChange","style","width","rowData","nrow","NomRubrica","DesCriterio","newCar","concat","displayDialog","temp2Rubrica","filter","val","Cod_AsignacionIndicador","dteRubrica","selectedProducts","includes","toast","show","severity","summary","detail","life","window","location","reload","icon","marginRight","DeleteNew","modal","onHide","ref","el","growl","rowGroupMode","groupField","responsive","sortOrder","sortField","editor","label","page","flexDirection","backgroundColor","Pagesfour","tmpdata","traerActividades","traerActividades2","modules","modulo","modname","Curso","assignments","vAssign","cmid","createAsignacion","course","pNomAsignacion","pTipo_Asignacion","pCod_Unidad","pFlag_Activo","NomAsignacion","TipoAsignacion","Cod_Unidad","Flag_Activo","actividades","verificaActi","actiA","Pagefour","PagesFive","createObjetivoResultado","cObjetivoResultado","Cod_ResulCursObjetivo","refreshPage","updateObjetivoResultado","pCod_ResulCursObjetivo","deleteObjetivoResultado","dCod_ResulCursObjetivo","traerObjetivosResultado","dtObjetivoResultado","ObjetivoResultados","traerObjetivoCurso","dtObjetivoCurso","CursoObjetivos","traerResultado","dtResultado","Resultado","onEditorValueChangeForRowEditing","updatedObjRes","objRes2","onBlur","modalIsOpen","dtUpdateObjRes","Cod_ObjetivoEditor","Cod_ResultadoEditor","requiredValidator","onRowEditorValidator","onRowEditSave","onRowEditInit","onRowEditCancel","length","Array","slObjetivoResultado","i","key","Cod_Objetivo","event","objetivoResultado","index","selectionMode","metaKeySelection","selection","selecObjetivoResultado","displaySelection","onSelectionChange","editMode","rowEditorValidator","rowEditor","Pagefive","Pagesfive","Pagessix","createCursoObjetivo","cCursoObjetivo","Cod_CursoObjetivo","updateCursoObjetivo","pCod_CursoObjetivo","pCod_Objetivo","deleteCursoObjetivo","dCod_CursoObjetivo","traerCursoObjetivos","dtCursoObjetivo","traerObjetivo","dtObjetivo","Objetivos","updatedCursoObj","curObj2","dtUpdateCurObj","slCursoObjetivo","updatedCurObj","cursoObjetivo","selecCursoObjetivos","Pagesix","traerCalificacionStudent","dtgradeStudent","lastattempt","graded","gradingstatus","feedback","grade","grader","gradefordisplay","gradeddate","dtalumnoN","plugins","usuarioName","profileimageurl","dangerouslySetInnerHTML","__html","Pagesseven","data3","traerAlumnos","traerestudiante","lis","submissions","usuarios","mapp","mappings","st","ListUser","salvarNotas","Pageseven","traerAlumnoNames","studentUID","link","assignid","lista","querySelector","item","createElement","then","res","innerHTML","appendChild","notaasig","querySelectorAll","traerAlumnoNotas","Pageseight","dtstudent","dtstudentCurso","resultado","fetchData","loading","traerAlumnosCurso","user","roles","student","roleid","Pageeight","handleChangeC","cResultado","traerIndicador","createResultadoIndicador","cResultadoIndicador","Cod_IndicarResultado","Cod_Indicador","updateResultadoIndicador","pCod_Indicador","deleteResultadoIndicador","Cod_IndicarResultadoC","pCod_IndicarResultado","traerResultadoIndicador","dtResultadoIndicador","traerResultadoCurso","dtResultadoObjetivo","dtIndicador","ResultadoIndicadors","updatedResInd","resInd2","dtUpdateResInd","Cod_IndicadorEditor","resultadoIndicador","selecResultadoIndicador","Pagenine","Pagesnine","PageEditES","createEscuela","cEscuela","Cod_Escuela","Sede","updateEscuela","pSede","pDescripcion","deleteEscuela","traerEscuela","dtEscuela","Escuelas","updatedEsc","escu2","dtUpdateEsc","Cod_EscuelaEditor","SedeEditor","DescripcionEditor","editorForRowEditing","inputTextEditor","rEscuela","slEscuela","ButtonGroup","Button","outline","size","ToggleModal","Modal","ModalHeader","ModalBody","InputGroup","InputGroupAddon","addonType","Input","sede","ModalFooter","selecEscuela","PagesEditES","PageEditIN","createIndicador","Cod_Indicadornivel","DescripcionLarga","DescripcionCorta","updateIndicador","pCod_Indicadornivel","pDescripcionLarga","pDescripcionCorta","pvalor","deleteInicador","dCod_indicador","pCod_indicador","Indicadores","dtResultados","traerIndicadorNivel","dtIndiNivel","updatedInd","ind2","dtUpdatInd","Cod_IndicadorNivelEditor","indicador","slIndicador","Valor","selecIndicador","PagesEditIN","PageEditRE","createResultado","NomResultado","updateResultado","pNomResultado","deleteResultado","dCod_Resultado","traerResultadoEducacional","Resultados","updateRes","obj2","resu2","dtUpdateRes","NomResultadoEditor","valorEditor","slResultado","selecResultado","PagesEditRE","PageEditOB","createObjetivo","cObjetivo","updateObjetivo","deleteObjetivo","dCod_Objetivo","traerObjetivosEducacional","dtObjEduc","updatedObj","dtUpdateObj","EscuelaEditor","objetivo","slObjetivo","selecObjetivos","height","PagesEditOB","PagesReport","traerCurso","docente","dtcurso","Cursos","cod_curso","curso","rpta","Mensaje","RepoActividad","createTipo","pTipo","PageReport","marginTop","marginLeft","paddingRight","subtitulo","Footer","styled","Text","PagesReportes","dtTAlumno","institution","Nombres","Codigo","sacarpromedio","traerReporteCSV","crubrica","dtReporteCSV","traerReporte","dtReporteActividad","dtActividadFinal","appJson","Notas","push","indexy","pNotas","Asignacion","Des_Criterio","Puntaje","PuntajeFinal","Indicador","app2Json","Detalle","indexz","cadena","Criterio","app3Json","cantidad","suma","x","Nota","Math","round","Nom_Indicador","box","LogoUAC","Persona","getContent","r","totalPages","fixed","filename","separator","PageReportes","Layout","Fragment","App","exact","path","component","Boolean","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0bb84420.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoUAC_2.a37b26d1.png\";","import React from 'react';\r\nimport './styles/LoginNavbar.css';\r\nimport Logo from '../images/logoUAC_2.png';\r\nclass LoginNavbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row Box_Model\">\r\n          <div className=\"col d-none d-lg-block\">\r\n            <div className=\"col\">\r\n              <img src={Logo} alt=\"logo\" className=\"image\"/>\r\n            </div>\r\n            <div className=\"col letrasL\">\r\n              <h4>Universidad <br/>Andina del Cusco</h4>\r\n              <h5>\"Acreditada Internacionalmente\"</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"letrasR\">\r\n              <h2> Sistema de Informacion</h2>\r\n              <h3>Resultados del estudiante EPIS</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LoginNavbar;","import React from 'react';\r\nimport './styles/PagLogin.css';\r\nimport logo from '../images/LogoUAC.png';\r\n/** Este componente permite listar los cursos que el usuario tiene en el presente semestre.\r\n   * @author: Luis Huallparimachi Saire y Joel Sumerente Ayerbe\r\n   * @param wstoken: El parametro wstoken devuelve el token que solicitamos.\r\n   * @param moodlewsrestformat: El parametro moodlewsrestformat permite darnos el formato en el que se mostrara                                  el contenido de la informacion. \r\n   * @param wsfunction: El parametro wsfunction permite llamar al metodo del servicio de moodle.\r\n   *                    La funcion (core_enrol_get_users_courses) permite obtener una lista de identificadores de curso en los                      que esta inscrito un usuario.           \r\n   * @param userid: El parametro userid devuelve el id del usuario que solicitamos. \r\n   * @version: 1.0 17/12/2019\r\n  */\r\nclass Pagesone extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userid :{},\r\n      result:[   \r\n      ],\r\n    }\r\n  }\r\n    componentDidMount(){    \r\n    this.traerUsuario();\r\n    }\r\n  traerUsuario = async() => {\r\n    try{      \r\n      var URL = (sessionStorage.getItem('url'))+'/webservice/rest/server.php?wstoken='+(sessionStorage.getItem('token'))+\r\n      '&moodlewsrestformat=json&wsfunction=core_enrol_get_users_courses&userid='+(sessionStorage.getItem('userid'))\r\n      const response = await fetch(URL);    \r\n      const data = await response.json();\r\n      this.setState({\r\n        result : data\r\n      }); \r\n      }\r\n    catch (error) {\r\n    }    \r\n  };\r\n  createCursos = async(pCursosID, pfullnameC \r\n    ) => {\r\n    sessionStorage.setItem('cursoid', (pCursosID));\r\n    sessionStorage.setItem('fullnameCu', (pfullnameC));\r\n  };\r\n  render() {    \r\n    return (           \r\n      <div className=\"container\">        \r\n        <div className=\"row\">\r\n          <div className=\"centro\">\r\n          <h1>BIENVENIDOS AL SISTEMA DE INFORMACION DE LA EPIS</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row abajo\">\r\n        {this.state.result.map(cursos => (\r\n          cursos.visible === 1 ?\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card General\" id={cursos.id}>\r\n              <div className=\"col d-none d-lg-block \">\r\n                <img className=\"card-img-top styleimagen\" src={logo} alt=\"Imagen\" />\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <p className=\"center card-title color\">{cursos.fullname}</p>\r\n                <a className=\"fuente btn-lg btn-block Boton\" href={\"/Pagetwo/cursoid:\"+(cursos.id)}\r\n                onClick={() => this.createCursos(cursos.id, cursos.fullname)} role=\"button\">CURSO</a>\r\n              </div>\r\n             </div>\r\n          </div> :\r\n          <div></div>  \r\n        ))}\r\n        </div>\r\n      </div>  \r\n    );\r\n  }\r\n}\r\nexport default Pagesone;","import React from 'react';\r\n// import './styles/Paglogin.css';\r\nclass PageEdit extends React.Component {\r\n  render() {    \r\n    return (           \r\n      <div className=\"container\">        \r\n        <div className=\"row\">\r\n          <div className=\"centro\">\r\n          <h1>BIENVENIDOS AL SISTEMA DE INFORMACION DE LA EPIS</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row abajo\">\r\n          <div className=\"col-lg-12\">\r\n            <h2>EDICION DE CURSOS</h2>            \r\n            <div className=\"row\">            \r\n              <div className=\"col-lg-4\">\r\n                <div className=\"card General\">\r\n                  <div className=\"card-body\">\r\n                    <p className=\"center card-title color\">ESCUELA       PROFESIONAL</p>\r\n                    <a className=\"fuente btn-lg btn-block\" href={\"/PageEditES/userid:\"+(sessionStorage.getItem('userid'))} role=\"button\">VER</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"card General\">\r\n                  <div className=\"card-body\">\r\n                    <p className=\"center card-title color\">OBJETIVOS EDUCACIONALES</p>\r\n                    <a className=\"fuente btn-lg btn-block\" href={\"/PageEditOB/userid:\"+(sessionStorage.getItem('userid'))} role=\"button\">VER</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"card General\">\r\n                  <div className=\"card-body\">\r\n                    <p className=\"center card-title color\">RESULTADOS DE ESTUDIANTE</p>\r\n                    <a className=\"fuente btn-lg btn-block\" href={\"/PageEditRE/userid:\"+(sessionStorage.getItem('userid'))} role=\"button\">VER</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            <div className=\"col-lg-4\">\r\n                <div className=\"card General\">\r\n                  <div className=\"card-body\">\r\n                    <p className=\"center card-title color\">INDICADORES DE DESEMPEÑO</p>\r\n                    <a className=\"fuente btn-lg btn-block\" href={\"/PageEditIN/userid:\"+(sessionStorage.getItem('userid'))} role=\"button\">VER</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> \r\n          </div>\r\n        </div>\r\n      </div>  \r\n    );\r\n  }\r\n}\r\nexport default PageEdit;","import React from 'react';\r\nimport PagesEdit from '../components/PagesEdit';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass PageEdit extends React.Component {\r\n  render(){\r\n    return(  \r\n      <div> \r\n       <LoginNavbarUser />\r\n       <PagesEdit/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageEdit;","import React from 'react';\r\nimport {Collapse,Navbar,NavbarToggler,NavbarBrand,Nav,NavItem,NavLink,UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem } from 'reactstrap';\r\nimport './styles/LoginNavbarUser.css';\r\nimport  LoginNavbar from '../components/LoginNavbar';\r\nimport Pageone from '../pages/Pageone'\r\nimport PageEdit from '../pages/PageEdit'\r\nimport ReactDOM from 'react-dom'; \r\nclass LoginNavbarUser extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n        isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({isOpen: !this.state.isOpen});\r\n  }\r\n  handleClick(){\r\n    const container = document.getElementById('root');\r\n    ReactDOM.render(<Pageone/>, container);\r\n    ReactDOM.render(<PageEdit/>, container); \r\n  };\r\n  render(){\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"Barra\">\r\n        <UncontrolledDropdown className=\"ul2 nav justify-content-end\" nav inNavbar>\r\n          <DropdownToggle nav caret>\r\n            <a href=\"ponerlink\">{sessionStorage.getItem('fullname')} <img className=\"imageuser\" src={sessionStorage.getItem('userpictureurl')} alt=\"user\"/>\r\n            </a>\r\n          </DropdownToggle>\r\n          <DropdownMenu right>\r\n            <DropdownItem href={\"/Pageone/userid:\"+sessionStorage.getItem('userid')}>\r\n              Inicio\r\n            </DropdownItem>\r\n            <DropdownItem  href={\"/PageEdit/userid:\"+sessionStorage.getItem('userid')}>\r\n              Edicion\r\n            </DropdownItem>\r\n            <DropdownItem divider />\r\n            <DropdownItem href={\"http://localhost:3000\"}>\r\n              <strong>Salir</strong>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n      <div className=\"row\">\r\n          <LoginNavbar/>\r\n      </div>\r\n      <div className=\"row Inicio\">\r\n      <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\" integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\" crossorigin=\"anonymous\"/>\r\n        <Navbar light expand=\"md\">\r\n          <NavbarBrand href=\"/\"/>\r\n          <NavbarToggler onClick={this.toggle}/>\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem> \r\n                <NavLink><a className=\"nav-link\" href={\"/Pageone/userid:\"+sessionStorage.getItem('userid')} onClick={() => this.handleClick()}><i class=\"fas fa-home fa-lg\"></i> Inicio <span className=\"sr-only\"></span></a></NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink><a className=\"nav-link\" onClick={() => this.handleClick()} href={\"/PageEdit/userid:\"+sessionStorage.getItem('userid')}><i class=\"fas fa-pencil-alt fa-lg\"></i> Edicion <span className=\"sr-only\"></span></a></NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink><a className=\"nav-link\" onClick={() => this.handleClick()} href={\"/PageReport/userid:\"+sessionStorage.getItem('userid')}><i class=\"fas fa-file-alt fa-lg\"></i> Reporte <span className=\"sr-only\"></span></a></NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink><a className=\"nav-link\" onClick={() => this.handleClick()} href={\"http://localhost:3000\"}><i class=\"fas fa-sign-out-alt fa-lg\"></i> Salir <span className=\"sr-only\"></span></a></NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    </div>\r\n  );\r\n} }\r\nexport default LoginNavbarUser;","import React from 'react';\r\nimport Pagesone from '../components/Pagesone';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass Pageone extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount(){\r\n    this.cargarUser();\r\n  }\r\n  cargarUser = async() => {\r\n    try{      \r\n      const response = await fetch(`${sessionStorage.getItem('url')}/webservice/rest/server.php?wstoken=${sessionStorage.getItem('token')}&wsfunction=core_webservice_get_site_info&moodlewsrestformat=json`);    \r\n      const data = await response.json();\r\n      this.setState({\r\n        username: data.username,\r\n        fullname: data.fullname,\r\n        userid: data.userid,\r\n        userpictureurl: data.userpictureurl,\r\n      });     \r\n    }catch (error) {\r\n    }\r\n  };\r\n  render(){\r\n    return(  \r\n      <div> \r\n       <LoginNavbarUser />\r\n       <Pagesone/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pageone;","const BASE_URL = \"http://192.168.0.101:4000\";\r\n\r\n// const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n// const randomNumber = (min = 0, max = 1) =>\r\n//   Math.floor(Math.random() * (max - min + 1)) + min;\r\n// const simulateNetworkLatency = (min = 30, max = 1500) =>\r\n//   delay(randomNumber(min, max));\r\n\r\nasync function callAPI(endpoint, options = {}) {\r\n  options.headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\"\r\n  };\r\n  const url = BASE_URL + endpoint;\r\n  const response = await fetch(url, options);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\nconst API = {\r\n  objetivosEducacionalesCrud: {\r\n    list() {\r\n      return callAPI(\"/ObjetivoCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    listCb() {\r\n      return callAPI(\"/ObjetivoCrud/ListCom\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(ObjetivoCrudID) {\r\n      return callAPI(\"/ObjetivoCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(ObjetivoCrudID)\r\n      });\r\n    },\r\n    read(ObjetivoCrudID) {\r\n      return callAPI(`/ObjetivoCrud/${ObjetivoCrudID}`);\r\n    },\r\n    update(ObjetivoCrudID, updates) {\r\n      return callAPI(`/ObjetivoCrud/${ObjetivoCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(ObjetivoCrudID) {\r\n      return callAPI(`/ObjetivoCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(ObjetivoCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  resultadoEstudianteCrud: {\r\n    list() {\r\n      return callAPI(\"/ResultadoCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    listCb() {\r\n      return callAPI(\"/ResultadoCrud/ListCom\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(ResultadoCrudID) {\r\n      return callAPI(\"/ResultadoCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(ResultadoCrudID)\r\n      });\r\n    },\r\n    read(ResultadoCrudID) {\r\n      return callAPI(`/ResultadoCrud/${ResultadoCrudID}`);\r\n    },\r\n    update(ResultadoCrudID, updates) {\r\n      return callAPI(`/ResultadoCrud/${ResultadoCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(ResultadoCrudID) {\r\n      return callAPI(`/ResultadoCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(ResultadoCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  escuelaCrud: {\r\n    list() {\r\n      return callAPI(\"/EscuelaCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    listCb() {\r\n      return callAPI(\"/EscuelaCrud/ListCom\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(EscuelaCrudID) {\r\n      return callAPI(\"/EscuelaCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(EscuelaCrudID)\r\n      });\r\n    },\r\n    read(EscuelaCrudID) {\r\n      return callAPI(`/EscuelaCrud/${EscuelaCrudID}`);\r\n    },\r\n    update(EscuelaCrudID, updates) {\r\n      return callAPI(`/EscuelaCrud/${EscuelaCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(EscuelaCrudID) {\r\n      return callAPI(`/EscuelaCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(EscuelaCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  asignacionCrud: {\r\n    list() {\r\n      return callAPI(\"/AsignacionCrud\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(AsignacionCrudID) {\r\n      return callAPI(\"/AsignacionCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(AsignacionCrudID)\r\n      });\r\n    },\r\n    AEstado(AsignacionCrudID) {\r\n      return callAPI(\"/AsignacionCrud/AEstado\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(AsignacionCrudID)\r\n      });\r\n    },\r\n    upAsignacion(AsignacionCrudID) {\r\n      return callAPI(\"/AsignacionCrud/GParticipantes\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(AsignacionCrudID)\r\n      });\r\n    },\r\n    rubricalist(AsignacionCrudID) {\r\n      return callAPI(\"/AsignacionCrud/TRubrica\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(AsignacionCrudID)\r\n      });\r\n    },\r\n    TEstado(AsignacionCrudID) {\r\n      return callAPI(\"/AsignacionCrud/TEstado\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(AsignacionCrudID)\r\n      });\r\n    },\r\n    TEstadoValidacion(AsignacionCrudID) {\r\n      return callAPI(\"/asignacioncrud/Validar_RelacionIndCri2\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(AsignacionCrudID)\r\n      });\r\n    },\r\n    read(AsignacionCrudID) {\r\n      return callAPI(`/AsignacionCrud/${AsignacionCrudID}`);\r\n    },\r\n    update(AsignacionCrudID, updates) {\r\n      return callAPI(`/AsignacionCrud/${AsignacionCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(AsignacionCrudID) {\r\n      return callAPI(`/AsignacionCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(AsignacionCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  asignacionIndicadorCrud: {\r\n    list() {\r\n      return callAPI(\"/AsignacionIndicadorCrud\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(asignacionIndicadorCrudID) {\r\n      return callAPI(\"/AsignacionIndicadorCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(asignacionIndicadorCrudID)\r\n      });\r\n    },\r\n    upAsignacion(asignacionIndicadorCrudID) {\r\n      return callAPI(\"/AsignacionIndicadorCrud/GParticipantes\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(asignacionIndicadorCrudID)\r\n      });\r\n    },\r\n    rubriclist(asignacionIndicadorCrudID) {\r\n      return callAPI(\"/AsignacionIndicadorCrud/TxRubrica\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(asignacionIndicadorCrudID)\r\n      });\r\n    },\r\n    read(asignacionIndicadorCrudID) {\r\n      return callAPI(`/AsignacionIndicadorCrud/${asignacionIndicadorCrudID}`);\r\n    },\r\n    update(asignacionIndicadorCrudID, updates) {\r\n      return callAPI(`/AsignacionIndicadorCrud/${asignacionIndicadorCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(asignacionIndicadorCrudID) {\r\n      return callAPI(`/AsignacionIndicadorCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(asignacionIndicadorCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  personaCrud: {\r\n    list() {\r\n      return callAPI(\"/PersonaCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(PersonaCrudID) {\r\n      return callAPI(\"/PersonaCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(PersonaCrudID)\r\n      });\r\n    },\r\n    read(PersonaCrudID) {\r\n      return callAPI(`/PersonaCrud/${PersonaCrudID}`);\r\n    },\r\n    update(PersonaCrudID, updates) {\r\n      return callAPI(`/PersonaCrud/${PersonaCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(PersonaCrudID) {\r\n      return callAPI(`/PersonaCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(PersonaCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  cursoCrud: {\r\n    list() {\r\n      return callAPI(\"/CursoCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    docentecurso(CursoCrudID) {\r\n      return callAPI(`/CursoCrud/TxDocente`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(CursoCrudID)\r\n      });\r\n    },\r\n    create(CursoCrudID) {\r\n      return callAPI(\"/CursoCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(CursoCrudID)\r\n      });\r\n    },\r\n    read(CursoCrudID) {\r\n      return callAPI(`/CursoCrud/${CursoCrudID}`);\r\n    },\r\n    update(CursoCrudID, updates) {\r\n      return callAPI(`/CursoCrud/${CursoCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(CursoCrudID) {\r\n      return callAPI(`/CursoCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(CursoCrudID)\r\n      });\r\n    }\r\n  },\r\n  IndiNivel:{\r\n    listCb() {\r\n      return callAPI(\"/IndicadorCrud/ListCBIN\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n  },\r\n\r\n  indicadorCrud: {\r\n    list() {\r\n      return callAPI(\"/IndicadorCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    listCb() {\r\n      return callAPI(\"/IndicadorCrud/ListCom\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    ListInxRe(IndicadorCrudID) {\r\n      return callAPI(\"/IndicadorCrud/ListInxRe\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(IndicadorCrudID)\r\n      });\r\n    },\r\n    create(IndicadorCrudID) {\r\n      return callAPI(\"/IndicadorCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(IndicadorCrudID)\r\n      });\r\n    },\r\n    read(IndicadorCrudID) {\r\n      return callAPI(`/IndicadorCrud/${IndicadorCrudID}`);\r\n    },\r\n    update(IndicadorCrudID, updates) {\r\n      return callAPI(`/IndicadorCrud/${IndicadorCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(IndicadorCrudID) {\r\n      return callAPI(`/IndicadorCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(IndicadorCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  cursoObjetivoCrud: {\r\n    list() {\r\n      return callAPI(\"/CursoObjetivoCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    listxCurso(CursoObjetivoCrudID) {\r\n      return callAPI(\"/CursoObjetivoCrud/ListCod_Curso\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(CursoObjetivoCrudID)\r\n      });\r\n    },\r\n    listobxCurso(CursoObjetivoCrudID) {\r\n      return callAPI(\"/CursoObjetivoCrud/ListOBxCod_Curso\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(CursoObjetivoCrudID)\r\n      });\r\n    },\r\n    create(CursoObjetivoCrudID) {\r\n      return callAPI(\"/CursoObjetivoCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(CursoObjetivoCrudID)\r\n      });\r\n    },\r\n    read(CursoObjetivoCrudID) {\r\n      return callAPI(`/CursoObjetivoCrud/${CursoObjetivoCrudID}`);\r\n    },\r\n    update(CursoObjetivoCrudID, updates) {\r\n      return callAPI(`/CursoObjetivoCrud/${CursoObjetivoCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(CursoObjetivoCrudID) {\r\n      return callAPI(`/CursoObjetivoCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(CursoObjetivoCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  objetivoResultadoCrud: {\r\n    list() {\r\n      return callAPI(\"/ObjetivoResultadoCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    listxCurso(ObjetivoResultadoCrudID) {\r\n      return callAPI(\"/ObjetivoResultadoCrud/ListCod_Curso\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(ObjetivoResultadoCrudID)\r\n      });\r\n    },\r\n    listrexCurso(ObjetivoResultadoCrudID) {\r\n      return callAPI(\"/ObjetivoResultadoCrud/ListRExCod_Curso\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(ObjetivoResultadoCrudID)\r\n      });\r\n    },\r\n    create(ObjetivoResultadoCrudID) {\r\n      return callAPI(\"/ObjetivoResultadoCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(ObjetivoResultadoCrudID)\r\n      });\r\n    },\r\n    read(ObjetivoResultadoCrudID) {\r\n      return callAPI(`/ObjetivoResultadoCrud/${ObjetivoResultadoCrudID}`);\r\n    },\r\n    update(ObjetivoResultadoCrudID, updates) {\r\n      return callAPI(`/ObjetivoResultadoCrud/${ObjetivoResultadoCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(ObjetivoResultadoCrudID) {\r\n      return callAPI(`/ObjetivoResultadoCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(ObjetivoResultadoCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  resultadoIndicadorCrud: {\r\n    list() {\r\n      return callAPI(\"/ResultadoIndicadorCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    listreinxCurso(ResultadoIndicadorCrudID) {\r\n      return callAPI(\"/ResultadoIndicadorCrud/ListreinCod_Curso\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(ResultadoIndicadorCrudID)\r\n      });\r\n    },\r\n    \r\n    ListxCurso(IndicadorCrudID) {\r\n      return callAPI(\"/ResultadoIndicadorCrud/ListinCod_Curso\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(IndicadorCrudID)\r\n      });\r\n    },\r\n    create(ResultadoIndicadorCrudID) {\r\n      return callAPI(\"/ResultadoIndicadorCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(ResultadoIndicadorCrudID)\r\n      });\r\n    },\r\n    read(ResultadoIndicadorCrudID) {\r\n      return callAPI(`/ResultadoIndicadorCrud/${ResultadoIndicadorCrudID}`);\r\n    },\r\n    update(ResultadoIndicadorCrudID, updates) {\r\n      return callAPI(`/ResultadoIndicadorCrud/${ResultadoIndicadorCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(ResultadoIndicadorCrudID) {\r\n      return callAPI(`/ResultadoIndicadorCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(ResultadoIndicadorCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  GRubricaCrud: {\r\n    list() {\r\n      return callAPI(\"/GRubricaCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(GRubricaCrud) {\r\n      return callAPI(\"/GRubricaCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(GRubricaCrud)\r\n      });\r\n    },\r\n    read(GRubricaCrud) {\r\n      return callAPI(`/GRubricaCrud/${GRubricaCrud}`);\r\n    },\r\n    update(GRubricaCrudID, updates) {\r\n      return callAPI(`/GRubricaCrud/${GRubricaCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(GRubricaCrudID) {\r\n      return callAPI(`/GRubricaCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(GRubricaCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  GCriterioCrud: {\r\n    list() {\r\n      return callAPI(\"/GCriterioCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(GCriterioCrud) {\r\n      return callAPI(\"/GCriterioCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(GCriterioCrud)\r\n      });\r\n    },\r\n    read(GCriterioCrud) {\r\n      return callAPI(`/GCriterioCrud/${GCriterioCrud}`);\r\n    },\r\n    update(GCriterioCrudID, updates) {\r\n      return callAPI(`/GCriterioCrud/${GCriterioCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(GCriterioCrudID) {\r\n      return callAPI(`/GCriterioCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(GCriterioCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  rubricaCrud: {\r\n    list() {\r\n      return callAPI(\"/rubricaCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(RubricaCrud) {\r\n      return callAPI(\"/rubricaCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(RubricaCrud)\r\n      });\r\n    },\r\n    read(RubricaCrud) {\r\n      return callAPI(`/rubricaCrud/${RubricaCrud}`);\r\n    },\r\n    update(RubricaCrudID, updates) {\r\n      return callAPI(`/rubricaCrud/${RubricaCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(RubricaCrudID) {\r\n      return callAPI(`/rubricaCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(RubricaCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  CriterioCrud: {\r\n    list() {\r\n      return callAPI(\"/criterioCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(CriterioCrud) {\r\n      return callAPI(\"/criterioCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(CriterioCrud)\r\n      });\r\n    },\r\n    read(CriterioCrud) {\r\n      return callAPI(`/criterioCrud/${CriterioCrud}`);\r\n    },\r\n    update(CriterioCrudID, updates) {\r\n      return callAPI(`/criterioCrud/${CriterioCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(CriterioCrudID) {\r\n      return callAPI(`/criterioCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(CriterioCrudID)\r\n      });\r\n    }\r\n  },\r\n\r\n  nivelCrud: {\r\n    list() {\r\n      return callAPI(\"/nivelCrud/List\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    },\r\n    create(NivelCrud) {\r\n      return callAPI(\"/nivelCrud/Guardar\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(NivelCrud)\r\n      });\r\n    },\r\n    read(NivelCrud) {\r\n      return callAPI(`/nivelCrud/${NivelCrud}`);\r\n    },\r\n    update(NivelCrudID, updates) {\r\n      return callAPI(`/nivelCrud/${NivelCrudID}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates)\r\n      });\r\n    },\r\n    remove(NivelCrudID) {\r\n      return callAPI(`/nivelCrud/Del`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(NivelCrudID)\r\n      });\r\n    }\r\n  },\r\n  Reportes: {\r\n    list() {\r\n      // return callAPI(\"/PersonaCrud/List\", {\r\n      //   method: \"GET\",\r\n      //   headers: {\r\n      //     \"Content-Type\": \"application/json\"\r\n      //   }\r\n      // });\r\n    },\r\n    ReporteActividad(Actividad) {\r\n      return callAPI(\"/Reportes/ReportexActividad\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(Actividad)\r\n      });\r\n    },\r\n    ReporteCSV(Actividad) {\r\n      return callAPI(\"/Reportes/ReporteCSV\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(Actividad)\r\n      });\r\n    },\r\n    validate(Actividad) {\r\n      return callAPI(\"/reportes/ValidateReporte\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(Actividad)\r\n      });\r\n    },\r\n  validarIndCri(Actividad) {\r\n    return callAPI(\"/reportes/Validar_RelacionIndCri\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(Actividad)\r\n    });\r\n  }\r\n},\r\n};\r\nexport default API;\r\n","import React from 'react';\r\nimport Pageone from '../pages/Pageone'\r\nimport ReactDOM from 'react-dom'; \r\nimport api from \"../api\";\r\n// var url = 'https://campus.uandina.edu.pe'\r\nvar url = 'http://192.168.0.120'\r\n/** Esta clase define la validacion de credenciales para poder loggearse en el sistema de informacion\r\n   * @author: Luis Huallparimachi Saire y Joel Sumerente Ayerbe\r\n   * @param service: El parametro service permite llamar las funciones del servicio de moodle que se requiera.\r\n   * @param username: El parametro username devuelve al usuario que ingresamos. \r\n   * @param password: El parametro password devuelve al password que ingresamos. \r\n   * @param wstoken: El parametro wstoken devuelve el token que solicitamos.\r\n   * @param wsfunction: La funcion .\r\n   * @param moodlewsrestformat: El parametro moodlewsrestformat permite darnos el formato en el que se mostrara                                 el contenido de la informacion. \r\n   * @version: 2.0 17/09/2019\r\n  */\r\nclass Paglogin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  handleChange = e => { \r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  handleClick = async() => {\r\n    try{      \r\n      const response = await fetch(`${url}/login/token.php?service=moodle_mobile_app&username=${this.state.users}&password=${this.state.password}`);    \r\n      const data = await response.json();\r\n      this.setState({\r\n          token: data.token,\r\n          error: data.error,\r\n          errorcode: data.errorcode,\r\n      });      \r\n    }catch (error) {\r\n    }\r\n    if((this.state.errorcode)==='invalidlogin'){\r\n      alert((this.state.error));\r\n    }\r\n    else{      \r\n      try{      \r\n        const response = await fetch(`${url}/webservice/rest/server.php?wstoken=${this.state.token}&wsfunction=core_webservice_get_site_info&moodlewsrestformat=json`);    \r\n        const data2 = await response.json();\r\n        this.setState({\r\n          username: data2.username,\r\n          firstname: data2.firstname,\r\n          lastname: data2.lastname,\r\n          fullname: data2.fullname,\r\n          userid: data2.userid,\r\n          userprivateaccesskey: data2.userprivateaccesskey,\r\n          userpictureurl: data2.userpictureurl\r\n        });     \r\n      }catch (error) {\r\n      }\r\n      if (typeof (Storage) !== \"undefined\") {        \r\n        sessionStorage.setItem('url', url);\r\n        sessionStorage.setItem('token', (this.state.token));\r\n        sessionStorage.setItem('userid', (this.state.userid))\r\n        console.log('1',(this.state.userid));\r\n        sessionStorage.setItem('fullname', (this.state.fullname))\r\n        sessionStorage.setItem('username', (this.state.username))\r\n        sessionStorage.setItem('userpictureurl', (this.state.userpictureurl))\r\n        const cPersona = {\r\n          Cod_Persona: this.state.userid,\r\n          Nombre: this.state.firstname,\r\n          Apellidos: this.state.lastname,\r\n          NomPersona: this.state.username,\r\n          Correo: this.state.username + '@uandina.edu.pe',\r\n          Grado: 'Teacher'\r\n        };\r\n        await api.personaCrud.create(cPersona);\r\n      }\r\n      else{                     \r\n        sessionStorage.setItem('url', url);\r\n        sessionStorage.setItem('token', (this.state.token));\r\n        sessionStorage.setItem('userid', (this.state.userid))\r\n        sessionStorage.setItem('fullname', (this.state.fullname))\r\n        sessionStorage.setItem('username', (this.state.username))\r\n        sessionStorage.setItem('userpictureurl', (this.state.userpictureurl))\r\n        const cPersona = {\r\n          Cod_Persona: this.state.userid,\r\n          Nombre: this.state.firstname,\r\n          Apellidos: this.state.lastname,\r\n          NomPersona: this.state.username,\r\n          Correo: this.state.username + '@uandina.edu.pe',\r\n          Grado: this.state.userprivateaccesskey\r\n        };\r\n        await api.personaCrud.create(cPersona);\r\n      }\r\n      const container = document.getElementById('root');\r\n      ReactDOM.render(<Pageone/>, container);      \r\n    }\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('Form was submitted');\r\n    console.log(this.state);\r\n  };\r\n  render() {\r\n    return (  \r\n      <div className=\"container General\">\r\n        <div className=\"card\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6\">\r\n            <form className=\"Posicion1\" onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" name=\"users\" value={this.state.users} onChange={this.handleChange} placeholder=\"Nombre de usuario / Correo Electronica\"/>\r\n                <small id=\"user\" className=\"form-text text-muted\"></small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Contraseña\"/>\r\n              </div>\r\n              {/* <div className=\"form-group form-check\">\r\n                <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Recordar nombre de usuario</label>\r\n              </div> */}\r\n              <div className=\"form-group\">                \r\n                <button onClick={() => this.handleClick()} href=\"/pageone\" className  =\"fuente boton btn-lg btn-block\" type= \"button\">ACCEDER</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-6 col-lg-6\">\r\n              <div className=\"Posicion2\">\r\n                <a className=\"color\" href=\"https://erp.uandina.edu.pe/pwd/paso1.php\">¿Olvidó su nombre de usuario o contraseña?</a>\r\n                <p>Las 'Cookies' deben estar habilitadas en su navegador </p>\r\n                <p>Identifiguese usando su cuenta en:</p>\r\n                <button type=\"button\" className=\"btn btn-secondary btn-lg btn-block\"> Iniciar sesion en google </button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Paglogin;","import React from 'react';\r\nimport LoginNavbar from '../components/LoginNavbar';\r\nimport Paglogin from '../components/Paglogin';\r\nclass PLogin extends React.Component {\r\n    render(){\r\n      return(\r\n        <div>\r\n          <LoginNavbar/>\r\n          <Paglogin/>\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default PLogin;","import React from 'react';\r\nimport logo from '../images/LogoUAC.png';\r\nimport './styles/Pageone.css';\r\n// import \"./styles/Paglogin.css\";\r\nimport api from \"../api\";\r\n/** Este componente nos lista los cursos que coindicen con un campo especifico \r\n  * @author: Luis Huallparimachi Saire y Joel Sumerente Ayerbe\r\n   * @param wstoken: El parametro wstoken devuelve el token que solicitamos.\r\n   * @param moodlewsrestformat: El parametro moodlewsrestformat permite darnos el formato en el que se mostrara    el contenido de la informacion. \r\n   * @param wsfunction:La funcion (core_course_get_courses_by_fiel) permite obtener los cursos que coinciden con un campo especifico (id/id's, shortname, idnumber, category).\r\n   * @param cursoid: El parametro cursoid devuelve el id del curso que solicitamos. \r\n   * @version: 1.0 25/12/2019\r\n  */\r\nclass Pagestwo extends React.Component {\r\n  state = {\r\n    data : {\r\n      courses:[\r\n      ],},\r\n    dtAlumno : {}\r\n  };\r\n  componentDidMount(){\r\n    this.traerUsuario();\r\n    this.traerAlumno();\r\n  }\r\n  traerAlumno = async() => {\r\n    try{      \r\n      var URL = (sessionStorage.getItem('url'))+'/webservice/rest/server.php?wstoken='+(sessionStorage.getItem('token'))+\r\n      '&moodlewsrestformat=json&wsfunction=core_enrol_get_enrolled_users&courseid='+(sessionStorage.getItem('cursoid'))\r\n      const response = await fetch(URL);    \r\n      const dtAlumno = await response.json();\r\n      this.setState({\r\n        dtAlumno : dtAlumno,\r\n      });       \r\n    }      \r\n    catch (error) {\r\n      }   \r\n    this.state.dtAlumno.forEach(element => {\r\n      if (element.idnumber == null) {\r\n        this.createUsuario(element.id, element.firstname, element.lastname, element.email.replace('@uandina.edu.pe', ''), element.email, 'Student');\r\n      }    \r\n    });\r\n  };\r\n  createUsuario = async (pCod_Persona, pNombre, pApellidos, pNomPersona, pCorreo, pGrado) => {\r\n    const cPersona = {\r\n      Cod_Persona: pCod_Persona,\r\n      Nombre: pNombre,\r\n      Apellidos: pApellidos,\r\n      NomPersona: pNomPersona,\r\n      Correo: pCorreo,\r\n      Grado: pGrado\r\n    };\r\n    await api.personaCrud.create(cPersona);\r\n  };\r\n  traerUsuario = async() => {\r\n    try{      \r\n      var URL = (sessionStorage.getItem('url'))+'/webservice/rest/server.php?wstoken='+(sessionStorage.getItem('token'))+\r\n      '&moodlewsrestformat=json&wsfunction=core_course_get_courses_by_field&field=id&value='+(sessionStorage.getItem('cursoid'))\r\n      const response = await fetch(URL);    \r\n      const dataC = await response.json();\r\n      this.setState({\r\n        data : dataC,\r\n      }); \r\n    }      \r\n    catch (error) {\r\n    }   \r\n    const cCurso = {\r\n      Cod_Curso: this.state.data.courses[0].id,\r\n      NomCurso: this.state.data.courses[0].fullname,\r\n      Descripcion: this.state.data.courses[0].categoryname,\r\n      Docente: this.state.data.courses[0].contacts[0].fullname,\r\n      Semestre: this.state.data.courses[0].shortname\r\n    };\r\n    await api.cursoCrud.create(cCurso);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\"> \r\n        {this.state.data.courses.map(cursos => (\r\n          <div> \r\n            <div className=\"centro\">                  \r\n              <h1>{cursos.displayname}</h1>    \r\n            </div>  \r\n            <div className=\"row\">            \r\n              {/* <div className=\"col-lg-3\">\r\n                <div className=\"card General\">\r\n                  <div className=\"col d-none d-lg-block \">\r\n                   <img className=\"card-img-top styleimagen\" src={logo} alt=\"Imagen\" />\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <p className=\"center card-title color\">Objetivos</p>\r\n                    <p className=\"center card-title color\">Educacionales</p>\r\n                    <a className=\"fuente btn-lg btn-block\" href={\"/pagesix/cursoid:\"+(cursos.id)} role=\"button\">VER</a>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"card General\">\r\n                  <div className=\"col d-none d-lg-block \">\r\n                    <img className=\"card-img-top styleimagen\" src={logo} alt=\"Imagen\" />\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <p className=\"center card-title color\">Resultados</p>\r\n                    <p className=\"center card-title color\">del Estudiante</p>\r\n                    <a className=\"fuente btn-lg btn-block\" href={\"/pagefive/cursoid:\"+(cursos.id)} role=\"button\">VER</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"card General\">\r\n                  <div className=\"col d-none d-lg-block \">\r\n                   <img className=\"card-img-top styleimagen\" src={logo} alt=\"Imagen\" />\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <p className=\"center card-title color\">Indicadores</p>\r\n                    <p className=\"center card-title color\">Desempeño</p>\r\n                    <a className=\"fuente btn-lg btn-block\" href={\"/pagenine/cursoid:\"+(cursos.id)} role=\"button\">VER</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"card General\">\r\n                  <div className=\"col d-none d-lg-block \">\r\n                    <img className=\"card-img-top styleimagen\" src={logo} alt=\"Imagen\" />\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <p className=\"center card-title color\">Actividades</p>\r\n                    <p className=\"center card-title color\">del Curso</p>\r\n                    <a className=\"fuente btn-lg btn-block\" href={\"/pagethree/cursoid:\"+(cursos.id)} role=\"button\">VER</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> \r\n          </div>\r\n        ))}\r\n        </div>\r\n        {/* \r\n         */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagestwo;","import React from 'react';\r\nimport Pagestwo from '../components/Pagestwo';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass Pagetwo extends React.Component {\r\n   render(){\r\n    return(      \r\n      <div>   \r\n       <LoginNavbarUser/>\r\n       <p>{this.props.params}</p>\r\n        <Pagestwo/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagetwo;","import React from \"react\";\r\nimport api from \"../api\";\r\nimport { Button } from \"primereact/button\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Page, Text, View, Document, StyleSheet, PDFViewer,} from \"@react-pdf/renderer\";\r\nimport { Table, TableHeader, TableCell, DataTableCell, TableBody,} from \"@david.kucsai/react-pdf-table\";\r\nimport { PDFDocument, PDFText, PDFTable, PDFTableRow, PDFTableColumn, PDFColumns, PDFColumn,} from \"react-pdfmake\";\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: \"center\",\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 12,\r\n    margin: 12,\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: \"justify\",\r\n  },\r\n  image: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 100,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  pageNumber: {\r\n    position: \"absolute\",\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n});\r\nclass ModalRepor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dtReporteActividad: [],\r\n      dtResultadoIndicador: [],\r\n      dtAlumno: [],\r\n      dtTAlumno: [],\r\n      dtActividadFinal: [],\r\n      visible : false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const cResultadoIndicador = {\r\n      Cod_Curso: sessionStorage.getItem(\"cursoid\"),\r\n    };\r\n      // this.traerReporte(sessionStorage.getItem(\"cursoid\"), 2, 1);\r\n    this.traerResultadoIndicador(cResultadoIndicador);\r\n  }\r\n\r\n  \r\n\r\n  traerResultadoIndicador = async (cResultadoIndicador) => {\r\n    try {\r\n      const dtResultadoIndicador = await api.resultadoIndicadorCrud.listreinxCurso(\r\n        cResultadoIndicador\r\n      );\r\n      this.setState({\r\n        dtResultadoIndicador: dtResultadoIndicador.resultadoIndicadors,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerAlumno = async () => {\r\n    try {\r\n      var URL =\r\n        sessionStorage.getItem(\"url\") +\r\n        \"/webservice/rest/server.php?wstoken=\" +\r\n        sessionStorage.getItem(\"token\") +\r\n        \"&moodlewsrestformat=json&wsfunction=core_enrol_get_enrolled_users&courseid=\" +\r\n        sessionStorage.getItem(\"cursoid\");\r\n      const response = await fetch(URL);\r\n      const dtAlumno = await response.json();\r\n      this.setState({\r\n        dtTAlumno: dtAlumno,\r\n      });\r\n    } catch (error) {}\r\n    this.state.dtTAlumno.forEach((element) => {\r\n      if (element.institution == null) {\r\n        const nrow = {\r\n          Cod_Persona: element.id,\r\n          Nombres: element.firstname,\r\n          Apellidos: element.lastname,\r\n          Codigo: element.email.replace(\"@uandina.edu.pe\", \"\"),\r\n        };\r\n        this.setState({\r\n          dtAlumno: [].concat(this.state.dtAlumno, nrow),\r\n          displayDialog: true,\r\n        });\r\n      }\r\n    });\r\n    this.sacarpromedio();\r\n  };\r\n  traerReporte = async (pCod_Curso, pCod_Unidad, pId_Asignacion) => {\r\n    try {\r\n      const crubrica = {\r\n        Cod_Curso: pCod_Curso, Cod_Unidad: pCod_Unidad, Id_Asignacion: pId_Asignacion,\r\n      };\r\n      const dtReporteActividad = await api.Reportes.ReporteActividad(crubrica);\r\n      this.setState({\r\n        dtReporteActividad: dtReporteActividad.RepoActividad,\r\n      });\r\n      this.traerAlumno();\r\n    } catch (error) {}\r\n  };\r\n  sacarpromedio() {\r\n    var appJson = [];\r\n    for (let index = 0; index < this.state.dtAlumno.length; index++) {\r\n      let element = {\r\n        Codigo: this.state.dtAlumno[index].Codigo,\r\n        Nombres: this.state.dtAlumno[index].Nombres,\r\n        Apellidos: this.state.dtAlumno[index].Apellidos,\r\n        id: this.state.dtAlumno[index].Cod_Persona,\r\n        Notas: [],\r\n      }; \r\n      appJson.push(element);\r\n      for ( let indexy = 0; indexy < this.state.dtReporteActividad.length; indexy++) {\r\n        if (\r\n          this.state.dtAlumno[index].Cod_Persona ==\r\n          this.state.dtReporteActividad[indexy].Cod_Persona\r\n        ) {\r\n          let pNotas = {\r\n            Asignacion: this.state.dtReporteActividad[indexy].NomAsignacion,\r\n            Des_Criterio: this.state.dtReporteActividad[indexy].DesCriterio,\r\n            Puntaje: this.state.dtReporteActividad[indexy].PuntajeFinal,\r\n            Indicador: this.state.dtReporteActividad[indexy].Cod_Indicador,\r\n            Resultado: this.state.dtReporteActividad[indexy].Cod_Resultado,\r\n          };\r\n          element.Notas.push(pNotas);\r\n        }\r\n      }\r\n    }\r\n    var app2Json = [];\r\n    for (let index = 0; index < appJson.length; index++) {\r\n      let element = {\r\n        Codigo: appJson[index].Codigo,\r\n        Nombres: appJson[index].Nombres,\r\n        Apellidos: appJson[index].Apellidos,\r\n        id: appJson[index].id,\r\n        Indicadores: [],\r\n      };\r\n      app2Json.push(element);\r\n      for (\r\n        let indexy = 0;\r\n        indexy < this.state.dtResultadoIndicador.length;\r\n        indexy++\r\n      ) {\r\n        let Indicadores = {\r\n          Indicador: this.state.dtResultadoIndicador[indexy]\r\n            .Cod_IndicarResultado,\r\n          Nom_Indicador: this.state.dtResultadoIndicador[indexy]\r\n            .Cod_Indicador,\r\n          Detalle: [],\r\n        };\r\n        element.Indicadores.push(Indicadores);\r\n        for (let indexz = 0; indexz < appJson[index].Notas.length; indexz++) {\r\n          var cadena =\r\n            sessionStorage.getItem(\"cursoid\")+\r\n            \"-\" +\r\n            appJson[index].Notas[indexz].Resultado +\r\n            \"-\" +\r\n            appJson[index].Notas[indexz].Indicador;\r\n            // console.log(cadena);\r\n          if (\r\n            this.state.dtResultadoIndicador[indexy].Cod_IndicarResultado ==\r\n            cadena\r\n          ) {\r\n            let pNotas = {\r\n              Criterio: appJson[index].Notas[indexz].Des_Criterio,\r\n              Puntaje: appJson[index].Notas[indexz].Puntaje,\r\n            };\r\n            Indicadores.Detalle.push(pNotas);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var app3Json = [];\r\n    for (let index = 0; index < app2Json.length; index++) {\r\n      let element = {\r\n        Codigo: appJson[index].Codigo,\r\n        Nombres: appJson[index].Nombres,\r\n        Apellidos: appJson[index].Apellidos,\r\n        id: appJson[index].id,\r\n        Indicadores: [],\r\n      };\r\n      app3Json.push(element);\r\n      for (\r\n        let indexy = 0;\r\n        indexy < app2Json[index].Indicadores.length;\r\n        indexy++\r\n      ) {\r\n        var cantidad = app2Json[index].Indicadores[indexy].Detalle.length;\r\n        var suma = 0;\r\n        for (\r\n          let x = 0;\r\n          x < app2Json[index].Indicadores[indexy].Detalle.length;\r\n          x++\r\n        ) {\r\n          suma = suma + app2Json[index].Indicadores[indexy].Detalle[x].Puntaje;\r\n        }\r\n        var Nota = suma / cantidad;\r\n        if (Nota >= 0 && Nota <= 1) {\r\n          // console.log('1');\r\n          Nota = Nota;\r\n        }else{\r\n          // console.log('0');   \r\n          Nota = 0;       \r\n        }\r\n        let Indicadores = {\r\n          Indicador: app2Json[index].Indicadores[indexy].Indicador,\r\n          Nom_Indicador: app2Json[index].Indicadores[indexy].Nom_Indicador,\r\n          Nota: Nota,\r\n          Detalle: [],\r\n        };\r\n        element.Indicadores.push(Indicadores);\r\n        for (\r\n          let x = 0;\r\n          x < app2Json[index].Indicadores[indexy].Detalle.length;\r\n          x++\r\n        ) {\r\n          let pNotas = {\r\n            Criterio: app2Json[index].Indicadores[indexy].Detalle[x].Criterio,\r\n            Puntaje: app2Json[index].Indicadores[indexy].Detalle[x].Puntaje,\r\n          };\r\n          Indicadores.Detalle.push(pNotas);\r\n        }\r\n      }\r\n    }\r\n    // console.log(app3Json);\r\n    this.setState({\r\n      dtActividadFinal: app3Json,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          header=\"REPORTE INDICADOR DE DESEMPEÑO\"\r\n          visible={this.state.visible}\r\n          footer={this.footer}\r\n          style={{ width: \"50vw\" }}\r\n          modal={true}\r\n          onHide={() => this.setState({ visible: false })}\r\n        >\r\n          <PDFViewer width=\"790\" height=\"700\">\r\n            <Document>\r\n              <Page style={styles.body}>\r\n                <Text style={styles.header} fixed>\r\n                  ~ Escuela Profesional de Ingeneria de Sistemas ~\r\n                </Text>\r\n                <Text style={styles.title}>Indicador</Text>\r\n                {this.state.dtActividadFinal.map((Persona) => (\r\n                  <View\r\n                    style={{ color: \"Black\", textAlign: \"center\", margin: 5 }}\r\n                  >\r\n                    <Text style={styles.subtitle}>{Persona.Codigo + ' ' + Persona.Apellidos + ', ' + Persona.Nombres}</Text>\r\n                      <Table\r\n                        data={Persona.Indicadores}                      \r\n                      >                       \r\n                        <TableHeader textAlign={\"center\"}>\r\n                          <TableCell>INDICADOR DE DESEMPEÑO</TableCell>\r\n                          <TableCell>NOTA</TableCell>\r\n                        </TableHeader>\r\n                        <TableBody textAlign={\"center\"}>\r\n                        <DataTableCell getContent={(r) => r.Nom_Indicador}/>\r\n                        <DataTableCell getContent={(r) => r.Nota}/>    \r\n                        </TableBody>\r\n                      </Table>\r\n                  </View>\r\n                ))}\r\n              </Page>\r\n            </Document>\r\n          </PDFViewer>\r\n        </Dialog>\r\n        <Button\r\n          label={this.props.sms}\r\n          onClick={(e) => this.setState({ visible: true })}\r\n          onc\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ModalRepor;","import React from 'react';\r\nimport logo from '../images/LogoUAC.png';\r\nimport './styles/Pageone.css';\r\n\r\n// import './styles/Paglogin.css';\r\nimport ModalRepor from \"./ModalRepor\" ;\r\n/** Este componente lista el contenido del curso, como son las actividades traidas por Unidades\r\n   * @author: Luis Huallparimachi Saire y Joel Sumerente Ayerbe\r\n   * @param wstoken: El parametro wstoken devuelve el token que solicitamos.\r\n   * @param moodlewsrestformat: El parametro moodlewsrestformat permite darnos el formato en el que se mostrara    el contenido de la informacion. \r\n   * @param wsfunction: El parametro wsfunction permite llamar al metodo del servicio de moodle.\r\n   * La funcion (core_course_get_contents) permite obtener el contenido del curso (modulo+ URL                        de archivo de servicio web).       \r\n   * @param cursoid: El parametro cursoid devuelve el id del curso que solicitamos. \r\n   * @version: 1.0 03/01/2020\r\n  */\r\nclass Pagesthree extends React.Component { \r\n  state = {\r\n    data : [     \r\n    ],\r\n  }\r\n  componentDidMount(){\r\n    this.traerUnidades();\r\n  }\r\n  traerUnidades = async() => {\r\n    try{      \r\n      var URL = (sessionStorage.getItem('url'))+'/webservice/rest/server.php?wstoken='+(sessionStorage.getItem('token'))+\r\n      '&moodlewsrestformat=json&wsfunction=core_course_get_contents&courseid='+(sessionStorage.getItem('cursoid'))\r\n      const response = await fetch(URL);    \r\n      const data = await response.json();\r\n      this.setState({\r\n        data : data\r\n      }); \r\n      }\r\n    catch (error) {\r\n    }    \r\n  };\r\n  render() {\r\n    return (  \r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"centro\">\r\n          <h1>{sessionStorage.getItem('fullnameCu')}</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row abajo\">\r\n          {this.state.data.map(unidad =>(\r\n            unidad.name !== 'Generalidades' && unidad.name !== 'Recursos Adicionales' ? (\r\n            <div className=\"col-lg-4\" id={unidad.id}>\r\n            <a type=\"button\" className=\"btn fuente\" href={\"/Pagefour/unidadid:\"+(unidad.id)} \r\n              onClick={() => sessionStorage.setItem('unidadId', (unidad.id))}>\r\n              <div className=\"card General\">\r\n                <div className=\"card text-black center\">\r\n                  <h2>{unidad.name}</h2>\r\n                  <img src={logo} className=\"card-img styleimagen\" href={\"/Pagefour/unidadid:\"+(unidad.id)} alt=\"logo\"/>\r\n                  <div className=\"card-img-overlay\"></div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          ):<div></div> ))}   \r\n      </div>\r\n    </div>  \r\n    )\r\n  } \r\n}\r\nexport default Pagesthree;","import React from 'react';\r\nimport Pagesthree from '../components/Pagesthree';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass Pagethree extends React.Component {\r\n  render(){\r\n    return(\r\n      <div>\r\n        <LoginNavbarUser/>\r\n        <Pagesthree/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagethree;","import React from 'react';\r\nimport './styles/ButtonActions.css';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport api from \"../api\";\r\nimport {Checkbox} from 'primereact/checkbox';\r\n// import Iframe from 'react-iframe'\r\n\r\nclass ButtonActions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        gradingsummary: {\r\n          participantcount: {},\r\n          submissionssubmittedcount: {},\r\n        },\r\n        warnings: [],\r\n      },\r\n      checked: false,\r\n      valor: false,\r\n    }\r\n    this.onCheckChange = this.onCheckChange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.traerUsuario();\r\n    const cEstado = {\r\n      Cod_Curso: sessionStorage.getItem(\"cursoid\"),\r\n      Cod_Asignacion : (this.props.cid),\r\n      Id_Asignacion : (this.props.id)\r\n    };\r\n    const cValidar = {\r\n      Cod_Curso: sessionStorage.getItem(\"cursoid\"),\r\n      Cod_Rubrica : \"R\"+(this.props.id)\r\n    };\r\n    this.traerEstado(cEstado);\r\n    this.traerValidar(cValidar);\r\n  }\r\n\r\n  AEstado = async (pFlag_Estado) =>{\r\n    const cAsignacion = {\r\n      Cod_Curso : sessionStorage.getItem(\"cursoid\"),\r\n      Cod_Asignacion : (this.props.cid),\r\n      Flag_Estado: pFlag_Estado,\r\n      Id_Asignacion : (this.props.id)\r\n    };    \r\n    await api.asignacionCrud.AEstado(cAsignacion);\r\n    //  console.log(cAsignacion);\r\n  }\r\n\r\n  onCheckChange(e){\r\n      this.setState({\r\n        checked: e.checked,\r\n      });\r\n      this.AEstado(e.checked);\r\n  }\r\n\r\n  traerEstado = async cEstado => {\r\n    try {\r\n      const Checked = await api.asignacionCrud.TEstado(\r\n        cEstado\r\n      );\r\n      this.setState({\r\n        checked: Checked.RubricaAsignacion\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  traerValidar = async cValiEstado => {\r\n    try {\r\n      const validacion = await api.asignacionCrud.TEstadoValidacion(\r\n        cValiEstado\r\n      );\r\n      this.setState({\r\n        valor: validacion.RubricaAsignacion[0].MERROR\r\n      });\r\n      // console.log(this.props.id+validacion.RubricaAsignacion[0].MERROR);\r\n    } catch (error) {}\r\n    \r\n  };\r\n\r\n  traerUsuario = async () => {\r\n    try {\r\n      var URL = (sessionStorage.getItem('url')) + '/webservice/rest/server.php?wstoken=' + (sessionStorage.getItem('token')) +\r\n        '&moodlewsrestformat=json&wsfunction=mod_assign_get_submission_status&assignid=' + (this.props.id)\r\n      const response = await fetch(URL);\r\n      const data = await response.json();\r\n      this.setState({\r\n        data: {\r\n          gradingsummary: {\r\n            participantcount: data.gradingsummary.participantcount,\r\n            submissiondraftscount: data.gradingsummary.submissiondraftscount,\r\n            submissionssubmittedcount: data.gradingsummary.submissionssubmittedcount,\r\n            submissionsneedgradingcount: data.gradingsummary.submissionsneedgradingcount\r\n          },\r\n          warnings: data.warnings\r\n        },\r\n      });\r\n    }\r\n    catch (error) {\r\n    }\r\n    this.updateAsignacion(this.props.cid, this.state.data.gradingsummary.participantcount, this.state.data.gradingsummary.submissionssubmittedcount, this.state.data.gradingsummary.submissionsneedgradingcount);\r\n  };\r\n  updateAsignacion = async(pCod_Asignacion, pParticipantes, pPresentados, pPendientes) =>{\r\n    const cAsignacion = {\r\n      Cod_Asignacion : pCod_Asignacion,\r\n      Participantes : pParticipantes,\r\n      Presentados : pPresentados,\r\n      Pendientes : pPendientes\r\n    };    \r\n    await api.asignacionCrud.upAsignacion(cAsignacion);\r\n  }\r\nrender(){\r\nreturn (\r\n<div>\r\n  <div>\r\n  </div>\r\n  <div>\r\n    <ul className=\"nav\">\r\n    <li className=\"nav-item\">\r\n    <a className=\"nav-link entrespacios\" data-toggle=\"tooltip\" data-placement=\"top\" title={this.props.id}>\r\n        <Checkbox onChange={this.onCheckChange} checked={this.state.checked}  ></Checkbox>\r\n        {/* <input type=\"checkbox\" onChange={this.onCheckChange} checked={this.state.checked} readOnly={this.state.valor}></input> */}\r\n        </a>\r\n      </li>     \r\n      \r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link entrespacios\"  data-toggle=\"tooltip\" data-placement=\"top\" title={'Calificar '+ (this.state.data.gradingsummary.submissionsneedgradingcount)}>\r\n                <i class=\"fas fa-file\"></i><span className=\"sr-only\"></span></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link entrespacios\" data-toggle=\"tooltip\" data-placement=\"top\"\r\n               title={' Falta Entregar '+ (this.state.data.gradingsummary.submissionssubmittedcount)}>\r\n                <i class=\"fas fa-archive\"></i><span className=\"sr-only\"></span></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link entrespacios\"  data-toggle=\"tooltip\" data-placement=\"top\" title={this.state.data.gradingsummary.participantcount}>\r\n                <i class=\"fas fa-user\" onClick={this.toggle}></i><span className=\"sr-only\"></span></a>\r\n                \r\n            </li>\r\n        </ul>\r\n       </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ButtonActions;","import React from \"react\";\r\nimport PagesEdit from \"../components/PagesEdit\";\r\nimport LoginNavbarUser from \"../components/LoginNavbarUser\";\r\nimport api from \"../api\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Growl } from \"primereact/growl\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport { Dialog } from \"primereact/dialog\";\r\n// import { Toast } from 'primereact/toast';\r\n\r\nclass PageIndicadorCriterio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dtRubrica: [],\r\n      dtsRubrica: [],\r\n      dtIndicadores: [],\r\n      deleteProductDialog: false,\r\n    };\r\n    this.IndicadorEditor = this.IndicadorEditor.bind(this);\r\n    this.addNew = this.addNew.bind(this);\r\n    this.actionTemplate = this.actionTemplate.bind(this); \r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.traerRubrica(\r\n      sessionStorage.getItem(\"cursoid\"),\r\n      this.props.Cid,\r\n      this.props.id\r\n    );\r\n    // console.log(sessionStorage.getItem(\"cursoid\"),\r\n    // this.props.Cid,\r\n    // this.props.id);\r\n    this.traerIndidacor(sessionStorage.getItem(\"cursoid\"));\r\n  }\r\n  traerRubrica = async (pCod_Curso, pCod_Asignacion, pId_Asignacion) => {\r\n    try {\r\n      const rubrica = {\r\n        Cod_Curso: pCod_Curso,\r\n        Cod_Asignacion: pCod_Asignacion,\r\n        Id_Asignacion: pId_Asignacion,\r\n      };\r\n      const dtRubrica = await api.asignacionCrud.rubricalist(rubrica);\r\n      this.setState({\r\n        dtRubrica: dtRubrica.RubricaAsignacion,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerIndidacor = async (pCod_Curso) => {\r\n    try {\r\n      const cIndicador = {\r\n        Cod_Curso: pCod_Curso,\r\n      };\r\n      const dtIndicadores = await api.resultadoIndicadorCrud.ListxCurso(\r\n        cIndicador\r\n      );\r\n      this.setState({\r\n        dtIndicadores: dtIndicadores.resultadoIndicadors,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  onEditorValueChange(props, value, Cod_Resultado) {\r\n    let updatedCars = [...props.value];\r\n    console.log(Cod_Resultado);\r\n    if (Cod_Resultado == null || Cod_Resultado == \"\") {\r\n      Cod_Resultado = \"0\";\r\n    }\r\n    updatedCars[props.rowIndex][props.field] = value;\r\n    this.setState({ cars1: updatedCars });\r\n    this.createIndicadorAsignacion(\r\n      sessionStorage.getItem(\"cursoid\"),\r\n      \"R\" + this.props.id,\r\n      \"C\" + this.props.id + updatedCars[props.rowIndex].NivelCriterio,\r\n      updatedCars[props.rowIndex].NivelCriterio,\r\n      updatedCars[props.rowIndex][props.field],\r\n      Cod_Resultado\r\n    );\r\n  }\r\n  createIndicadorAsignacion = async (\r\n    pCod_Curso,\r\n    pCod_Rubrica,\r\n    pCod_Criterio,\r\n    pNivelCriterio,\r\n    pCod_Resultado,\r\n    pTCod_Resultado\r\n  ) => {\r\n    const cIndicadorAsignacion = {\r\n      Cod_Curso: pCod_Curso,\r\n      Cod_Rubrica: pCod_Rubrica,\r\n      Cod_Criterio: pCod_Criterio,\r\n      NivelCriterio: pNivelCriterio,\r\n      Cod_Resultado: pCod_Resultado,\r\n      TCod_Resultado: pTCod_Resultado,\r\n    };\r\n    // console.log(cIndicadorAsignacion);\r\n    await api.asignacionIndicadorCrud.create(cIndicadorAsignacion);\r\n  };\r\n  IndicadorEditor(props) {\r\n    return (\r\n      <Dropdown\r\n        name=\"value\"\r\n        value={props.value[props.rowIndex].Cod_Resultado}\r\n        options={this.state.dtIndicadores}\r\n        onChange={(e) =>\r\n          this.onEditorValueChange(\r\n            props,\r\n            e.value,\r\n            props.value[props.rowIndex].Cod_Resultado\r\n          )\r\n        }\r\n        style={{ textAlign: \"center\", width: \"100%\" }}\r\n        placeholder=\"Select a Indicador\"\r\n      />\r\n    );\r\n  }\r\n  addNew(rowData) {\r\n    const nrow = [\r\n      {\r\n        Cod_Asignacion: rowData.Cod_Asignacion,\r\n        Id_Asignacion: rowData.Id_Asignacion,\r\n        NomRubrica: rowData.NomRubrica,\r\n        NivelCriterio: rowData.NivelCriterio,\r\n        DesCriterio: rowData.DesCriterio,\r\n        Cod_Resultado: \"\",\r\n      },\r\n    ];\r\n    this.newCar = true;\r\n    this.setState({\r\n      dtRubrica: [].concat(this.state.dtRubrica, nrow),\r\n      displayDialog: true,\r\n    });\r\n  }\r\n  DeleteNew(rowData) {\r\n    const nrow = [\r\n      {\r\n        Cod_Asignacion: rowData.Cod_Asignacion,\r\n        Id_Asignacion: rowData.Id_Asignacion,\r\n        NomRubrica: rowData.NomRubrica,\r\n        NivelCriterio: rowData.NivelCriterio,\r\n        DesCriterio: rowData.DesCriterio,\r\n        Cod_Resultado: \"\",\r\n      },\r\n    ];\r\n    let temp2Rubrica = this.state.dtRubrica.filter(val =>  val.Cod_AsignacionIndicador !== rowData.Cod_AsignacionIndicador);\r\n    \r\n    this.setState({\r\n      dtRubrica : temp2Rubrica,\r\n    })\r\n    this.deleteCriterio(rowData.Cod_AsignacionIndicador)\r\n    // this.toast.show({ severity: 'success', summary: 'Successful', detail: 'criterio Deleted', life: 3000 });\r\n  }\r\n  deleteCriterio = async (dCod_Escuela) => {\r\n    const pCod_Escuela = {\r\n      Cod_Asignacion: dCod_Escuela\r\n    };\r\n    console.log(pCod_Escuela);\r\n    await api.asignacionIndicadorCrud.remove(pCod_Escuela);\r\n  };\r\n\r\n  deleteSelectedProducts() {\r\n    let dteRubrica = this.state.dtRubrica.filter(val => !this.state.selectedProducts.includes(val));\r\n    this.setState({\r\n        dteRubrica\r\n    });\r\n    this.toast.show({ severity: 'success', summary: 'Successful', detail: 'criterio Deleted', life: 3000 });\r\n  }\r\n\r\n  refreshPage() {\r\n    window.location.reload(true);\r\n  }\r\n  actionTemplate(rowData) {\r\n    return (\r\n      <div>\r\n        <Button\r\n          type=\"button\"\r\n          icon=\"pi pi-plus\"\r\n          className=\"p-button-success\"\r\n          style={{ marginRight: \".4em\" }}\r\n          onClick={(e) => this.addNew(rowData)}\r\n        />\r\n        <Button\r\n          type=\"button\"\r\n          icon=\"pi pi-times\"\r\n          className=\"p-button-danger\"\r\n          style={{ marginRight: \".4em\" }}\r\n          onClick={(e) => this.DeleteNew(rowData)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  footer = (\r\n    <div>\r\n      {/* <Button\r\n        label=\"Aceptar\"\r\n        icon=\"pi pi-check\"\r\n        onClick={this.onHide}\r\n      /> */}\r\n    </div>\r\n  );\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Toast ref={(el) => this.toast = el} /> */}\r\n        <Dialog\r\n          header={this.props.name + this.props.id + \" \" + this.props.Cid}\r\n          visible={this.state.visible}\r\n          footer={this.footer}\r\n          style={{ width: \"50vw\" }}\r\n          modal={true}\r\n          onHide={() => this.setState({ visible: false })}\r\n        >\r\n          <Growl ref={(el) => (this.growl = el)} />\r\n          <DataTable\r\n            value={this.state.dtRubrica}\r\n            rowGroupMode=\"rowspan\"\r\n            groupField=\"DesCriterio\"\r\n            responsive={true}\r\n            sortOrder={1}\r\n            sortField=\"DesCriterio\"\r\n            responsive={true}\r\n          >\r\n            <Column\r\n              field=\"DesCriterio\"\r\n              header=\"Criterio\"\r\n              style={{ textAlign: \"center\", width: \"2em\" }}\r\n            />\r\n            <Column\r\n              header=\"Indicador\"\r\n              field=\"Cod_Resultado\"\r\n              editor={this.IndicadorEditor}\r\n              style={{ textAlign: \"left\", width: \"3.5em\" }}\r\n            />\r\n            <Column\r\n              body={this.actionTemplate}\r\n              style={{ textAlign: \"center\", width: \"4em\" }}\r\n            />\r\n          </DataTable>\r\n        </Dialog>\r\n        <Button\r\n          label={this.props.name}\r\n          onClick={(e) => this.setState({ visible: true })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageIndicadorCriterio;\r\n","import React from \"react\";\r\nimport api from \"../api\";\r\nimport { Button } from \"primereact/button\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Page, Text, View, Document, StyleSheet, PDFViewer,} from \"@react-pdf/renderer\";\r\nimport { Table, TableHeader, TableCell, DataTableCell, TableBody,} from \"@david.kucsai/react-pdf-table\";\r\nimport { PDFDocument, PDFText, PDFTable, PDFTableRow, PDFTableColumn, PDFColumns, PDFColumn,} from \"react-pdfmake\";\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: \"center\",\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 12,\r\n    margin: 12,\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: \"justify\",\r\n  },\r\n  image: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 100,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  pageNumber: {\r\n    position: \"absolute\",\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n});\r\nclass ModalRepor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dtReporteActividad: [],\r\n      dtResultadoIndicador: [],\r\n      dtAlumno: [],\r\n      dtTAlumno: [],\r\n      dtActividadFinal: [],\r\n      reporte: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const cResultadoIndicador = {\r\n      Cod_Curso: sessionStorage.getItem(\"cursoid\"),\r\n    };\r\n    if (this.state.reporte == true) {\r\n      this.traerReporte(sessionStorage.getItem(\"cursoid\"), 2, 1);  \r\n    }    \r\n    this.traerResultadoIndicador(cResultadoIndicador);\r\n  }\r\n  traerResultadoIndicador = async (cResultadoIndicador) => {\r\n    try {\r\n      const dtResultadoIndicador = await api.resultadoIndicadorCrud.listreinxCurso(\r\n        cResultadoIndicador\r\n      );\r\n      this.setState({\r\n        dtResultadoIndicador: dtResultadoIndicador.resultadoIndicadors,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerAlumno = async () => {\r\n    try {\r\n      var URL =\r\n        sessionStorage.getItem(\"url\") +\r\n        \"/webservice/rest/server.php?wstoken=\" +\r\n        sessionStorage.getItem(\"token\") +\r\n        \"&moodlewsrestformat=json&wsfunction=core_enrol_get_enrolled_users&courseid=\" +\r\n        sessionStorage.getItem(\"cursoid\");\r\n      const response = await fetch(URL);\r\n      const dtAlumno = await response.json();\r\n      this.setState({\r\n        dtTAlumno: dtAlumno,\r\n      });\r\n    } catch (error) {}\r\n    this.state.dtTAlumno.forEach((element) => {\r\n      if (element.institution == null) {\r\n        const nrow = {\r\n          Cod_Persona: element.id,\r\n          Nombres: element.firstname,\r\n          Apellidos: element.lastname,\r\n          Codigo: element.email.replace(\"@uandina.edu.pe\", \"\"),\r\n        };\r\n        this.setState({\r\n          dtAlumno: [].concat(this.state.dtAlumno, nrow),\r\n          displayDialog: true,\r\n        });\r\n      }\r\n    });\r\n    this.sacarpromedio();\r\n  };\r\n  traerReporte = async (pCod_Curso, pCod_Unidad, pId_Asignacion) => {\r\n    try {\r\n      const crubrica = {\r\n        Cod_Curso: pCod_Curso, Cod_Unidad: pCod_Unidad, Id_Asignacion: pId_Asignacion,\r\n      };\r\n      const dtReporteActividad = await api.Reportes.ReporteActividad(crubrica);\r\n      this.setState({\r\n        dtReporteActividad: dtReporteActividad.RepoActividad,\r\n      });\r\n      this.traerAlumno();\r\n    } catch (error) {}\r\n  };\r\n  sacarpromedio() {\r\n    var appJson = [];\r\n    for (let index = 0; index < this.state.dtAlumno.length; index++) {\r\n      let element = {\r\n        Codigo: this.state.dtAlumno[index].Codigo,\r\n        Nombres: this.state.dtAlumno[index].Nombres,\r\n        Apellidos: this.state.dtAlumno[index].Apellidos,\r\n        id: this.state.dtAlumno[index].Cod_Persona,\r\n        Notas: [],\r\n      }; \r\n      appJson.push(element);\r\n      for ( let indexy = 0; indexy < this.state.dtReporteActividad.length; indexy++) {\r\n        if (\r\n          this.state.dtAlumno[index].Cod_Persona ==\r\n          this.state.dtReporteActividad[indexy].Cod_Persona\r\n        ) {\r\n          let pNotas = {\r\n            Asignacion: this.state.dtReporteActividad[indexy].NomAsignacion,\r\n            Des_Criterio: this.state.dtReporteActividad[indexy].DesCriterio,\r\n            Puntaje: this.state.dtReporteActividad[indexy].PuntajeFinal,\r\n            Indicador: this.state.dtReporteActividad[indexy].Cod_Indicador,\r\n            Resultado: this.state.dtReporteActividad[indexy].Cod_Resultado,\r\n          };\r\n          element.Notas.push(pNotas);\r\n        }\r\n      }\r\n    }\r\n    var app2Json = [];\r\n    for (let index = 0; index < appJson.length; index++) {\r\n      let element = {\r\n        Codigo: appJson[index].Codigo,\r\n        Nombres: appJson[index].Nombres,\r\n        Apellidos: appJson[index].Apellidos,\r\n        id: appJson[index].id,\r\n        Indicadores: [],\r\n      };\r\n      app2Json.push(element);\r\n      for (\r\n        let indexy = 0;\r\n        indexy < this.state.dtResultadoIndicador.length;\r\n        indexy++\r\n      ) {\r\n        let Indicadores = {\r\n          Indicador: this.state.dtResultadoIndicador[indexy]\r\n            .Cod_IndicarResultado,\r\n          Nom_Indicador: this.state.dtResultadoIndicador[indexy]\r\n            .Cod_Indicador,\r\n          Detalle: [],\r\n        };\r\n        element.Indicadores.push(Indicadores);\r\n        for (let indexz = 0; indexz < appJson[index].Notas.length; indexz++) {\r\n          var cadena =\r\n            sessionStorage.getItem(\"cursoid\")+\r\n            \"-\" +\r\n            appJson[index].Notas[indexz].Resultado +\r\n            \"-\" +\r\n            appJson[index].Notas[indexz].Indicador;\r\n            // console.log(cadena);\r\n          if (\r\n            this.state.dtResultadoIndicador[indexy].Cod_IndicarResultado ==\r\n            cadena\r\n          ) {\r\n            let pNotas = {\r\n              Criterio: appJson[index].Notas[indexz].Des_Criterio,\r\n              Puntaje: appJson[index].Notas[indexz].Puntaje,\r\n            };\r\n            Indicadores.Detalle.push(pNotas);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var app3Json = [];\r\n    for (let index = 0; index < app2Json.length; index++) {\r\n      let element = {\r\n        Codigo: appJson[index].Codigo,\r\n        Nombres: appJson[index].Nombres,\r\n        Apellidos: appJson[index].Apellidos,\r\n        id: appJson[index].id,\r\n        Indicadores: [],\r\n      };\r\n      app3Json.push(element);\r\n      for (\r\n        let indexy = 0;\r\n        indexy < app2Json[index].Indicadores.length;\r\n        indexy++\r\n      ) {\r\n        var cantidad = app2Json[index].Indicadores[indexy].Detalle.length;\r\n        var suma = 0;\r\n        for (\r\n          let x = 0;\r\n          x < app2Json[index].Indicadores[indexy].Detalle.length;\r\n          x++\r\n        ) {\r\n          suma = suma + app2Json[index].Indicadores[indexy].Detalle[x].Puntaje;\r\n        }\r\n        var Nota = suma / cantidad;\r\n        if (Nota >= 0 && Nota <= 1) {\r\n          // console.log('1');\r\n          Nota = Nota;\r\n        }else{\r\n          // console.log('0');   \r\n          Nota = 0;       \r\n        }\r\n        let Indicadores = {\r\n          Indicador: app2Json[index].Indicadores[indexy].Indicador,\r\n          Nom_Indicador: app2Json[index].Indicadores[indexy].Nom_Indicador,\r\n          Nota: Nota,\r\n          Detalle: [],\r\n        };\r\n        element.Indicadores.push(Indicadores);\r\n        for (\r\n          let x = 0;\r\n          x < app2Json[index].Indicadores[indexy].Detalle.length;\r\n          x++\r\n        ) {\r\n          let pNotas = {\r\n            Criterio: app2Json[index].Indicadores[indexy].Detalle[x].Criterio,\r\n            Puntaje: app2Json[index].Indicadores[indexy].Detalle[x].Puntaje,\r\n          };\r\n          Indicadores.Detalle.push(pNotas);\r\n        }\r\n      }\r\n    }\r\n    // console.log(app3Json);\r\n    this.setState({\r\n      dtActividadFinal: app3Json,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          header=\"REPORTE INDICADOR DE DESEMPEÑO\"\r\n          visible={this.state.visible}\r\n          footer={this.footer}\r\n          style={{ width: \"50vw\" }}\r\n          modal={true}\r\n          onHide={() => this.setState({ visible: false })}\r\n        >\r\n          <PDFViewer width=\"790\" height=\"700\">\r\n            <Document>\r\n              <Page style={styles.body}>\r\n                <Text style={styles.header} fixed>\r\n                  ~ Escuela Profesional de Ingeneria de Sistemas ~\r\n                </Text>\r\n                <Text style={styles.title}>Indicador</Text>\r\n                {this.state.dtActividadFinal.map((Persona) => (\r\n                  <View\r\n                    style={{ color: \"Black\", textAlign: \"center\", margin: 5 }}\r\n                  >\r\n                    <Text style={styles.subtitle}>{Persona.Codigo + ' ' + Persona.Apellidos + ', ' + Persona.Nombres}</Text>\r\n                      <Table\r\n                        data={Persona.Indicadores}                      \r\n                      >                       \r\n                        <TableHeader textAlign={\"center\"}>\r\n                          <TableCell>INDICADOR DE DESEMPEÑO</TableCell>\r\n                          <TableCell>NOTA</TableCell>\r\n                        </TableHeader>\r\n                        <TableBody textAlign={\"center\"}>\r\n                        <DataTableCell getContent={(r) => r.Nom_Indicador}/>\r\n                        <DataTableCell getContent={(r) => r.Nota}/>    \r\n                        </TableBody>\r\n                      </Table>\r\n                  </View>\r\n                ))}\r\n              </Page>\r\n            </Document>\r\n          </PDFViewer>\r\n        </Dialog>\r\n        <Button\r\n          label=\"REPORTE INDICADOR DESMPEÑO\" \r\n          onClick={(e) => this.setState({ visible: true })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ModalRepor;","import React from \"react\";\r\nimport api from \"../api\";\r\nimport { Button } from \"primereact/button\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Page, Text, View, Document, StyleSheet, PDFViewer,} from \"@react-pdf/renderer\";\r\nimport { Table, TableHeader, TableCell, DataTableCell, TableBody,} from \"@david.kucsai/react-pdf-table\";\r\nimport { PDFDocument, PDFText, PDFTable, PDFTableRow, PDFTableColumn, PDFColumns, PDFColumn,} from \"react-pdfmake\";\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: \"center\",\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 12,\r\n    margin: 12,\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: \"justify\",\r\n  },\r\n  image: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 100,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  pageNumber: {\r\n    position: \"absolute\",\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n});\r\nclass ModalRepor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dtReporteActividad: [],\r\n      dtResultado: [],\r\n      dtAlumno: [],\r\n      dtTAlumno: [],\r\n      dtActividadFinal: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const cResultadoIndicador = {\r\n      Cod_Curso: sessionStorage.getItem(\"cursoid\"),\r\n    };\r\n    this.traerReporte(sessionStorage.getItem(\"cursoid\"), 2, 1);\r\n    this.traerResultadoCurso(cResultadoIndicador);\r\n  }\r\n  traerResultadoCurso = async cResultadoIndicador => {\r\n    try {\r\n      const dtResultado = await api.objetivoResultadoCrud.listxCurso(\r\n        cResultadoIndicador\r\n      );\r\n      this.setState({\r\n        dtResultado: dtResultado.ObjetivoResultados\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerAlumno = async () => {\r\n    try {\r\n      var URL =\r\n        sessionStorage.getItem(\"url\") +\r\n        \"/webservice/rest/server.php?wstoken=\" +\r\n        sessionStorage.getItem(\"token\") +\r\n        \"&moodlewsrestformat=json&wsfunction=core_enrol_get_enrolled_users&courseid=\" +\r\n        sessionStorage.getItem(\"cursoid\");\r\n      const response = await fetch(URL);\r\n      const dtAlumno = await response.json();\r\n      this.setState({\r\n        dtTAlumno: dtAlumno,\r\n      });\r\n    } catch (error) {}\r\n    this.state.dtTAlumno.forEach((element) => {\r\n      if (element.institution == null) {\r\n        const nrow = {\r\n          Cod_Persona: element.id,\r\n          Nombres: element.firstname,\r\n          Apellidos: element.lastname,\r\n          Codigo: element.email.replace(\"@uandina.edu.pe\", \"\"),\r\n        };\r\n        this.setState({\r\n          dtAlumno: [].concat(this.state.dtAlumno, nrow),\r\n          displayDialog: true,\r\n        });\r\n      }\r\n    });\r\n    this.sacarpromedio();\r\n  };\r\n  traerReporte = async (pCod_Curso, pCod_Unidad, pId_Asignacion) => {\r\n    try {\r\n      const crubrica = {\r\n        Cod_Curso: pCod_Curso,\r\n        Cod_Unidad: pCod_Unidad,\r\n        Id_Asignacion: pId_Asignacion,\r\n      };\r\n      const dtReporteActividad = await api.Reportes.ReporteActividad(crubrica);\r\n      this.setState({\r\n        dtReporteActividad: dtReporteActividad.RepoActividad,\r\n      });\r\n      this.traerAlumno();\r\n    } catch (error) {}\r\n  };\r\n  sacarpromedio() {\r\n    var appJson = [];\r\n    for (let index = 0; index < this.state.dtAlumno.length; index++) {\r\n      let element = {\r\n        Codigo: this.state.dtAlumno[index].Codigo,\r\n        Nombres: this.state.dtAlumno[index].Nombres,\r\n        Apellidos: this.state.dtAlumno[index].Apellidos,\r\n        id: this.state.dtAlumno[index].Cod_Persona,\r\n        Notas: [],\r\n      }; \r\n      appJson.push(element);\r\n      for ( let indexy = 0; indexy < this.state.dtReporteActividad.length; indexy++) {\r\n        if (\r\n          this.state.dtAlumno[index].Cod_Persona ==\r\n          this.state.dtReporteActividad[indexy].Cod_Persona\r\n        ) {\r\n          let pNotas = {\r\n            Asignacion: this.state.dtReporteActividad[indexy].NomAsignacion,\r\n            Des_Criterio: this.state.dtReporteActividad[indexy].DesCriterio,\r\n            Puntaje: this.state.dtReporteActividad[indexy].PuntajeFinal,\r\n            Indicador: this.state.dtReporteActividad[indexy].Cod_Indicador,\r\n            Resultado: this.state.dtReporteActividad[indexy].Cod_Resultado,\r\n          };\r\n          element.Notas.push(pNotas);\r\n        }\r\n      }\r\n    }\r\n    var app2Json = [];\r\n    for (let index = 0; index < appJson.length; index++) {\r\n      let element = {\r\n        Codigo: appJson[index].Codigo,\r\n        Nombres: appJson[index].Nombres,\r\n        Apellidos: appJson[index].Apellidos,\r\n        id: appJson[index].id,\r\n        Resultados: [],\r\n      };\r\n      app2Json.push(element);\r\n      for (\r\n        let indexy = 0;\r\n        indexy < this.state.dtResultado.length;\r\n        indexy++\r\n      ) {\r\n        let Resultados = {\r\n          Resultado : this.state.dtResultado[indexy]\r\n            .Cod_Resultado,\r\n          Detalle: [],\r\n        };\r\n        element.Resultados.push(Resultados);\r\n        for (let indexz = 0; indexz < appJson[index].Notas.length; indexz++) {\r\n          var cadena =\r\n          sessionStorage.getItem(\"cursoid\")+\r\n            \"-\" +\r\n            appJson[index].Notas[indexz].Resultado;\r\n          if (\r\n            this.state.dtResultado[indexy].Cod_ResulCursObjetivo ==\r\n            cadena\r\n          ) {\r\n            let pNotas = {\r\n              Criterio: appJson[index].Notas[indexz].Des_Criterio,\r\n              Puntaje: appJson[index].Notas[indexz].Puntaje,\r\n            };\r\n            Resultados.Detalle.push(pNotas);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var app3Json = [];\r\n    for (let index = 0; index < app2Json.length; index++) {\r\n      let element = {\r\n        Codigo: appJson[index].Codigo,\r\n        Nombres: appJson[index].Nombres,\r\n        Apellidos: appJson[index].Apellidos,\r\n        id: appJson[index].id,\r\n        Resultados: [],\r\n      };\r\n      app3Json.push(element);\r\n      for (\r\n        let indexy = 0;\r\n        indexy < app2Json[index].Resultados.length;\r\n        indexy++\r\n      ) {\r\n        var cantidad = app2Json[index].Resultados[indexy].Detalle.length;\r\n        var suma = 0;\r\n        for (\r\n          let x = 0;\r\n          x < app2Json[index].Resultados[indexy].Detalle.length;\r\n          x++\r\n        ) {\r\n          suma = suma + app2Json[index].Resultados[indexy].Detalle[x].Puntaje;\r\n        }\r\n        var Nota = suma / cantidad;\r\n        if (Nota >= 0 && Nota <= 1) {\r\n          Nota = Nota;\r\n        }else{\r\n          Nota = 0;       \r\n        }\r\n        let Resultados = {\r\n          Resultado: app2Json[index].Resultados[indexy].Resultado,\r\n          Nota: Nota,\r\n          Detalle: [],\r\n        };\r\n        element.Resultados.push(Resultados);\r\n        for (\r\n          let x = 0;\r\n          x < app2Json[index].Resultados[indexy].Detalle.length;\r\n          x++\r\n        ) {\r\n          let pNotas = {\r\n            Criterio: app2Json[index].Resultados[indexy].Detalle[x].Criterio,\r\n            Puntaje: app2Json[index].Resultados[indexy].Detalle[x].Puntaje,\r\n          };\r\n          Resultados.Detalle.push(pNotas);\r\n        }\r\n      }\r\n    }\r\n    console.log(app3Json);\r\n    this.setState({\r\n      dtActividadFinal: app3Json,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          header=\"REPORTE RESULTADOS DE EDTUDIANTE\"\r\n          visible={this.state.visible}\r\n          footer={this.footer}\r\n          style={{ width: \"50vw\" }}\r\n          modal={true}\r\n          onHide={() => this.setState({ visible: false })}\r\n        >\r\n          <PDFViewer width=\"790\" height=\"700\">\r\n            <Document>\r\n              <Page style={styles.body}>\r\n                <Text style={styles.header} fixed>\r\n                  ~ Escuela Profesional de Ingeneria de Sistemas ~\r\n                </Text>\r\n                <Text style={styles.title}>RESULTADOS</Text>\r\n                {this.state.dtActividadFinal.map((Persona) => (\r\n                  <View\r\n                    style={{ color: \"Black\", textAlign: \"center\", margin: 5 }}\r\n                  >\r\n                    <Text style={styles.subtitle}>{Persona.Codigo + ' ' + Persona.Apellidos + ', ' + Persona.Nombres}</Text>\r\n                      <Table\r\n                        data={Persona.Resultados}                      \r\n                      >                       \r\n                        <TableHeader textAlign={\"center\"}>\r\n                          <TableCell>RESULTADOS</TableCell>\r\n                          <TableCell>NOTA</TableCell>\r\n                        </TableHeader>\r\n                        <TableBody textAlign={\"center\"}>\r\n                        <DataTableCell getContent={(r) => r.Resultado}/>\r\n                        <DataTableCell getContent={(r) => r.Nota}/>    \r\n                        </TableBody>\r\n                      </Table>\r\n                  </View>\r\n                ))}\r\n              </Page> \r\n            </Document>\r\n          </PDFViewer>\r\n        </Dialog>\r\n        <Button\r\n          label=\"REPORTE RESULTADO DEL ESTUDIANTE\" \r\n          onClick={(e) => this.setState({ visible: true })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ModalRepor;","import React from \"react\";\r\nimport ButtonActions from \"./ButtonActions\";\r\nimport PageIndicadorCriterio from \"./PageIndicadorCriterio\";\r\nimport ModalRepor from \"./ModalRepor\" \r\nimport ModalReporIndicador from \"./ModalReporIndicador\" \r\nimport ModalReporResultado from \"./ModalReporResultado\" \r\n// import \"./styles/Paglogin.css\";\r\nimport \"./styles/Pagefour.css\";\r\nimport api from \"../api\";\r\nimport { PDFViewer } from \"@react-pdf/renderer\";\r\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\";\r\n/** Este componente lista a los usuarios por cursos\r\n * @author: Luis Huallparimachi Saire y Joel Sumerente Ayerbe\r\n * @param wstoken: El parametro wstoken devuelve el token que solicitamos.\r\n * @param moodlewsrestformat: El parametro moodlewsrestformat permite darnos el formato en el que se mostrara                                  el contenido de la informacion.\r\n * @param wsfunction: El parametro wsfunction permite llamar al metodo del servicio de moodle.\r\n *  La funcion (core_enrol_enrolled_users) lista a los usuarios del curso.\r\n *                    La funcion (mod_assign_get_submissions) devuelve los envios de tareas\r\n * @param alumnoid: El parametro alumnoid devuelve el id del alumno que solicitamos.\r\n * @param assignid: El parametro assignid devuelve el id de la asignacion que solicitamos.\r\n * @version: 4.0 20/01/2020\r\n */\r\nvar assign = \"assign\";\r\nvar quizz = \"quiz\";\r\nfunction traerRubrica(\r\n  link, token, assignid, alumnoid, pCod_Curso, pCod_Asignacion, pNomRubrica\r\n) {\r\n  const URL =\r\n    link +\"/webservice/rest/server.php?wstoken=\" + token + \"&moodlewsrestformat=json&wsfunction=mod_assign_get_submission_status&userid=\" +\r\n    alumnoid + \"&assignid=\" + assignid;\r\n  var item = document.createElement(\"p\");\r\n  fetch(URL)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      if (data.lastattempt.gradingstatus === \"graded\") {\r\n        item.innerHTML = data.feedback.gradefordisplay;\r\n        let notaasig = item.querySelectorAll(\"tr.criterion\");\r\n        createGRubrica(\r\n          \"r\" + assignid,\r\n          pCod_Asignacion,\r\n          pCod_Curso,\r\n          \"Rubrica (\" + pNomRubrica + \")\"\r\n        );\r\n        for (let i = 0; i < notaasig.length; i++) {\r\n          let criterio = notaasig[i].querySelector(\"td.description\")\r\n            .textContent;\r\n          createGCriterio(\"r\" + assignid, \"c\" + assignid + i, i, criterio);\r\n        }\r\n      }\r\n    });\r\n}\r\nasync function createGRubrica(\r\n  pCod_Rubrica, pCod_Asignacion,\r\n  pCod_Curso, pNomRubrica\r\n) {\r\n  const cGRubrica = {\r\n    Cod_Rubrica: pCod_Rubrica, Cod_Asignacion: pCod_Asignacion,\r\n    Cod_Curso: pCod_Curso, NomRubrica: pNomRubrica\r\n  };\r\n  await api.GRubricaCrud.create(cGRubrica);\r\n}\r\nasync function createGCriterio(\r\n  pCod_Rubrica, pCod_Criterio,\r\n  pNivelCriterio, pDesCriterio\r\n) {\r\n  const cGCriterio = {\r\n    Cod_Rubrica: pCod_Rubrica, Cod_Criterio: pCod_Criterio,\r\n    NivelCriterio: pNivelCriterio, DesCriterio: pDesCriterio\r\n  };\r\n  await api.GCriterioCrud.create(cGCriterio);\r\n}\r\nfunction traerNotas(\r\n  link, token, assignid,\r\n  alumnoid, pCod_Curso,\r\n  pCod_Asignacion, pNomRubrica\r\n) {\r\n  const URL =\r\n    link + \"/webservice/rest/server.php?wstoken=\" +\r\n    token + \"&moodlewsrestformat=json&wsfunction=mod_assign_get_submission_status&userid=\" +\r\n    alumnoid + \"&assignid=\" + assignid;\r\n  var item = document.createElement(\"p\");\r\n  fetch(URL)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      if (data.lastattempt.gradingstatus === \"graded\") {\r\n        item.innerHTML = data.feedback.gradefordisplay;\r\n        // obtiene cantidad de criterios de rubrica\r\n        let notaasig = item.querySelectorAll(\"tr.criterion\");\r\n        createRubrica(\r\n          \"r\" + assignid + \"-\" + alumnoid,\r\n          \"r\" + assignid, pCod_Asignacion,\r\n          alumnoid, pCod_Curso,\r\n          \"Rubrica (\" + pNomRubrica + \")\",\r\n          \"Rubrica(\" + pNomRubrica + \")|\" +\r\n            data.feedback.grade.id + \"|\" +\r\n            data.feedback.grade.assignment + \"|\" +\r\n            data.feedback.grade.userid,\r\n          data.feedback.grade.grade\r\n        );\r\n        for (let i = 0; i < notaasig.length; i++) {\r\n          // seleciona los criterios de rubrica\r\n          let criterio = notaasig[i].querySelector(\"td.description\");\r\n          // seleccion el puntaje alto de la rubrica\r\n          let desCrt = notaasig[i].querySelector(\r\n            \"td.last > div[class=level-wrapper] > div\"\r\n          );\r\n          // seleccion el puntaje alto de la rubrica\r\n          let notaCrt = notaasig[i].querySelector(\r\n            \"td.last > div[class=level-wrapper] > div[class=score] > span[class=scorevalue\"\r\n          );\r\n          // selecciona el puntaje obtenido de la rubrica\r\n          let notaObt = notaasig[i].querySelector(\r\n            \"td[aria-checked=true] > div[class=level-wrapper] > div[class=score] > span[class=scorevalue\"\r\n          );\r\n          // saca el puntaje objetino en el criterio\r\n          let puntaje = notaObt.textContent / notaCrt.textContent;\r\n          //id de asignacion > id alumno > id de criterio > descripcion de criterio > nota criterio maximo > nota criterio obtenido > porcentaje obtenido\r\n          createCritero(\r\n            \"c\" + assignid + \"n\" + i + \"a\" + alumnoid,\r\n            \"r\" + assignid + \"-\" + alumnoid,\r\n            i,\r\n            criterio.textContent\r\n          );\r\n          createNivel(\r\n            \"c\" + assignid + \"n\" + i + \"a\" + alumnoid,\r\n            \"n\" + i + \"as\" + assignid+\"st\"+alumnoid,            \r\n            desCrt.textContent,\r\n            notaCrt.textContent,            \r\n            notaObt.textContent,\r\n            puntaje            \r\n          );\r\n        }}\r\n    });\r\n}\r\nasync function createRubrica(\r\n  pCod_RubricaPersona, pCod_Rubrica, pCod_Asignacion,\r\n  pCod_Persona, pCod_Curso, pNomRubrica, pDescripcion, pNota\r\n) {\r\n  const cRubrica = {\r\n    Cod_RubricaPersona: pCod_RubricaPersona, Cod_Rubrica: pCod_Rubrica,\r\n    Cod_Asignacion: pCod_Asignacion, Cod_Persona: pCod_Persona,\r\n    Cod_Curso: pCod_Curso, NomRubrica: pNomRubrica, Descripcion: pDescripcion,\r\n    Nota: pNota\r\n  };\r\n  await api.rubricaCrud.create(cRubrica);\r\n}\r\nasync function createCritero(\r\n  pCod_Criterio,\r\n  pCod_RubricaPersona,\r\n  pNivelCriterio,\r\n  pDescripcionC\r\n) {\r\n  const cCriterio = {\r\n    Cod_RubricaPersona: pCod_RubricaPersona,\r\n    Cod_Criterio: pCod_Criterio,\r\n    NivelCriterio: pNivelCriterio,\r\n    DesCriterio: pDescripcionC\r\n  };\r\n  await api.CriterioCrud.create(cCriterio);\r\n}\r\nasync function createNivel(\r\n  pCod_Criterio, pCod_Nivel,  \r\n  pDescripcionN, pPuntaje, \r\n  pPuntajeFinal, pPuntajeOb,\r\n) {\r\n  const cNivel = {\r\n    Cod_Nivel: pCod_Nivel, Cod_Criterio: pCod_Criterio,\r\n    Puntaje: pPuntaje, PuntajeObtenido : pPuntajeOb,\r\n    PuntajeFinal: pPuntajeFinal, Descripcion: pDescripcionN\r\n  };\r\n  await api.nivelCrud.create(cNivel);\r\n}\r\nfunction traerAlumnos(\r\n  link, token,\r\n  assignid, pCod_Curso,\r\n  pCod_Asignacion, pNomRubrica\r\n) {\r\n  const URL =\r\n    link +\r\n    \"/webservice/rest/server.php?wstoken=\" +\r\n    token +\r\n    \"&moodlewsrestformat=json&wsfunction=mod_assign_get_submissions&assignmentids[0]=\" +\r\n    assignid;\r\n  fetch(URL)\r\n    .then(ress => ress.json())\r\n    .then(ddata => {\r\n      for (let y = 0; y < ddata.assignments[\"0\"].submissions.length; y++) {\r\n        if (ddata.assignments[\"0\"].submissions[y].gradingstatus === \"graded\") {\r\n          var alumnoid = ddata.assignments[\"0\"].submissions[y].userid;\r\n          traerRubrica(\r\n            link, token, assignid,\r\n            alumnoid,pCod_Curso, pCod_Asignacion, pNomRubrica\r\n          );\r\n          break;\r\n        }\r\n      }\r\n      for (let y = 0; y < ddata.assignments[\"0\"].submissions.length; y++) {\r\n        if (ddata.assignments[\"0\"].submissions[y].gradingstatus === \"graded\") {\r\n          var alumnoids = ddata.assignments[\"0\"].submissions[y].userid;\r\n            traerNotas(\r\n              link, token, assignid,\r\n              alumnoids, pCod_Curso,\r\n              pCod_Asignacion,pNomRubrica\r\n            );\r\n        }\r\n      }\r\n    });\r\n}\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#E4E4E4\",\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n});\r\nclass Pagesfour extends React.Component {\r\n  state = {\r\n    data: [],\r\n    data2: {\r\n      courses: []\r\n    },\r\n    tmpdata: {}\r\n  };\r\n  componentDidMount() {\r\n    this.traerActividades();\r\n    this.traerActividades2();\r\n  }\r\n  traerActividades = async () => {\r\n    try {\r\n      var URL =\r\n        sessionStorage.getItem(\"url\") +\r\n        \"/webservice/rest/server.php?wstoken=\" +\r\n        sessionStorage.getItem(\"token\") +\r\n        \"&moodlewsrestformat=json&wsfunction=core_course_get_contents&courseid=\" +\r\n        sessionStorage.getItem(\"cursoid\");\r\n      const response = await fetch(URL);\r\n      const data = await response.json();\r\n      this.setState({\r\n        data: data\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerActividades2 = async () => {\r\n    try {\r\n      var URL =\r\n        sessionStorage.getItem(\"url\") +\r\n        \"/webservice/rest/server.php?wstoken=\" +\r\n        sessionStorage.getItem(\"token\") +\r\n        \"&moodlewsrestformat=json&wsfunction=mod_assign_get_assignments&courseids[0]=\" +\r\n        sessionStorage.getItem(\"cursoid\");\r\n      const response = await fetch(URL);\r\n      const data2 = await response.json();\r\n      this.setState({\r\n        data2: data2\r\n      });\r\n    } catch (error) {}\r\n    this.state.data.forEach(unidad => {\r\n      if (unidad.id == sessionStorage.getItem(\"unidadId\")) {\r\n        unidad.modules.forEach(modulo => {\r\n          if (modulo.visible == 1 && modulo.modname == assign) {\r\n            this.state.data2.courses.forEach(Curso => {\r\n              if (Curso.id == sessionStorage.getItem(\"cursoid\")) {\r\n                Curso.assignments.forEach(vAssign => {\r\n                  if (modulo.id == vAssign.cmid) {\r\n                    this.createAsignacion(\r\n                      vAssign.course,\r\n                      vAssign.cmid,\r\n                      vAssign.id,\r\n                      vAssign.name,\r\n                      modulo.modname,\r\n                      0,\r\n                      0,\r\n                      0,\r\n                      unidad.id,\r\n                      1\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n  createAsignacion = async (\r\n    pCod_Curso, pCod_Asignacion,\r\n    pId_Asignacion, pNomAsignacion,\r\n    pTipo_Asignacion, pParticipantes,\r\n    pPresentados, pPendientes,\r\n    pCod_Unidad, pFlag_Activo\r\n  ) => {\r\n    const cAsignacion = {\r\n      Cod_Curso: pCod_Curso, Cod_Asignacion: pCod_Asignacion,\r\n      Id_Asignacion: pId_Asignacion, NomAsignacion: pNomAsignacion,\r\n      TipoAsignacion: pTipo_Asignacion, Participantes: pParticipantes,\r\n      Presentados: pPresentados, Pendientes: pPendientes,\r\n      Cod_Unidad: pCod_Unidad, Flag_Activo: pFlag_Activo\r\n    };\r\n    await api.asignacionCrud.create(cAsignacion);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <br />\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\"\r\n          integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\"\r\n          crossorigin=\"anonymous\"\r\n        />\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            {this.state.data.map(\r\n              unidad =>\r\n                sessionStorage.getItem(\"unidadId\") ===\r\n                  JSON.stringify(unidad.id) && (\r\n                  <div>\r\n                    <div className=\"titulos centrar\">\r\n                      <h1>{unidad.name}</h1>\r\n                      <h4>ACTIVIDADES</h4>\r\n                    </div>\r\n                    {unidad.modules.map(\r\n                      actividades =>\r\n                        actividades.visible === 1 &&\r\n                        actividades.modname === assign &&\r\n                        this.state.data2.courses.map(verificaActi =>\r\n                          verificaActi.assignments.map(\r\n                            actiA =>\r\n                              actiA.name === actividades.name && (\r\n                                <div className=\"card\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-8\">\r\n                                      <a\r\n                                        id={actiA.id}\r\n                                        href={\"/Pageeight/assignid:\" + actiA.id}\r\n                                        class=\"list-group-item list-group-item-action\"\r\n                                        onClick={() =>\r\n                                          sessionStorage.setItem(\r\n                                            \"assignid\",\r\n                                            actiA.id\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        {actividades.name}\r\n                                      </a>\r\n                                      <PageIndicadorCriterio\r\n                                        name = {actividades.name}\r\n                                        id = {actiA.id}\r\n                                        Cid = {actiA.cmid}\r\n                                      />\r\n                                      <br />\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                      <ButtonActions\r\n                                        id={actiA.id}\r\n                                        cid={actividades.id}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div id={\"rubric\" + actiA.id} className=\"row\">\r\n                                    {/* {// this.traerANotas(actiA.id)\r\n                                    traerAlumnos(\r\n                                      sessionStorage.getItem(\"url\"),\r\n                                      sessionStorage.getItem(\"token\"),\r\n                                      actiA.id,\r\n                                      sessionStorage.getItem(\"cursoid\"),\r\n                                      actividades.id,\r\n                                      actividades.name\r\n                                    )} */}\r\n                                  </div>\r\n                                </div>\r\n                              )\r\n                          )\r\n                        )\r\n                    )}\r\n                    {unidad.modules.map(\r\n                      actividades =>\r\n                        actividades.visible === 1 &&\r\n                        actividades.modname === quizz && (\r\n                          <div className=\"row\">\r\n                            <div className=\"col-8\">\r\n                              <a\r\n                                id={actividades.id}\r\n                                href=\"index\"\r\n                                class=\"list-group-item list-group-item-action\"\r\n                              >\r\n                                {actividades.name}\r\n                              </a>\r\n                              <br />\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                              <ButtonActions id={actividades.id} />\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                    )}\r\n                  </div>\r\n                )\r\n            )}\r\n          </div>\r\n        </div>\r\n        <br />\r\n        {/* <button type=\"button\" className=\"fuente boton btn-lg btn-block\" >\r\n          GENERAR REPORTE DE 1° UNIDAD\r\n        </button>\r\n        <ModalRepor />         */}\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagesfour;","import React from 'react';\r\nimport Pagesfour from '../components/Pagesfour';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass Pagefour extends React.Component {\r\n  render(){\r\n    return(\r\n      <div>\r\n        <LoginNavbarUser/>\r\n        <Pagesfour/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagefour;","import React from \"react\";\r\nimport \"./styles/Pagefive.css\";\r\nimport api from \"../api\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Growl } from \"primereact/growl\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport {Dialog} from 'primereact/dialog';\r\nclass PagesFive extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dtObjetivoResultado: [],\r\n      dtObjetivoCurso: [],\r\n      dtResultado: [],\r\n      modalIsOpen: false,\r\n      objRes2: null\r\n    };\r\n    this.dtUpdateObjRes = {};\r\n    this.Cod_ObjetivoEditor = this.Cod_ObjetivoEditor.bind(this);\r\n    this.Cod_ResultadoEditor = this.Cod_ResultadoEditor.bind(this);\r\n    this.requiredValidator = this.requiredValidator.bind(this);\r\n    this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditInit = this.onRowEditInit.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  createObjetivoResultado = async e => {\r\n    const cObjetivoResultado = {\r\n      Cod_ResulCursObjetivo: sessionStorage.getItem('cursoid')+'-'+this.state.Cod_Resultado,\r\n      Cod_Resultado: this.state.Cod_Resultado,\r\n      Cod_Curso: sessionStorage.getItem('cursoid')\r\n    };\r\n    await api.objetivoResultadoCrud.create(cObjetivoResultado);\r\n    this.refreshPage();\r\n  };\r\n  updateObjetivoResultado = async (\r\n    pCod_ResulCursObjetivo,\r\n    pCod_Resultado,\r\n    pCod_Curso\r\n  ) => {\r\n    const cObjetivoResultado = {\r\n      Cod_ResulCursObjetivo: pCod_ResulCursObjetivo,\r\n      Cod_Resultado: pCod_Resultado,\r\n      Cod_Curso: pCod_Curso \r\n    };\r\n    await api.objetivoResultadoCrud.create(cObjetivoResultado);\r\n  };\r\n  deleteObjetivoResultado = async (dCod_ResulCursObjetivo) => {\r\n    const pCod_ResulCursObjetivo = {\r\n      Cod_ResulCursObjetivo: dCod_ResulCursObjetivo\r\n    };\r\n    await api.objetivoResultadoCrud.remove(pCod_ResulCursObjetivo);\r\n    this.refreshPage();\r\n  };\r\n  componentDidMount() {\r\n    const cObjetivoResultado = {\r\n      Cod_Curso :sessionStorage.getItem('cursoid')\r\n    };\r\n    this.traerObjetivosResultado(cObjetivoResultado);\r\n    this.traerObjetivoCurso(cObjetivoResultado);\r\n    this.traerResultado();\r\n  }\r\n  traerObjetivosResultado = async (cObjetivoResultado) => {\r\n    try {   \r\n      const dtObjetivoResultado = await api.objetivoResultadoCrud.listxCurso(cObjetivoResultado);\r\n      this.setState({\r\n        dtObjetivoResultado: dtObjetivoResultado.ObjetivoResultados\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerObjetivoCurso = async (cObjetivoResultado) => {\r\n    try {\r\n      const dtObjetivoCurso = await api.cursoObjetivoCrud.listobxCurso(cObjetivoResultado);      \r\n      this.setState({\r\n        dtObjetivoCurso: dtObjetivoCurso.CursoObjetivos\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerResultado = async () => {\r\n    try {\r\n      const dtResultado = await api.resultadoEstudianteCrud.listCb();      \r\n      this.setState({\r\n        dtResultado: dtResultado.Resultado\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  displaySelection(data) {\r\n    if (!data || data.length === 0) {\r\n      return <div></div>;\r\n    } else {\r\n      if (data instanceof Array)\r\n        return (\r\n          <ul style={{ textAlign: \"left\", margin: 0 }}>\r\n            {data.map((slObjetivoResultado, i) => (\r\n              <button key={slObjetivoResultado.Cod_ResulCursObjetivo}>\r\n                {slObjetivoResultado.Cod_ResulCursObjetivo +\r\n                  \" - \" + slObjetivoResultado.Cod_ResulCursObjetivo}\r\n              </button>\r\n            ))}\r\n          </ul>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={e => this.deleteObjetivoResultado(data.Cod_ResulCursObjetivo)}\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            Eliminar: {data.Cod_ResulCursObjetivo}\r\n          </button>\r\n        );\r\n    }\r\n  }\r\n  onRowEditorValidator(rowData) {\r\n    let value = rowData[\"Cod_ResulCursObjetivo\"];\r\n    return value.length > 0;\r\n  }\r\n  requiredValidator(props) {\r\n    let value = props.rowData[props.field];\r\n    return value && value.length > 0;\r\n  }\r\n  onEditorValueChange(props, value) {\r\n    let updatedObjRes = [...props.value];\r\n    updatedObjRes[props.rowIndex][props.field] = value;\r\n    this.setState({ objRes2: updatedObjRes });\r\n  }\r\n  Cod_ObjetivoEditor(props) {\r\n    return (\r\n      <Dropdown\r\n        value={props.value[props.rowIndex].Cod_Objetivo}\r\n        options={this.state.dtObjetivoCurso}\r\n        onChange={e => this.onEditorValueChange(props, e.value)}\r\n        style={{ width: \"100%\" }}\r\n        placeholder=\"Selecciona OB C\"\r\n      />\r\n    );\r\n  }\r\n  Cod_ResultadoEditor(props) {\r\n    return (\r\n      <Dropdown\r\n        value={props.value[props.rowIndex].Cod_Resultado}\r\n        options={this.state.dtResultado}\r\n        onChange={e => this.onEditorValueChange(props, e.value)}\r\n        style={{ width: \"100%\" }}\r\n        placeholder=\"Selecciona RE\"\r\n      />\r\n    );\r\n  }\r\n  onRowEditInit(event) {\r\n    this.dtUpdateObjRes[event.data.Cod_ResulCursObjetivo] = { ...event.data };\r\n    this.objRes2 = { ...event.data };\r\n  }\r\n  onRowEditSave(event) {\r\n    if (this.onRowEditorValidator(event.data)) {\r\n      console.log(event.data);\r\n      this.updateObjetivoResultado(\r\n        event.data.Cod_ResulCursObjetivo, event.data.Cod_Objetivo,\r\n        event.data.Cod_Resultado, event.data.Cod_Curso\r\n      );\r\n      this.growl.show({\r\n        severity: \"Actualizado\",\r\n        summary: \"Exitoso!!\",\r\n        detail: \"OE is updated\"\r\n      });\r\n    } else {\r\n      this.growl.show({\r\n        severity: \"error\",\r\n        summary: \"Error\",\r\n        detail: \"OE is required\"\r\n      });\r\n    }\r\n  }\r\n  onRowEditCancel(event) {\r\n    let objetivoResultado = [...this.state.dtObjetivoResultado];\r\n    objetivoResultado[event.index] = this.dtUpdateObjRes[\r\n      event.data.Cod_ResulCursObjetivo\r\n    ];\r\n    delete this.dtUpdateObjRes[event.data.Cod_ResulCursObjetivo];\r\n    this.setState({\r\n      dtObjetivoResultado: objetivoResultado\r\n    });\r\n  }\r\n  onEditorValueChangeForRowEditing = async (props, value) => {\r\n    let updatedObjRes = [...props.value];\r\n    updatedObjRes[props.rowIndex][props.field] = value;\r\n    this.setState({ objRes2: updatedObjRes });\r\n  };\r\n  refreshPage() {\r\n    window.location.reload(true);\r\n  }\r\n  footer = (\r\n    <div>\r\n      <Button label=\"Crear\" icon=\"pi pi-check\" onBlur={this.onHide} onClick={this.createObjetivoResultado} />\r\n      {/* <Button label=\"Cancelar\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHide}/> */}\r\n    </div>\r\n  );\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <div className=\"centrar\">\r\n            <h2>{sessionStorage.getItem(\"fullnameCu\")}</h2>\r\n          </div>\r\n        </div>\r\n        <div >\r\n          <div className=\"row centro2 abajo\">\r\n            <h2>\r\n              Lista de Resultados del Estudiante\r\n            </h2>\r\n            <div className=\"col espacioss\">\r\n              <div className=\"col espacioss\">\r\n                <Dialog\r\n                  header=\"Inserción de Resultados del Estudiante\"\r\n                  visible={this.state.visible}\r\n                  footer={this.footer}\r\n                  style={{ width: \"50vw\" }}\r\n                  modal={true}\r\n                  onHide={() => this.setState({ visible: false })}\r\n                >\r\n                  {/* <div className=\"p-inputgroup\">\r\n                    <span className=\"p-inputgroup-addon\" width=\"80%\">\r\n                      OB. Educacional\r\n                    </span>\r\n                    <Dropdown\r\n                      name=\"Cod_Objetivo\"\r\n                      value={this.state.Cod_Objetivo}\r\n                      options={this.state.dtObjetivoCurso}\r\n                      onChange={this.handleChange}\r\n                      style={{ width: \"60%\" }}\r\n                      placeholder=\"Selecciona OB\"\r\n                    />\r\n                  </div> */}\r\n                  <p/>\r\n                  <div className=\"p-inputgroup\">\r\n                    <span className=\"p-inputgroup-addon\" width=\"80%\">\r\n                      RE. Estudiante\r\n                    </span>\r\n                    <Dropdown\r\n                      name=\"Cod_Resultado\"\r\n                      value={this.state.Cod_Resultado}\r\n                      options={this.state.dtResultado}\r\n                      onChange={this.handleChange}\r\n                      style={{ width: \"60%\" }}\r\n                      placeholder=\"Selecciona RE\"\r\n                    />\r\n                  </div>\r\n                </Dialog>\r\n                <Button\r\n                  label=\"Nuevo\"\r\n                  onClick={e => this.setState({ visible: true })}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <Growl ref={el => (this.growl = el)} />\r\n            <DataTable\r\n              value={this.state.dtObjetivoResultado}\r\n              selectionMode=\"single\"\r\n              metaKeySelection={false}\r\n              selection={this.state.selecObjetivoResultado}\r\n              header={this.displaySelection(this.state.selecObjetivoResultado)}\r\n              onSelectionChange={e =>\r\n                this.setState({ selecObjetivoResultado: e.value })\r\n              }\r\n              responsive={true}\r\n              editMode=\"row\"\r\n              rowEditorValidator={this.onRowEditorValidator}\r\n              onRowEditInit={this.onRowEditInit}\r\n              onRowEditSave={this.onRowEditSave}\r\n              onRowEditCancel={this.onRowEditCancel}\r\n            >\r\n              {/* <Column\r\n                field=\"Cod_ResulCursObjetivo\"\r\n                header=\"Codigo\"\r\n                style={{ textAlign: \"center\", width: \"20%\" }}\r\n              /> */}\r\n              {/* <Column\r\n                field=\"Cod_Objetivo\"\r\n                header=\"Objetivo\"\r\n                style={{ textAlign: \"center\", width: \"20%\" }}\r\n                editor={this.Cod_ObjetivoEditor}\r\n              /> */}\r\n              <Column\r\n                field=\"Cod_Resultado\"\r\n                header=\"Resultado\"\r\n                style={{ textAlign: \"center\", width: \"20%\" }}\r\n                editor={this.Cod_ResultadoEditor}\r\n              />\r\n              {/* <Column\r\n                field=\"Cod_Curso\"\r\n                header=\"Curso\"\r\n                style={{ textAlign: \"left\", width: \"20%\" }}\r\n              /> */}\r\n              <Column\r\n                rowEditor={true}\r\n                style={{ width: \"7%\", textAlign: \"center\" }}\r\n              ></Column>\r\n            </DataTable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PagesFive;","import React from 'react';\r\nimport Pagesfive from '../components/Pagesfive';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass Pagefive extends React.Component {\r\n  render(){\r\n    return(\r\n      <div>\r\n        <LoginNavbarUser/>\r\n        <Pagesfive/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagefive;","import React from 'react';\r\nimport './styles/Pagessix.css';\r\n// import './styles/Paglogin.css';\r\nimport api from \"../api\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Growl } from \"primereact/growl\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport {Dialog} from 'primereact/dialog';\r\nclass Pagessix extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dtCursoObjetivo: [],\r\n      dtObjetivo: [],\r\n      modalIsOpen: false,\r\n      curObj2: null\r\n    };\r\n    this.dtUpdateCurObj = {};\r\n    this.Cod_ObjetivoEditor = this.Cod_ObjetivoEditor.bind(this);\r\n    this.requiredValidator = this.requiredValidator.bind(this);\r\n    this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditInit = this.onRowEditInit.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n  }\r\n  ToggleModal() {\r\n    this.setState({\r\n      modalIsOpen: !this.state.modalIsOpen\r\n    });\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  createCursoObjetivo = async e => {\r\n    // console.log('cCursoObjetivo'+this.state.Cod_Objetivo);\r\n    const cCursoObjetivo = {\r\n      Cod_CursoObjetivo: sessionStorage.getItem('cursoid')+'-'+this.state.Cod_Objetivo,\r\n      Cod_Objetivo: this.state.Cod_Objetivo,\r\n      Cod_Curso: sessionStorage.getItem('cursoid')\r\n    };\r\n    await api.cursoObjetivoCrud.create(cCursoObjetivo);\r\n    this.refreshPage();\r\n  };\r\n  updateCursoObjetivo = async (\r\n    pCod_CursoObjetivo,\r\n    pCod_Objetivo,\r\n    pCod_Curso\r\n  ) => {\r\n    const cCursoObjetivo = {\r\n      Cod_CursoObjetivo: pCod_CursoObjetivo,\r\n      Cod_Objetivo: pCod_Objetivo,\r\n      Cod_Curso: pCod_Curso\r\n    };\r\n    await api.cursoObjetivoCrud.create(cCursoObjetivo);\r\n  };\r\n  deleteCursoObjetivo = async (dCod_CursoObjetivo) => {\r\n    const pCod_CursoObjetivo = {\r\n      Cod_CursoObjetivo: dCod_CursoObjetivo\r\n    };\r\n    await api.cursoObjetivoCrud.remove(pCod_CursoObjetivo);\r\n  };\r\n  componentDidMount() {\r\n    \r\n    this.traerObjetivo();\r\n    const cCursoObjetivo = {\r\n      Cod_Curso :sessionStorage.getItem('cursoid')\r\n    };\r\n    this.traerCursoObjetivos(cCursoObjetivo);\r\n    // console.log(cCursoObjetivo);\r\n    // console.log(this.state.dtCursoObjetivo);\r\n  }\r\n  traerCursoObjetivos = async (cCursoObjetivo) => {\r\n    try {   \r\n      const dtCursoObjetivo = await api.cursoObjetivoCrud.listxCurso(cCursoObjetivo);\r\n      // console.log(dtCursoObjetivo.CursoObjetivos);\r\n      \r\n      this.setState({\r\n        dtCursoObjetivo: dtCursoObjetivo.CursoObjetivos\r\n      });\r\n      console.log(this.state.dtCursoObjetivo);\r\n      \r\n    } catch (error) {}\r\n    \r\n  };\r\n  traerObjetivo = async () => {\r\n    try {\r\n      const dtObjetivo = await api.objetivosEducacionalesCrud.listCb();\r\n      this.setState({\r\n        dtObjetivo: dtObjetivo.Objetivos\r\n      });\r\n      \r\n    } catch (error) {}\r\n  };\r\n  displaySelection(data) {\r\n    if (!data || data.length === 0) {\r\n      return <div></div>;\r\n    } else {\r\n      if (data instanceof Array)\r\n        return (\r\n          <ul style={{ textAlign: \"left\", margin: 0 }}>\r\n            {data.map((slCursoObjetivo, i) => (\r\n              <button key={slCursoObjetivo.Cod_CursoObjetivo}>\r\n                {slCursoObjetivo.Cod_CursoObjetivo +\r\n                  \" - \" +\r\n                  slCursoObjetivo.Cod_CursoObjetivo}\r\n              </button>\r\n            ))}\r\n          </ul>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={e => this.deleteCursoObjetivo(data.Cod_CursoObjetivo)}\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            Eliminar: {data.Cod_CursoObjetivo}\r\n          </button>\r\n        );\r\n    }\r\n  }\r\n  onRowEditorValidator(rowData) {\r\n    let value = rowData[\"Cod_CursoObjetivo\"];\r\n    return value.length > 0;\r\n  }\r\n  requiredValidator(props) {\r\n    let value = props.rowData[props.field];\r\n    return value && value.length > 0;\r\n  }\r\n  onEditorValueChange(props, value) {\r\n    let updatedCurObj = [...props.value];\r\n    updatedCurObj[props.rowIndex][props.field] = value;\r\n    this.setState({ curObj2: updatedCurObj });\r\n  }\r\n  Cod_ObjetivoEditor(props) {\r\n    return (\r\n      <Dropdown\r\n        value={props.value[props.rowIndex].Cod_Objetivo}\r\n        options={this.state.dtObjetivo}\r\n        onChange={e => this.onEditorValueChange(props, e.value)}\r\n        style={{ width: \"100%\" }}\r\n        placeholder=\"Selecciona OB\"\r\n      />\r\n    );\r\n  }\r\n  onRowEditInit(event) {\r\n    this.dtUpdateCurObj[event.data.Cod_CursoObjetivo] = { ...event.data };\r\n    this.curObj2 = { ...event.data };\r\n  }\r\n\r\n  onRowEditSave(event) {\r\n    if (this.onRowEditorValidator(event.data)) {\r\n      this.updateCursoObjetivo(\r\n        event.data.Cod_CursoObjetivo,\r\n        event.data.Cod_Objetivo,\r\n        event.data.Cod_Curso\r\n      );\r\n      this.growl.show({\r\n        severity: \"Actualizado\",\r\n        summary: \"Exitoso!!\",\r\n        detail: \"OE is updated\"\r\n      });\r\n    } else {\r\n      this.growl.show({\r\n        severity: \"error\",\r\n        summary: \"Error\",\r\n        detail: \"OE is required\"\r\n      });\r\n    }\r\n  }\r\n  onRowEditCancel(event) {\r\n    let cursoObjetivo = [...this.state.dtCursoObjetivo];\r\n    cursoObjetivo[event.index] = this.dtUpdateCurObj[\r\n      event.data.Cod_CursoObjetivo\r\n    ];\r\n    delete this.dtUpdateCurObj[event.data.Cod_CursoObjetivo];\r\n    this.setState({\r\n      dtCursoObjetivo: cursoObjetivo\r\n    });\r\n  }\r\n  onEditorValueChangeForRowEditing = async (props, value) => {\r\n    let updatedCursoObj = [...props.value];\r\n    updatedCursoObj[props.rowIndex][props.field] = value;\r\n    this.setState({ curObj2: updatedCursoObj });\r\n  };\r\n  refreshPage() {\r\n    window.location.reload(true);\r\n  }\r\n  footer = (\r\n    <div>\r\n      <Button label=\"Crear\" icon=\"pi pi-check\" onBlur={this.onHide} onClick={this.createCursoObjetivo} />\r\n      <Button label=\"Cancelar\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHide} />\r\n    </div>\r\n  );\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"centrar\">\r\n          <h1>{sessionStorage.getItem(\"fullnameCu\")}</h1>\r\n        </div>\r\n        <div className=\"row centrar abajo\">\r\n          <h2>Lista de Objetivos Educacionales del Curso</h2>\r\n          <div className=\"col espacioss\">\r\n            <Dialog\r\n              header=\"Inserción Relación Curso y Objetivos Educacionales\"\r\n              visible={this.state.visible}\r\n              footer={this.footer}\r\n              style={{ width: \"50vw\" }}\r\n              modal={true}\r\n              onHide={() => this.setState({ visible: false })}\r\n            >\r\n              <div className=\"p-inputgroup\">\r\n                <span className=\"p-inputgroup-addon\" width= \"80%\">OB. Educacional</span>\r\n                <Dropdown\r\n                  name=\"Cod_Objetivo\"\r\n                  value={this.state.Cod_Objetivo}\r\n                  options={this.state.dtObjetivo}\r\n                  onChange={this.handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                  placeholder=\"Selecciona OB\"\r\n                />\r\n              </div>\r\n            </Dialog>\r\n            <Button\r\n              label=\"Nuevo\"\r\n              onClick={e => this.setState({ visible: true })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Growl ref={el => (this.growl = el)} />\r\n          {/* {console.log(this.state.dtCursoObjetivo)} */}\r\n          <DataTable\r\n            value={this.state.dtCursoObjetivo}            \r\n            selectionMode=\"single\"\r\n            selection={this.state.selecCursoObjetivos}\r\n            header={this.displaySelection(this.state.selecCursoObjetivos)}\r\n            onSelectionChange={e =>\r\n              this.setState({ selecCursoObjetivos: e.value })\r\n            }\r\n            responsive={true}\r\n            editMode=\"row\"\r\n            rowEditorValidator={this.onRowEditorValidator}\r\n            onRowEditInit={this.onRowEditInit}\r\n            onRowEditSave={this.onRowEditSave}\r\n            onRowEditCancel={this.onRowEditCancel}\r\n          >\r\n            <Column\r\n              field=\"Cod_CursoObjetivo\"\r\n              header=\"Codigo\"\r\n              style={{ textAlign: \"center\", width: \"20%\" }}\r\n            />\r\n            <Column\r\n              field=\"Cod_Objetivo\"\r\n              header=\"Objetivo\"\r\n              style={{ textAlign: \"center\", width: \"20%\" }}\r\n              editor={this.Cod_ObjetivoEditor}\r\n            />\r\n            <Column\r\n              field=\"Cod_Curso\"\r\n              header=\"Curso\"\r\n              style={{ textAlign: \"center\", width: \"20%\" }}\r\n            />\r\n            <Column\r\n              rowEditor={true}\r\n              style={{ width: \"7%\", textAlign: \"center\" }}\r\n            ></Column>\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagessix;","import React from 'react';\r\nimport Pagessix from '../components/Pagessix';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass Pagesix extends React.Component {\r\n  render(){\r\n    return(\r\n      <div>\r\n        <LoginNavbarUser/>\r\n        <Pagessix/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagesix;","import React from 'react';\r\nimport './styles/ButtonActions.css';\r\nimport './styles/Grade.css';\r\nclass ButtonActions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dtalumnoN:[],\r\n      dtgradeStudent: {\r\n        gradingsummary : {},\r\n        lastattempt :{},\r\n        feedback : {\r\n          grade :  {\r\n            grader : {},\r\n            grade : {},\r\n          },\r\n          gradefordisplay : {},\r\n          gradeddate :{},\r\n          plugins : {},\r\n        },\r\n      },\r\n    };\r\n  }\r\n  componentWillMount(){\r\n    this.traerCalificacionStudent();\r\n    console.log(\"willmount  tercera\");   \r\n  }\r\n  componentDidMount(){   \r\n    console.log(\"didmounte tercera\");    \r\n  }\r\n  componentWillUpdate(){    \r\n    console.log(\"willupdate  tercera\")\r\n  }\r\n  componentDidUpdate(){\r\n    console.log(\"didupdate  tercera\")\r\n  }\r\n  componentWillUnmount(){\r\n    console.log(\"unwilmount  tercera\");    \r\n  }\r\n  traerCalificacionStudent = async() => {\r\n    try{      \r\n      var URL = (sessionStorage.getItem('url'))+'/webservice/rest/server.php?wstoken='+(sessionStorage.getItem('token'))+\r\n      '&moodlewsrestformat=json&wsfunction=mod_assign_get_submission_status&userid='+(this.props.userid)+'&assignid='+(sessionStorage.getItem('assignid'))\r\n      const response = await fetch(URL);    \r\n      const dtgradeStudent = await response.json();\r\n      this.setState({\r\n        dtgradeStudent: { \r\n          gradingsummary : dtgradeStudent.gradingsummary,\r\n          lastattempt : {\r\n            graded : dtgradeStudent.lastattempt.graded,\r\n            gradingstatus :dtgradeStudent.lastattempt.gradingstatus,\r\n          },\r\n          feedback : {\r\n              grade :  {\r\n                grader : dtgradeStudent.feedback.grade.grader,\r\n                grade : dtgradeStudent.feedback.grade.grade,\r\n              },\r\n              gradefordisplay : dtgradeStudent.feedback.gradefordisplay,\r\n              gradeddate : dtgradeStudent.feedback.gradeddate,\r\n            }\r\n          },\r\n      }); \r\n      }\r\n    catch (error) {\r\n    }    \r\n  }; \r\n  render(){        \r\n    return (      \r\n      <div className= \"listaUsuario\">\r\n        {this.state.dtalumnoN.map(usuarioName =>(                  \r\n          <div id={usuarioName.id} className= \"row\">\r\n            <div className= \"col-3\">\r\n              <img className= \"imageuser\" src= {usuarioName.profileimageurl} alt= \"imageuser\"/>\r\n              {usuarioName.fullname}\r\n            </div>\r\n            <div className= \"col-9\">\r\n              {this.state.dtgradeStudent.lastattempt.gradingstatus === 'graded' &&\r\n                <div>\r\n                  <h3 id= \"cca\">CON CALIFICACIÓN</h3> \r\n                  <div id= {usuarioName.id} class= \"rubrica\" dangerouslySetInnerHTML= {{ __html: this.state.dtgradeStudent.feedback.gradefordisplay}}/>\r\n                </div>               \r\n              }\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>      \r\n    );    \r\n  }\r\n}\r\nexport default ButtonActions;","import React from 'react';\r\nimport ListUser from './ListUser';\r\nimport './styles/Pagessix.css';\r\n// import './styles/Paglogin.css'; \r\nclass Pagesseven extends React.Component {\r\n    state = {\r\n        data : {\r\n            assignments : [],\r\n        },\r\n        data2 : [],\r\n        data3 : {\r\n          assignments : [],\r\n        },\r\n    }\r\n    componentDidMount(){\r\n        this.traerActividades();\r\n        this.traerAlumnos();        \r\n        this.traerestudiante();\r\n    }\r\n    traerActividades = async() => {\r\n        try{      \r\n          var URL = (sessionStorage.getItem('url'))+'/webservice/rest/server.php?wstoken='+(sessionStorage.getItem('token'))+\r\n          '&moodlewsrestformat=json&wsfunction=mod_assign_get_submissions&assignmentids[0]='+(sessionStorage.getItem('assignid'))\r\n          const response = await fetch(URL);    \r\n          const data = await response.json();\r\n          this.setState({\r\n            data : data\r\n          }); \r\n          }\r\n        catch (error) {\r\n        }    \r\n    };\r\n    traerAlumnos = async() => {\r\n      try{      \r\n        var URL = (sessionStorage.getItem('url'))+'/webservice/rest/server.php?wstoken='+(sessionStorage.getItem('token'))+\r\n        '&moodlewsrestformat=json&wsfunction=core_enrol_get_enrolled_users&courseid='+(sessionStorage.getItem('cursoid'))\r\n        const response = await fetch(URL);    \r\n        const data2 = await response.json();\r\n        this.setState({\r\n          data2 : data2\r\n        }); \r\n        }\r\n      catch (error) {\r\n      }    \r\n    };  \r\n  traerestudiante = async() => {\r\n    try{      \r\n      var URL = (sessionStorage.getItem('url'))+'/webservice/rest/server.php?wstoken='+(sessionStorage.getItem('token'))+\r\n      '&moodlewsrestformat=json&wsfunction=mod_assign_get_user_mappings&assignmentids[]='+(sessionStorage.getItem('assignid'))\r\n      const response = await fetch(URL);    \r\n      const data3 = await response.json();\r\n      this.setState({\r\n        data3: {\r\n          assignments : data3.assignments\r\n        }\r\n      }); \r\n      }\r\n    catch (error) {\r\n    }    \r\n  };\r\n  crearUsuario(){\r\n  }\r\n  salvarNotas(){\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"myClass\">\r\n        {this.state.data.assignments.map(lis => (                    \r\n          lis.submissions.map(usuarios => (\r\n            this.state.data3.assignments.map(mapp => mapp.mappings.map(st => \r\n              usuarios.userid === st.userid ? \r\n              <div className=\"row\">                    \r\n                <div className=\"col-12\">\r\n                  <a id={usuarios.userid} class=\"list-group-item list-group-item-action\" href=\"ponerlink\">\r\n                  <ListUser userid={usuarios.userid}/></a>\r\n                </div> \r\n                {this.salvarNotas()}          \r\n              </div>:\r\n              console.log(\"\")\r\n            ))\r\n          ))\r\n        ))}        \r\n        <p>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagesseven;","import React from 'react';\r\nimport Pagesseven from '../components/Pagesseven';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass Pageseven extends React.Component {\r\n  render(){\r\n    return(\r\n      <div>\r\n        <LoginNavbarUser/>\r\n        <Pagesseven/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pageseven;","import React from 'react';\r\nimport './styles/Pagessix.css';\r\n// import './styles/Paglogin.css';\r\nimport api from '../api';\r\n// TRAER NOTAS nesesita del id de estudiante el link del servidor de moodle token de sesion y el id de la asignacion generarda\r\nfunction traerAlumnoNames (studentUID, link, token, assignid){  \r\n  const  URL = link+'/webservice/rest/server.php?wstoken='+token+\r\n  '&moodlewsrestformat=json&wsfunction=core_user_get_users_by_field&field=id&values[0]='+(studentUID);\r\n  var lista  = document.querySelector('#users');\r\n  var item = document.createElement('div');\r\n  fetch(URL)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n    item.innerHTML = data['0'].fullname;\r\n    item.className = \"list-group-item list-group-item-action row\"\r\n    item.id = 'nam'+studentUID;\r\n    lista.appendChild(item);\r\n    //funcion que traer la notas si la turieva en caso contrrio se ovia\r\n    //traeralumnonotas idusuario servidormoodle tokenusuario idde asignacion\r\n    traerAlumnoNotas(studentUID, link, token, assignid);\r\n    })\r\n}   \r\n//TRAER NOTAS nesesita del id de estudiante el link del servidor de moodle token de sesion y el id de la asignacion generarda\r\nfunction traerAlumnoNotas (studentUID, link, token, assignid){  \r\n  const  URL = link+'/webservice/rest/server.php?wstoken='+token+\r\n  '&moodlewsrestformat=json&wsfunction=mod_assign_get_submission_status&userid='+(studentUID)+'&assignid='+(assignid)\r\n  var lista  = document.querySelector('#nam'+studentUID);\r\n  var item = document.createElement('p');\r\n  fetch(URL)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n    if(data.lastattempt.gradingstatus === 'graded'){\r\n      item.innerHTML = data.feedback.gradefordisplay;\r\n      item.id = 'not'+studentUID;\r\n      lista.appendChild(item);\r\n      // obtiene cantidad de criterios de rubrica\r\n      let notaasig = document.querySelector('#not'+studentUID).querySelectorAll('tr.criterion');\r\n      for(let i= 0; i < notaasig.length; i++){\r\n        document.querySelector('td.remark').remove();\r\n        // seleciona los criterios de rubrica\r\n        let criterio = notaasig[i].querySelector('td.description'); \r\n        // seleccion el puntaje alto de la rubrica\r\n        let notaCrt = notaasig[i].querySelector('td.last > div[class=level-wrapper] > div[class=score] > span[class=scorevalue');\r\n        // selecciona el puntaje obtenido de la rubrica\r\n        let notaObt = notaasig[i].querySelector('td[aria-checked=true] > div[class=level-wrapper] > div[class=score] > span[class=scorevalue');\r\n        // saca el puntaje objetino en el criterio\r\n        let puntaje = 2\r\n        //  notaObt.textContent/notaCrt.textContent;\r\n        //imprcion de prueba\r\n        // console.log(studentUID, criterio.textContent, notaCrt.textContent, notaObt.textContent, puntaje); \r\n      }      \r\n    }   \r\n  })\r\n}   \r\nclass Pageseight extends React.Component {\r\n  state = {\r\n    dtstudent : {\r\n      assignments : [],\r\n    },\r\n    dtstudentCurso : [],   \r\n    //aqui se añadio \r\n    data: {\r\n      resultado:[],\r\n    }, \r\n  }\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n//listando asignatura.list solo probe esto\r\n  fetchData = async () => {\r\n    this.setState({\r\n      loading: true,\r\n      error: null});\r\n      try{\r\n        const data = await api.asignacionCrud.list();\r\n        this.setState({ loading: false,\r\n        data: {resultado: [].concat(this.state.data.resultado,data.resultado)}\r\n        });\r\n      } catch (error) {\r\n        this.setState({ loading: false, error: error});\r\n      }\r\n  };\r\n  componentWillMount(){    \r\n    this.traerAlumnosCurso();      \r\n  }\r\n  traerAlumnosCurso = async() => {\r\n    try{      \r\n      var URL = (sessionStorage.getItem('url'))+'/webservice/rest/server.php?wstoken='+(sessionStorage.getItem('token'))+\r\n      '&moodlewsrestformat=json&wsfunction=core_enrol_get_enrolled_users&courseid='+(sessionStorage.getItem('cursoid'))\r\n      const response = await fetch(URL);    \r\n      const dtstudentCurso = await response.json();\r\n      this.setState({\r\n        dtstudentCurso : dtstudentCurso\r\n      }); \r\n      }\r\n    catch (error) {\r\n    }    \r\n  };\r\n  render() {\r\n    return (\r\n      <ul id= \"users\">\r\n        {this.state.dtstudentCurso.map(user =>(\r\n          user.roles.map(student =>(\r\n            student.roleid === 5 &&\r\n            (traerAlumnoNames(user.id, sessionStorage.getItem('url'), sessionStorage.getItem('token'), sessionStorage.getItem('assignid')))            \r\n          ))          \r\n        ))}\r\n      </ul>      \r\n    );    \r\n  }\r\n}\r\nexport default Pageseight;","import React from 'react';\r\nimport Pageseight from '../components/Pageseight';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass Pageeight extends React.Component {  \r\n  render(){\r\n    return(\r\n      <div>\r\n        <LoginNavbarUser/>\r\n        <Pageseight/>\r\n      </div>      \r\n    );\r\n  }\r\n}\r\nexport default Pageeight;","import React from \"react\";\r\nimport \"./styles/Pagefive.css\";\r\nimport api from \"../api\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Growl } from \"primereact/growl\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport {Dialog} from 'primereact/dialog';\r\nclass PagesFive extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dtResultadoIndicador: [],\r\n      dtResultadoObjetivo: [],\r\n      dtIndicador: [],\r\n      modalIsOpen: false,\r\n      resInd2: null\r\n    };\r\n    this.dtUpdateResInd = {};\r\n    this.Cod_ResultadoEditor = this.Cod_ResultadoEditor.bind(this);\r\n    this.Cod_IndicadorEditor = this.Cod_IndicadorEditor.bind(this);\r\n    this.requiredValidator = this.requiredValidator.bind(this);\r\n    this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditInit = this.onRowEditInit.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  handleChangeC = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n    const cResultado = {\r\n      Cod_ResulCursObjetivo: e.value\r\n    };\r\n    this.traerIndicador(cResultado);\r\n  };\r\n  createResultadoIndicador = async e => {\r\n    const cResultadoIndicador = {\r\n      Cod_IndicarResultado:\r\n        this.state.Cod_Resultado + \"-\" + this.state.Cod_Indicador,\r\n      Cod_Resultado: this.state.Cod_Resultado,\r\n      Cod_Indicador: this.state.Cod_Indicador,\r\n      Cod_Curso: sessionStorage.getItem(\"cursoid\")\r\n    };\r\n    await api.resultadoIndicadorCrud.create(cResultadoIndicador);\r\n    this.refreshPage();\r\n  };\r\n  updateResultadoIndicador = async (\r\n    pCod_ResulCursObjetivo, pCod_Resultado,\r\n    pCod_Indicador, pCod_Curso\r\n  ) => {\r\n    const cResultadoIndicador = {\r\n      Cod_IndicarResultado: pCod_ResulCursObjetivo, Cod_Resultado: pCod_Resultado, \r\n      Cod_Indicador: pCod_Indicador, Cod_Curso: pCod_Curso\r\n    };\r\n    await api.resultadoIndicadorCrud.create(cResultadoIndicador);\r\n  };\r\n  deleteResultadoIndicador = async (Cod_IndicarResultadoC) => {\r\n    const pCod_IndicarResultado = {\r\n      Cod_IndicarResultado: Cod_IndicarResultadoC\r\n    };\r\n    await api.resultadoIndicadorCrud.remove(pCod_IndicarResultado);\r\n    this.refreshPage();\r\n  };\r\n  componentDidMount() {\r\n    const cResultadoIndicador = {\r\n      Cod_Curso: sessionStorage.getItem(\"cursoid\")\r\n    };\r\n    this.traerResultadoIndicador(cResultadoIndicador);\r\n    this.traerResultadoCurso(cResultadoIndicador);\r\n  }\r\n  traerResultadoIndicador = async cResultadoIndicador => {\r\n    try {\r\n      const dtResultadoIndicador = await api.resultadoIndicadorCrud.listreinxCurso(\r\n        cResultadoIndicador\r\n      );\r\n      this.setState({\r\n        dtResultadoIndicador: dtResultadoIndicador.resultadoIndicadors\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerResultadoCurso = async cResultadoIndicador => {\r\n    try {\r\n      const dtResultadoObjetivo = await api.objetivoResultadoCrud.listrexCurso(\r\n        cResultadoIndicador\r\n      );\r\n      this.setState({\r\n        dtResultadoObjetivo: dtResultadoObjetivo.ObjetivoResultados\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerIndicador = async cResultado => {\r\n    try {\r\n      const dtIndicador = await api.indicadorCrud.ListInxRe(cResultado);\r\n      this.setState({\r\n        dtIndicador: dtIndicador.ResultadoIndicadors\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  displaySelection(data) {\r\n    if (!data || data.length === 0) {\r\n      return <div></div>;\r\n    } else {\r\n      if (data instanceof Array)\r\n        return (\r\n          <ul style={{ textAlign: \"left\", margin: 0 }}>\r\n            {data.map((slObjetivoResultado, i) => (\r\n              <button key={slObjetivoResultado.Cod_IndicarResultado}>\r\n                {slObjetivoResultado.Cod_IndicarResultado +\r\n                  \" - \" +\r\n                  slObjetivoResultado.Cod_IndicarResultado}\r\n              </button>\r\n            ))}\r\n          </ul>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={e =>\r\n              this.deleteResultadoIndicador(data.Cod_IndicarResultado)\r\n            }\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            Eliminar: {data.Cod_IndicarResultado}\r\n          </button>\r\n        );\r\n    }\r\n  }\r\n  onRowEditorValidator(rowData) {\r\n    let value = rowData[\"Cod_IndicarResultado\"];\r\n    return value.length > 0;\r\n  }\r\n  requiredValidator(props) {\r\n    let value = props.rowData[props.field];\r\n    return value && value.length > 0;\r\n  }\r\n  onEditorValueChange(props, value) {\r\n    let updatedResInd = [...props.value];\r\n    updatedResInd[props.rowIndex][props.field] = value;\r\n    this.setState({ resInd2: updatedResInd });\r\n  }\r\n  Cod_ResultadoEditor(props) {\r\n    return (\r\n      <Dropdown\r\n        value={props.value[props.rowIndex].Cod_Resultado}\r\n        options={this.state.dtResultadoObjetivo}\r\n        onChange={e => this.onEditorValueChange(props, e.value)}\r\n        style={{ width: \"100%\" }}\r\n        placeholder=\"Selecciona RE OB\"\r\n      />\r\n    );\r\n  }\r\n  Cod_IndicadorEditor(props) {\r\n    return (\r\n      <Dropdown\r\n        value={props.value[props.rowIndex].Cod_Resultado}\r\n        options={this.state.dtIndicador}\r\n        onChange={e => this.onEditorValueChange(props, e.value)}\r\n        style={{ width: \"100%\" }}\r\n        placeholder=\"Selecciona IN\"\r\n      />\r\n    );\r\n  }\r\n  onRowEditInit(event) {\r\n    this.dtUpdateResInd[event.data.Cod_IndicarResultado] = { ...event.data };\r\n    this.resInd2 = { ...event.data };\r\n  }\r\n  onRowEditSave(event) {\r\n    if (this.onRowEditorValidator(event.data)) {\r\n      console.log(event.data);\r\n      this.updateResultadoIndicador(\r\n        event.data.Cod_IndicarResultado,\r\n        event.data.Cod_Resultado,\r\n        event.data.Cod_Resultado,\r\n        event.data.Cod_Curso\r\n      );\r\n      this.growl.show({\r\n        severity: \"Actualizado\",\r\n        summary: \"Exitoso!!\",\r\n        detail: \"OE is updated\"\r\n      });\r\n    } else {\r\n      this.growl.show({\r\n        severity: \"error\",\r\n        summary: \"Error\",\r\n        detail: \"OE is required\"\r\n      });\r\n    }\r\n  }\r\n  onRowEditCancel(event) {\r\n    let resultadoIndicador = [...this.state.dtResultadoIndicador];\r\n    resultadoIndicador[event.index] = this.dtUpdateResInd[\r\n      event.data.Cod_IndicarResultado\r\n    ];\r\n    delete this.dtUpdateResInd[event.data.Cod_IndicarResultado];\r\n    this.setState({\r\n      dtResultadoIndicador: resultadoIndicador\r\n    });\r\n  }\r\n  onEditorValueChangeForRowEditing = async (props, value) => {\r\n    let updatedResInd = [...props.value];\r\n    updatedResInd[props.rowIndex][props.field] = value;\r\n    this.setState({ resInd2: updatedResInd });\r\n  };\r\n  refreshPage() {\r\n    window.location.reload(true);\r\n  }\r\n  footer = (\r\n    <div>\r\n      <Button\r\n        label=\"Crear\"\r\n        icon=\"pi pi-check\"\r\n        onBlur={this.onHide}\r\n        onClick={this.createResultadoIndicador}\r\n      />\r\n      {/* <Button label=\"Cancelar\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHide} /> */}\r\n    </div>\r\n  );\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <div className=\"centrar\">\r\n            <h1> Indicadores de Desempeño </h1>\r\n            <h2>{sessionStorage.getItem(\"fullnameCu\")}</h2>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"row centro2 abajo\">\r\n            <h2>\r\n              Lista de Indicadores de Desempeño \r\n            </h2>\r\n            <div className=\"col espacioss\">\r\n              <div className=\"col espacioss\">\r\n                <Dialog\r\n                  header=\"Relacion Resultados con Indicadores de Desempeño\"\r\n                  visible={this.state.visible}\r\n                  footer={this.footer}\r\n                  style={{ width: \"50vw\" }}\r\n                  modal={true}\r\n                  onHide={() => this.setState({ visible: false })}\r\n                >\r\n                  <div className=\"p-inputgroup\">\r\n                    <span className=\"p-inputgroup-addon\" width=\"80%\">\r\n                      Resultado de Estudiante\r\n                    </span>\r\n                    <Dropdown\r\n                      name=\"Cod_Resultado\"\r\n                      value={this.state.Cod_Resultado}\r\n                      options={this.state.dtResultadoObjetivo}\r\n                      onChange={this.handleChangeC}\r\n                      style={{ width: \"60%\" }}\r\n                      placeholder=\"Selecciona RE\"\r\n                    />\r\n                  </div>\r\n                  <p />\r\n                  <div className=\"p-inputgroup\">\r\n                    <span className=\"p-inputgroup-addon\" width=\"80%\">\r\n                      Indicadores de Desempeño\r\n                    </span>\r\n                    <Dropdown\r\n                      name=\"Cod_Indicador\"\r\n                      value={this.state.Cod_Indicador}\r\n                      options={this.state.dtIndicador}\r\n                      onChange={this.handleChange}\r\n                      style={{ width: \"60%\" }}\r\n                      placeholder=\"Selecciona IN\"\r\n                    />\r\n                  </div>\r\n                </Dialog>\r\n                <Button\r\n                  label=\"Nuevo\"\r\n                  onClick={e => this.setState({ visible: true })}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <Growl ref={el => (this.growl = el)} />\r\n            <DataTable\r\n              value={this.state.dtResultadoIndicador}\r\n              selectionMode=\"single\"\r\n              metaKeySelection={false}\r\n              selection={this.state.selecResultadoIndicador}\r\n              header={this.displaySelection(this.state.selecResultadoIndicador)}\r\n              onSelectionChange={e =>\r\n                this.setState({ selecResultadoIndicador: e.value })\r\n              }\r\n              responsive={true}\r\n              editMode=\"row\"\r\n              rowEditorValidator={this.onRowEditorValidator}\r\n              onRowEditInit={this.onRowEditInit}\r\n              onRowEditSave={this.onRowEditSave}\r\n              onRowEditCancel={this.onRowEditCancel}\r\n            >\r\n              {/* <Column\r\n                field=\"Cod_IndicarResultado\"\r\n                header=\"Codigo\"\r\n                style={{ textAlign: \"center\", width: \"20%\" }}\r\n              /> */}\r\n              <Column\r\n                field=\"Cod_Resultado\"\r\n                header=\"Resultado\"\r\n                style={{ textAlign: \"center\", width: \"20%\" }}\r\n                editor={this.Cod_ResultadoEditor}\r\n              />\r\n              <Column\r\n                field=\"Cod_Indicador\"\r\n                header=\"Indicador\"\r\n                style={{ textAlign: \"center\", width: \"20%\" }}\r\n                editor={this.Cod_IndicadorEditor}\r\n              />\r\n              {/* <Column\r\n                field=\"Cod_Curso\"\r\n                header=\"Curso\"\r\n                style={{ textAlign: \"left\", width: \"20%\" }}\r\n              /> */}\r\n              <Column\r\n                rowEditor={true}\r\n                style={{ width: \"7%\", textAlign: \"center\" }}\r\n              ></Column>\r\n            </DataTable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PagesFive;","import React from 'react';\r\nimport Pagesnine from '../components/Pagesnine';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass Pagenine extends React.Component {\r\n  render(){\r\n    return(\r\n      <div>\r\n        <LoginNavbarUser/>\r\n        <Pagesnine/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagenine;","import React from \"react\";\r\nimport \"./styles/Edicion.css\";\r\nimport { Button, ButtonGroup, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input } from \"reactstrap\";\r\nimport api from \"../api\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Growl } from \"primereact/growl\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nclass PageEditES extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dtEscuela: [],\r\n      modalIsOpen: false,\r\n      escu2: null\r\n    };\r\n    this.dtUpdateEsc = {};\r\n    this.Cod_EscuelaEditor = this.Cod_EscuelaEditor.bind(this);\r\n    this.SedeEditor = this.SedeEditor.bind(this);\r\n    this.DescripcionEditor = this.DescripcionEditor.bind(this);\r\n    this.requiredValidator = this.requiredValidator.bind(this);\r\n    this.editorForRowEditing = this.editorForRowEditing.bind(this);\r\n    this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditInit = this.onRowEditInit.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n  }\r\n  ToggleModal() {\r\n    this.setState({\r\n      modalIsOpen: !this.state.modalIsOpen\r\n    });\r\n  }\r\nhandleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  createEscuela = async e => {\r\n    const cEscuela = {\r\n      Cod_Escuela: this.state.Cod_Escuela,\r\n      Sede: this.state.Sede,\r\n      Descripcion: this.state.Descripcion\r\n    };\r\n    console.log(cEscuela);\r\n    await api.escuelaCrud.create(cEscuela);\r\n    this.refreshPage();\r\n  };\r\n  updateEscuela = async (pCod_Escuela, pSede, pDescripcion) => {\r\n    const cEscuela = {\r\n      Cod_Escuela: pCod_Escuela,\r\n      Sede: pSede,\r\n      Descripcion: pDescripcion\r\n    };\r\n    await api.escuelaCrud.create(cEscuela);\r\n  };\r\n  deleteEscuela = async (dCod_Escuela) => {\r\n    const pCod_Escuela = {\r\n      Cod_Escuela: dCod_Escuela\r\n    };\r\n    await api.escuelaCrud.remove(pCod_Escuela);\r\n    this.refreshPage();\r\n  };\r\n  componentDidMount() {\r\n    this.traerEscuela();\r\n  }\r\n  traerEscuela = async () => {\r\n    try {\r\n      const dtEscuela = await api.escuelaCrud.list();\r\n      this.setState({\r\n        dtEscuela: dtEscuela.Escuelas\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  onRowEditorValidator(rowData) {\r\n    let value = rowData[\"Descripcion\"];\r\n    return value.length > 0;\r\n  }\r\n  Cod_EscuelaEditor(props) {\r\n    return this.inputTextEditor(props, \"Cod_Escuela\");\r\n  }\r\n  DescripcionEditor(props) {\r\n    return this.inputTextEditor(props, \"Descripcion\");\r\n  }\r\n  SedeEditor(props) {\r\n    return this.inputTextEditor(props, \"Sede\");\r\n  }\r\n  requiredValidator(props) {\r\n    let value = props.rowData[props.field];\r\n    return value && value.length > 0;\r\n  }\r\n  onEditorValueChange(props, value) {\r\n    let updatedEsc = [...props.value];\r\n    updatedEsc[props.rowIndex][props.field] = value;\r\n    this.setState({ escu2: updatedEsc });\r\n  }\r\n  onRowEditInit(event) {\r\n    this.dtUpdateEsc[event.data.Cod_Escuela] = { ...event.data };\r\n    this.escu2 = { ...event.data };\r\n  }\r\n  onRowEditSave(event) {\r\n    if (this.onRowEditorValidator(event.data)) {\r\n      this.updateEscuela(\r\n        event.data.Cod_Objetivo,\r\n        event.data.Sede,\r\n        event.data.Descripcion\r\n      );\r\n      this.growl.show({\r\n        severity: \"Actualizado\",\r\n        summary: \"Exitoso!!\",\r\n        detail: \"ES is updated\"\r\n      });\r\n    } else {\r\n      this.growl.show({\r\n        severity: \"error\",\r\n        summary: \"Error\",\r\n        detail: \"ES is required\"\r\n      });\r\n    }\r\n  }\r\n  onRowEditCancel(event) {\r\n    let rEscuela = [...this.state.dtEscuela];\r\n    rEscuela[event.index] = this.dtUpdateEsc[event.data.Cod_Escuela];\r\n    delete this.dtUpdateEsc[event.data.Cod_Escuela];\r\n    this.setState({\r\n      dtEscuela: rEscuela\r\n    });\r\n  }\r\n  onEditorValueChangeForRowEditing = async (props, value) => {\r\n    let updatedEsc = [...props.value];\r\n    updatedEsc[props.rowIndex][props.field] = value;\r\n    this.setState({ escu2: updatedEsc });\r\n  };\r\n  editorForRowEditing(props, field) {\r\n    return (\r\n      <InputText\r\n        type=\"text\"\r\n        value={props.rowData[field]}\r\n        onChange={e =>\r\n          this.onEditorValueChangeForRowEditing(props, e.target.value)\r\n        }\r\n      />\r\n    );\r\n  }\r\n  refreshPage() {\r\n    window.location.reload(true);\r\n  }\r\n  displaySelection(data) {\r\n    if (!data || data.length === 0) {\r\n      return <div></div>;\r\n    } else {\r\n      if (data instanceof Array)\r\n        return (\r\n          <ul style={{ textAlign: \"left\", margin: 0 }}>\r\n            {data.map((slEscuela, i) => (\r\n              <button key={slEscuela.Cod_Escuela}>\r\n                {slEscuela.Cod_Escuela + \" - \" + slEscuela.Cod_Escuela}\r\n              </button>\r\n            ))}\r\n          </ul>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={e => this.deleteEscuela(data.Cod_Escuela)}\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            Eliminar: {data.Cod_Escuela}\r\n          </button>\r\n        );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"centro\">\r\n            <h1>Escuela</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row centro2 abajo\">\r\n          <h2>Lista de Escuelas</h2>\r\n          <div className=\"col espacioss\">\r\n            <ButtonGroup>\r\n              <div className=\"col\">\r\n                <Button\r\n                  outline\r\n                  color=\"primary mr-2\"\r\n                  size=\"lg\"\r\n                  onClick={this.ToggleModal.bind(this)}\r\n                  label=\"Nuevo\"\r\n                >\r\n                  <i class=\"fas fa-plus-circle\"></i>\r\n                </Button>\r\n                <Modal isOpen={this.state.modalIsOpen}>\r\n                  <ModalHeader toggle={this.ToggleModal.bind(this)}>\r\n                    Nueva Escuela Profesional\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Codigo Escuela\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Codigo Escuela Profesional\"\r\n                        name=\"Cod_Escuela\"\r\n                        value={this.state.Cod_Escuela}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Sede\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Sede de la Escuela\"\r\n                        name=\"Sede\"\r\n                        value={this.state.sede}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Descripcion\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Descripcion de la Escuela\"\r\n                        name=\"Descripcion\"\r\n                        value={this.state.Descripcion}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </InputGroup>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onBlur={this.createEscuela}\r\n                      onClick={this.ToggleModal.bind(this)}\r\n                    >\r\n                      GUARDAR\r\n                    </Button>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={this.ToggleModal.bind(this)}\r\n                    >\r\n                      CANCELAR\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n        <div className=\"\">\r\n          <Growl ref={el => (this.growl = el)} />\r\n          <DataTable\r\n            value={this.state.dtEscuela}\r\n            selectionMode=\"single\"\r\n            selection={this.state.selecEscuela}\r\n            header={this.displaySelection(this.state.selecEscuela)}\r\n            onSelectionChange={e => this.setState({ selecEscuela: e.value })}\r\n            responsive={true}\r\n            editMode=\"row\"\r\n            metaKeySelection={false}\r\n            rowEditorValidator={this.onRowEditorValidator}\r\n            onRowEditInit={this.onRowEditInit}\r\n            onRowEditSave={this.onRowEditSave}\r\n            onRowEditCancel={this.onRowEditCancel}\r\n          >\r\n            <Column\r\n              field=\"Cod_Escuela\"\r\n              header=\"Escuela\"\r\n              style={{ textAlign: \"center\", width: \"28%\" }}\r\n            />\r\n            <Column\r\n              field=\"Sede\"\r\n              header=\"Sede\"\r\n              style={{ textAlign: \"center\", width: \"15%\" }}\r\n              editor={props => this.editorForRowEditing(props, \"Sede\")}\r\n            />\r\n            <Column\r\n              field=\"Descripcion\"\r\n              header=\"Descripcion\"\r\n              style={{ textAlign: \"center\", width: \"55%\" }}\r\n              editor={props => this.editorForRowEditing(props, \"Descripcion\")}\r\n            />\r\n            <Column\r\n              rowEditor={true}\r\n              style={{ width: \"7%\", textAlign: \"center\" }}\r\n            ></Column>\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageEditES;","import React from 'react';\r\nimport PagesEditES from '../components/PagesEditES';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass PageEditES extends React.Component {\r\n  render(){\r\n    return(  \r\n      <div> \r\n       <LoginNavbarUser />\r\n       <PagesEditES/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageEditES;","import React from \"react\";\r\nimport \"./styles/Edicion.css\";\r\nimport api from \"../api\";\r\nimport { Button, ButtonGroup, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input} from \"reactstrap\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Growl } from \"primereact/growl\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nclass PageEditIN extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dtIndicadores: [],\r\n      dtIndiNivel: [],\r\n      dtResultados: [],\r\n      modalIsOpen: false,\r\n      ind2: null\r\n    };\r\n    this.dtUpdatInd= {};\r\n    this.IndicadorEditor = this.IndicadorEditor.bind(this);\r\n    this.Cod_IndicadorNivelEditor = this.Cod_IndicadorNivelEditor.bind(this);\r\n    this.DescripcionEditor = this.DescripcionEditor.bind(this);\r\n    this.requiredValidator = this.requiredValidator.bind(this);\r\n    this.editorForRowEditing = this.editorForRowEditing.bind(this);\r\n    this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditInit = this.onRowEditInit.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n  };\r\n  ToggleModal() {\r\n    this.setState({\r\n      modalIsOpen: !this.state.modalIsOpen\r\n    });\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  createIndicador = async e => {\r\n    const cIndicador = {\r\n      Cod_Resultado: this.state.Cod_Resultado,\r\n      Cod_Indicadornivel: this.state.Cod_Indicadornivel,\r\n      Cod_Indicador: this.state.Cod_Indicador,\r\n      DescripcionLarga: this.state.DescripcionLarga,\r\n      DescripcionCorta: this.state.DescripcionCorta,\r\n      valor: this.state.valor\r\n    };\r\n    await api.indicadorCrud.create(cIndicador);\r\n    this.refreshPage();\r\n  };\r\n  updateIndicador = async (pCod_Indicadornivel, pDescripcionLarga, pDescripcionCorta, pvalor) => {\r\n    const cIndicador = {\r\n      Cod_Indicadornivel: pCod_Indicadornivel,\r\n      DescripcionLarga: pDescripcionLarga,\r\n      DescripcionCorta: pDescripcionCorta,\r\n      valor: pvalor\r\n    };\r\n    await api.indicadorCrud.create(cIndicador);\r\n  };\r\n  deleteInicador = async (dCod_indicador) => {\r\n    console.log(dCod_indicador);\r\n    const pCod_indicador = {\r\n      Cod_Resultado: dCod_indicador.Cod_Resultado,\r\n      Cod_Indicador: dCod_indicador.Cod_Indicador,\r\n      Cod_Indicadornivel: dCod_indicador.Cod_Indicadornivel\r\n    };\r\n    await api.indicadorCrud.remove(pCod_indicador);\r\n    this.refreshPage();\r\n  };\r\n  traerIndicador = async () => {\r\n    try {\r\n      const dtIndicadores = await api.indicadorCrud.list();\r\n      this.setState({\r\n        dtIndicadores: dtIndicadores.Indicadores\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerResultado = async () => {\r\n    try {\r\n      const dtResultados = await api.resultadoEstudianteCrud.listCb();\r\n      this.setState({\r\n        dtResultados: dtResultados.Resultado\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerIndicadorNivel = async () => {\r\n    try {\r\n      const dtIndiNivel = await api.IndiNivel.listCb();\r\n      this.setState({\r\n        dtIndiNivel: dtIndiNivel.Indicadores\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  componentDidMount() {\r\n    this.traerIndicador();\r\n    this.traerIndicadorNivel();\r\n    this.traerResultado();\r\n  }\r\n  onRowEditorValidator(rowData) {\r\n    let value = rowData[\"DescripcionLarga\"];\r\n    return value.length > 0;\r\n  }\r\n  Cod_ResultadoEditor(props) {\r\n    return this.inputTextEditor(props, \"Cod_Resultado\");\r\n  }\r\n  Cod_IndicadorNivelEditor(props) {\r\n    return this.inputTextEditor(props, \"Cod_IndicadorNivel\");\r\n  }\r\n  DescripcionEditor(props) {\r\n    return this.inputTextEditor(props, \"DescripcionLarga\");\r\n  }\r\n  requiredValidator(props) {\r\n    let value = props.rowData[props.field];\r\n    return value && value.length > 0;\r\n  }\r\n  onEditorValueChange(props, value) {\r\n    let updatedInd = [...props.value];\r\n    updatedInd[props.rowIndex][props.field] = value;\r\n    this.setState({ ind2: updatedInd });\r\n  }\r\n  IndicadorEditor(props) {\r\n    return (\r\n      <Dropdown \r\n        value={props.value[props.rowIndex].Cod_Indicadornivel}\r\n        options={this.state.dtIndiNivel}\r\n        onChange={(e) => this.onEditorValueChange(props, e.value)}\r\n        placeholder=\"Indicador\"\r\n        responsive={true}\r\n      />\r\n    );\r\n  }\r\n  onRowEditInit(event) {\r\n    this.dtUpdatInd[event.data.Cod_Indicador] = { ...event.data };\r\n    this.ind2 = { ...event.data };\r\n  }\r\n  onRowEditSave(event) {\r\n    if (this.onRowEditorValidator(event.data)) {\r\n      this.updateIndicador(\r\n        event.data.Cod_Indicadornivel,\r\n        event.data.DescripcionLarga,\r\n        event.data.DescripcionCorta,\r\n        event.data.valor\r\n      );\r\n      this.growl.show({\r\n        severity: \"Actualizado\",\r\n        summary: \"Exitoso!!\",\r\n        detail: \"IN is updated\"\r\n      });\r\n    } else {\r\n      this.growl.show({\r\n        severity: \"error\",\r\n        summary: \"Error\",\r\n        detail: \"IN is required\"\r\n      });\r\n    }\r\n  }\r\n  onRowEditCancel(event) {\r\n    let indicador = [...this.state.dtIndicadores];\r\n    indicador[event.index] = this.dtUpdatInd[event.data.Cod_Indicador];\r\n    delete this.dtUpdatInd[event.data.Cod_Indicador];\r\n    this.setState({\r\n      dtIndicadores: indicador\r\n    });\r\n  }\r\n  onEditorValueChangeForRowEditing = async (props, value) => {\r\n    let updatedInd = [...props.value];\r\n    updatedInd[props.rowIndex][props.field] = value;\r\n    this.setState({ ind2: updatedInd });\r\n  };\r\n  editorForRowEditing(props, field) {\r\n    return (\r\n      <InputText\r\n        type=\"text\"\r\n        value={props.rowData[field]}\r\n        onChange={e =>\r\n          this.onEditorValueChangeForRowEditing(props, e.target.value)\r\n        }\r\n      />\r\n    );\r\n  }\r\n  refreshPage() {\r\n    window.location.reload(true);\r\n  }\r\n  displaySelection(data) {\r\n    if (!data || data.length === 0) {\r\n      return <div></div>;\r\n    } else {\r\n      if (data instanceof Array)\r\n        return (\r\n          <ul style={{ textAlign: \"left\", margin: 0 }}>\r\n            {data.map((slIndicador, i) => (\r\n              <button key={slIndicador.Cod_Indicador}>\r\n                {slIndicador.Cod_Indicador + \" - \" + slIndicador.Cod_Indicador}\r\n              </button>\r\n            ))}\r\n          </ul>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={e => this.deleteInicador(data)}\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            Eliminar: {data.Cod_Indicador}\r\n          </button>\r\n        );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"centro\">\r\n            <h1>Indicadores</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row centro2 abajo\">\r\n          <h2>Lista de Indicadores</h2>\r\n          <div className=\"col espacioss\">\r\n            <ButtonGroup>\r\n              <div className=\"col\">\r\n                <Button\r\n                  outline\r\n                  color=\"primary mr-2\"\r\n                  size=\"lg\"\r\n                  onClick={this.ToggleModal.bind(this)}\r\n                >\r\n                  <i class=\"fas fa-plus-circle\"></i>\r\n                </Button>\r\n                <Modal isOpen={this.state.modalIsOpen}>\r\n                  <ModalHeader toggle={this.ToggleModal.bind(this)}>\r\n                    Nuevo Indicador\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Codigo R.E.\r\n                      </InputGroupAddon>\r\n                      <Dropdown\r\n                        name=\"Cod_Resultado\"\r\n                        options={this.state.dtResultados}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.Cod_Resultado}\r\n                        style={{ width: \"70%\" }}\r\n                        placeholder=\"Selecciona Resultado\"\r\n                      />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Codigo Nivel\r\n                      </InputGroupAddon>\r\n                      <Dropdown\r\n                        name=\"Cod_Indicadornivel\"\r\n                        options={this.state.dtIndiNivel}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.Cod_Indicadornivel}\r\n                        style={{ width: \"70%\" }}\r\n                        placeholder=\"Selecciona Indicadores\"\r\n                      />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Codigo Indicador\r\n                      </InputGroupAddon>\r\n                      <Input placeholder=\"Codigo Indicador\"\r\n                        value={this.state.Cod_Indicador}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"Cod_Indicador\"/>\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Descripcion Larga\r\n                      </InputGroupAddon>\r\n                      <Input placeholder=\"Descripcion Larga\"\r\n                        value={this.state.DescripcionLarga}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"DescripcionLarga\" />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Descripcion Corta\r\n                      </InputGroupAddon>\r\n                      <Input placeholder=\"Descripcion Corta\"\r\n                        value={this.state.DescripcionCorta}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"DescripcionCorta\" />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Valor\r\n                      </InputGroupAddon>\r\n                      <Input placeholder=\"Valor del Indicador\"\r\n                        value={this.state.Valor}\r\n                        onChange={this.handleChange}\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        name=\"valor\"/>\r\n                    </InputGroup>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onBlur={this.createIndicador}\r\n                      onClick={this.ToggleModal.bind(this)}\r\n                    >\r\n                      GUARDAR\r\n                    </Button>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={this.ToggleModal.bind(this)}\r\n                    >\r\n                      CANCELAR\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n        <div className=\"\">\r\n        <Growl ref={el => (this.growl = el)} />\r\n          <DataTable\r\n            value={this.state.dtIndicadores}\r\n            selectionMode=\"single\"\r\n            metaKeySelection={false}\r\n            selection={this.state.selecIndicador}\r\n            header={this.displaySelection(this.state.selecIndicador)}\r\n            onSelectionChange={e => this.setState({ selecIndicador: e.value })}\r\n            responsive={true}\r\n            editMode=\"row\"\r\n            rowEditorValidator={this.onRowEditorValidator}\r\n            onRowEditInit={this.onRowEditInit}\r\n            onRowEditSave={this.onRowEditSave}\r\n            onRowEditCancel={this.onRowEditCancel}\r\n          >\r\n            <Column\r\n              field=\"Cod_Indicador\"\r\n              header=\"Indicador\"\r\n              style={{ textAlign: \"center\", width: \"8%\" }}\r\n            />\r\n            <Column\r\n              field=\"Cod_Resultado\"\r\n              header=\"Resultado\"\r\n              style={{ textAlign: \"center\", width: \"10%\" }}\r\n            />\r\n            <Column\r\n              field=\"Cod_Indicadornivel\"\r\n              header=\"Nivel\"\r\n              style={{ textAlign: \"center\", width: \"10%\" }}\r\n              editor={this.IndicadorEditor}\r\n            />\r\n            <Column\r\n              field=\"DescripcionLarga\"\r\n              header=\"Descripcion Larga\"\r\n              style={{ textAlign: \"center\", width: \"30%\" }}\r\n              editor={props => this.editorForRowEditing(props, \"DescripcionLarga\")}\r\n            />\r\n            <Column\r\n              field=\"DescripcionCorta\"\r\n              header=\"Descripcion Corta\"\r\n              style={{ textAlign: \"center\", width: \"30%\" }}\r\n              editor={props => this.editorForRowEditing(props, \"DescripcionCorta\")}\r\n            />\r\n            <Column\r\n              field=\"valor\"\r\n              header=\"Valor\"\r\n              style={{ textAlign: \"center\", width: \"10%\" }}\r\n              editor={props => this.editorForRowEditing(props, \"Valor\")}\r\n            />\r\n            <Column\r\n              rowEditor={true}\r\n              style={{ width: \"7%\", textAlign: \"center\" }}\r\n            ></Column>\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageEditIN;","import React from 'react';\r\nimport PagesEditIN from '../components/PagesEditIN';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass PageEditIN extends React.Component {\r\n  render(){\r\n    return(  \r\n      <div> \r\n       <LoginNavbarUser />\r\n       <PagesEditIN/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageEditIN;","import React from \"react\";\r\nimport \"./styles/Edicion.css\";\r\nimport { Button, ButtonGroup, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input } from \"reactstrap\";\r\nimport api from \"../api\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Growl } from \"primereact/growl\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nclass PageEditRE extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dtResultado: [],\r\n      modalIsOpen: false,\r\n      resu2: null\r\n    };\r\n    this.dtUpdateRes = {};\r\n    this.NomResultadoEditor = this.NomResultadoEditor.bind(this);\r\n    this.valorEditor = this.valorEditor.bind(this);\r\n    this.DescripcionEditor = this.DescripcionEditor.bind(this);\r\n    this.requiredValidator = this.requiredValidator.bind(this);\r\n    this.editorForRowEditing = this.editorForRowEditing.bind(this);\r\n    this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditInit = this.onRowEditInit.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n  }\r\n  ToggleModal() {\r\n    this.setState({\r\n      modalIsOpen: !this.state.modalIsOpen\r\n    });\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  createResultado = async e => {\r\n    const cResultado = {\r\n      Cod_Resultado: this.state.Cod_Resultado,\r\n      NomResultado: this.state.NomResultado,\r\n      Descripcion: this.state.Descripcion,\r\n      valor : this.state.valor\r\n    };\r\n    console.log(cResultado);\r\n    await api.resultadoEstudianteCrud.create(cResultado);\r\n    this.refreshPage();\r\n  };\r\n  updateResultado = async (pCod_Resultado, pNomResultado, pDescripcion, pvalor) => {\r\n    const cResultado = {\r\n      Cod_Resultado: pCod_Resultado,\r\n      NomResultado: pNomResultado,\r\n      Descripcion: pDescripcion,\r\n      valor: pvalor\r\n    };\r\n    await api.resultadoEstudianteCrud.create(cResultado);\r\n  };\r\n  deleteResultado = async (dCod_Resultado) => {\r\n    const pCod_Resultado = {\r\n      Cod_Resultado: dCod_Resultado\r\n    };\r\n    await api.resultadoEstudianteCrud.remove(pCod_Resultado);\r\n    this.refreshPage();\r\n  };\r\n  traerResultadoEducacional = async () => {\r\n    try {\r\n      const dtResultado = await api.resultadoEstudianteCrud.list();\r\n      this.setState({\r\n        dtResultado: dtResultado.Resultados\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  componentDidMount() {\r\n    this.traerResultadoEducacional();\r\n  }\r\n  onRowEditorValidator(rowData) {\r\n    let value = rowData[\"NomResultado\"];\r\n    return value.length > 0;\r\n  }\r\n  NomResultadoEditor(props) {\r\n    return this.inputTextEditor(props, \"NomResultado\");\r\n  }\r\n  valorEditor(props) {\r\n    return this.inputTextEditor(props, \"valor\");\r\n  }\r\n  DescripcionEditor(props) {\r\n    return this.inputTextEditor(props, \"Descripcion\");\r\n  }\r\n  requiredValidator(props) {\r\n    let value = props.rowData[props.field];\r\n    return value && value.length > 0;\r\n  }\r\n  onEditorValueChange(props, value) {\r\n    let updateRes = [...props.value];\r\n    updateRes[props.rowIndex][props.field] = value;\r\n    this.setState({ resu2: updateRes });\r\n  }\r\n  onRowEditInit(event) {\r\n    this.dtUpdateRes[event.data.Cod_Resultado] = { ...event.data };\r\n    this.resu2 = { ...event.data };\r\n  }\r\n  onRowEditSave(event) {\r\n    if (this.onRowEditorValidator(event.data)) {\r\n      this.updateResultado(\r\n        event.data.Cod_Resultado,\r\n        event.data.NomResultado,\r\n        event.data.Descripcion,\r\n        event.data.valor\r\n      );\r\n      this.growl.show({\r\n        severity: \"Actualizado\",\r\n        summary: \"Exitoso!!\",\r\n        detail: \"RE is updated\"\r\n      });\r\n    } else {\r\n      this.growl.show({\r\n        severity: \"error\",\r\n        summary: \"Error\",\r\n        detail: \"RE is required\"\r\n      });\r\n    }\r\n  }\r\n  onRowEditCancel(event) {\r\n    let resultado = [...this.state.dtResultado];\r\n    resultado[event.index] = this.dtUpdateRes[event.data.Cod_Resultado];\r\n    delete this.dtUpdateRes[event.data.Cod_Resultado];\r\n    this.setState({\r\n      dtResultado: resultado\r\n    });\r\n  }\r\n  onEditorValueChangeForRowEditing = async (props, value) => {\r\n    let updateRes = [...props.value];\r\n    updateRes[props.rowIndex][props.field] = value;\r\n    this.setState({ obj2: updateRes });\r\n  };\r\n  editorForRowEditing(props, field) {\r\n    return (\r\n      <InputText\r\n        type=\"text\"\r\n        value={props.rowData[field]}\r\n        onChange={e =>\r\n          this.onEditorValueChangeForRowEditing(props, e.target.value)\r\n        }\r\n      />\r\n    );\r\n  }\r\n  refreshPage() {\r\n    window.location.reload(true);\r\n  }\r\n  displaySelection(data) {\r\n    if (!data || data.length === 0) {\r\n      return <div></div>;\r\n    } else {\r\n      if (data instanceof Array)\r\n        return (\r\n          <ul style={{ textAlign: \"left\", margin: 0 }}>\r\n            {data.map((slResultado, i) => (\r\n              <button key={slResultado.Cod_Resultado}>\r\n                {slResultado.Cod_Resultado + \" - \" + slResultado.Cod_Resultado}\r\n              </button>\r\n            ))}\r\n          </ul>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={e => this.deleteResultado(data.Cod_Resultado)}\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            Eliminar: {data.Cod_Resultado}\r\n          </button>\r\n        );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"centro\">\r\n            <h1>Resultado del Estudiante</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row centro2 abajo\">\r\n          <h2>Lista de Resultados del Estudiante</h2>\r\n          <div className=\"col espacioss\">\r\n            <ButtonGroup>\r\n              <div className=\"col\">\r\n                <Button\r\n                  outline\r\n                  color=\"primary mr-2\"\r\n                  size=\"lg\"\r\n                  onClick={this.ToggleModal.bind(this)}\r\n                >\r\n                  <i class=\"fas fa-plus-circle\"></i>\r\n                </Button>\r\n                <Modal isOpen={this.state.modalIsOpen}>\r\n                  <ModalHeader toggle={this.ToggleModal.bind(this)}>\r\n                    Nuevo Resultado del Estudiante\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Codigo R.E.\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Codigo Resultado del Estudiante\"\r\n                        name=\"Cod_Resultado\"\r\n                        value={this.state.Cod_Resultado}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Nombre R.E.\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Nombre Resultado del Estudiante\"\r\n                        name=\"NomResultado\"\r\n                        value={this.state.NomResultado}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Descripcion\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Descripcion del Resultado del Estudiante\"\r\n                        name=\"Descripcion\"                        \r\n                        value={this.state.Descripcion}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Valor\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Valor del Resultado del Estudiante\"\r\n                        type= \"number\"\r\n                        name=\"valor\"                        \r\n                        value={this.state.valor}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </InputGroup>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onBlur={this.createResultado}\r\n                      onClick={this.ToggleModal.bind(this)}\r\n                    >\r\n                      GUARDAR\r\n                    </Button>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={this.ToggleModal.bind(this)}\r\n                    >\r\n                      CANCELAR\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n        <div className=\"\">\r\n          <Growl ref={el => (this.growl = el)} />\r\n          <DataTable\r\n            value={this.state.dtResultado}\r\n            selectionMode=\"single\"\r\n            metaKeySelection={false}\r\n            selection={this.state.selecResultado}\r\n            header={this.displaySelection(this.state.selecResultado)}\r\n            onSelectionChange={e => this.setState({ selecResultado: e.value })}\r\n            responsive={true}\r\n            editMode=\"row\"\r\n            rowEditorValidator={this.onRowEditorValidator}\r\n            onRowEditInit={this.onRowEditInit}\r\n            onRowEditSave={this.onRowEditSave}\r\n            onRowEditCancel={this.onRowEditCancel}\r\n          >\r\n            <Column\r\n              field=\"Cod_Resultado\"\r\n              header=\"Codigo\"\r\n              style={{ textAlign: \"center\", width: \"10%\" }}\r\n            />\r\n            <Column\r\n              field=\"NomResultado\"\r\n              header=\"Nombre\"\r\n              style={{ textAlign: \"center\", width: \"15%\" }}\r\n              editor={props => this.editorForRowEditing(props, \"NomResultado\")}\r\n            />\r\n            <Column\r\n              field=\"Descripcion\"\r\n              header=\"Descripcion\"\r\n              style={{ textAlign: \"center\", width: \"60%\" }}\r\n              editor={props => this.editorForRowEditing(props, \"Descripcion\")}\r\n            />\r\n            <Column\r\n              field=\"valor\"\r\n              header=\"valor\"\r\n              style={{ textAlign: \"center\", width: \"8%\" }}\r\n              editor={props => this.editorForRowEditing(props, \"valor\")}\r\n            />\r\n            <Column\r\n              rowEditor={true}\r\n              style={{ width: \"7%\", textAlign: \"center\" }}\r\n            ></Column>\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageEditRE;","import React from 'react';\r\nimport PagesEditRE from '../components/PagesEditRE';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass PageEditRE extends React.Component {\r\n  render(){\r\n    return(  \r\n      <div> \r\n       <LoginNavbarUser />\r\n       <PagesEditRE/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageEditRE;","import React from \"react\";\r\nimport \"./styles/Edicion.css\";\r\nimport api from \"../api\";\r\nimport { Button, ButtonGroup, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input } from \"reactstrap\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Growl } from \"primereact/growl\";\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\n\r\nclass PageEditOB extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dtObjEduc: [],\r\n      dtEscuela: [],\r\n      modalIsOpen: false,\r\n      obj2: null\r\n    };\r\n    this.dtUpdateObj = {};\r\n    this.EscuelaEditor = this.EscuelaEditor.bind(this);\r\n    this.Cod_EscuelaEditor = this.Cod_EscuelaEditor.bind(this);\r\n    this.DescripcionEditor = this.DescripcionEditor.bind(this);\r\n    this.requiredValidator = this.requiredValidator.bind(this);\r\n    this.editorForRowEditing = this.editorForRowEditing.bind(this);\r\n    this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditInit = this.onRowEditInit.bind(this);\r\n    this.onRowEditSave = this.onRowEditSave.bind(this);\r\n    this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n  }\r\n  ToggleModal() {\r\n    this.setState({\r\n      modalIsOpen: !this.state.modalIsOpen\r\n    });\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  createObjetivo = async e => {\r\n    const cObjetivo = {\r\n      Cod_Objetivo: this.state.Cod_Objetivo,\r\n      Cod_Escuela: this.state.Cod_Escuela,\r\n      Descripcion: this.state.Descripcion\r\n    };\r\n    await api.objetivosEducacionalesCrud.create(cObjetivo);\r\n    this.refreshPage();\r\n  };\r\n  updateObjetivo = async (pCod_Objetivo, pCod_Escuela, pDescripcion) => {\r\n    const cObjetivo = {\r\n      Cod_Objetivo: pCod_Objetivo,\r\n      Cod_Escuela: pCod_Escuela,\r\n      Descripcion: pDescripcion\r\n    };\r\n    await api.objetivosEducacionalesCrud.create(cObjetivo);\r\n  };\r\n  deleteObjetivo = async dCod_Objetivo => {\r\n    const pCod_Objetivo = {\r\n      Cod_Objetivo: dCod_Objetivo\r\n    };\r\n    await api.objetivosEducacionalesCrud.remove(pCod_Objetivo);\r\n    this.refreshPage();\r\n  };\r\n  componentDidMount() {\r\n    this.traerObjetivosEducacional();\r\n    this.traerEscuela();\r\n  }\r\n  traerObjetivosEducacional = async () => {\r\n    try {\r\n      const dtObjEduc = await api.objetivosEducacionalesCrud.list();\r\n      this.setState({\r\n        dtObjEduc: dtObjEduc.Objetivos\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerEscuela = async () => {\r\n    try {\r\n      const dtEscuela = await api.escuelaCrud.listCb();\r\n      this.setState({\r\n        dtEscuela: dtEscuela.Escuelas\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  onRowEditorValidator(rowData) {\r\n    let value = rowData[\"Descripcion\"];\r\n    return value.length > 0;\r\n  }\r\n  Cod_EscuelaEditor(props) {\r\n    return this.inputTextEditor(props, \"Cod_Escuela\");\r\n  }\r\n  DescripcionEditor(props) {\r\n    return this.inputTextEditor(props, \"Descripcion\");\r\n  }\r\n  requiredValidator(props) {\r\n    let value = props.rowData[props.field];\r\n    return value && value.length > 0;\r\n  }\r\n  onEditorValueChange(props, value) {\r\n    let updatedObj = [...props.value];\r\n    updatedObj[props.rowIndex][props.field] = value;\r\n    this.setState({ obj2: updatedObj });\r\n  }\r\n  EscuelaEditor(props) {\r\n    return (\r\n      <Dropdown\r\n        value={props.value[props.rowIndex].Cod_Escuela}\r\n        options={this.state.dtEscuela}\r\n        onChange={e => this.onEditorValueChange(props, e.value)}\r\n        style={{width: '1em'}}\r\n        // style={{ width: '100%' }}\r\n        placeholder=\"Selecciona EP\"\r\n      />\r\n    );\r\n  }\r\n  onRowEditInit(event) {\r\n    this.dtUpdateObj[event.data.Cod_Objetivo] = { ...event.data };\r\n    this.obj2 = { ...event.data };\r\n  }\r\n  onRowEditSave(event) {\r\n    if (this.onRowEditorValidator(event.data)) {\r\n      this.updateObjetivo(\r\n        event.data.Cod_CursoObjetivo,\r\n        event.data.Cod_Objetivo,\r\n        event.data.Cod_Curso\r\n      );\r\n      this.growl.show({\r\n        severity: \"Actualizado\",\r\n        summary: \"Exitoso!!\",\r\n        detail: \"OE is updated\"\r\n      });\r\n    } else {\r\n      this.growl.show({\r\n        severity: \"error\",\r\n        summary: \"Error\",\r\n        detail: \"OE is required\"\r\n      });\r\n    }\r\n  }\r\n  onRowEditCancel(event) {\r\n    let objetivo = [...this.state.dtObjEduc];\r\n    objetivo[event.index] = this.dtUpdateObj[event.data.Cod_Objetivo];\r\n    delete this.dtUpdateObj[event.data.Cod_Objetivo];\r\n    this.setState({\r\n      dtObjEduc: objetivo\r\n    });\r\n  }\r\n  onEditorValueChangeForRowEditing = async (props, value) => {\r\n    let updatedObj = [...props.value];\r\n    updatedObj[props.rowIndex][props.field] = value;\r\n    this.setState({ obj2: updatedObj });\r\n  };\r\n  editorForRowEditing(props, field) {\r\n    return (\r\n      <InputText\r\n        type=\"text\"\r\n        value={props.rowData[field]}\r\n        onChange={e =>\r\n          this.onEditorValueChangeForRowEditing(props, e.target.value)\r\n        }\r\n      />\r\n    );\r\n  }\r\n  refreshPage() {\r\n    window.location.reload(true);\r\n  }\r\n  displaySelection(data) {\r\n    if (!data || data.length === 0) {\r\n      return <div></div>;\r\n    } else {\r\n      if (data instanceof Array)\r\n        return (\r\n          <ul style={{ textAlign: \"left\", margin: 0 }}>\r\n            {data.map((slObjetivo, i) => (\r\n              <button key={slObjetivo.Cod_Objetivo}>\r\n                {slObjetivo.Cod_Objetivo + \" - \" + slObjetivo.Cod_Objetivo}\r\n              </button>\r\n            ))}\r\n          </ul>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={e => this.deleteObjetivo(data.Cod_Objetivo)}\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            Eliminar: {data.Cod_Objetivo}\r\n          </button>\r\n        );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"centro\">\r\n            <h1>OBJETIVOS EDUCACIONALES</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row centro2 abajo\">\r\n          <h2>Lista de Objetivos Educacionales</h2>\r\n          <div className=\"col espacioss\">\r\n            <ButtonGroup>\r\n              <div className=\"col\">\r\n                <Button\r\n                  outline\r\n                  color=\"primary mr-2\"\r\n                  size=\"lg\"\r\n                  onClick={this.ToggleModal.bind(this)}\r\n                >\r\n                  <i class=\"fas fa-plus-circle\"></i>\r\n                </Button>\r\n                <Modal isOpen={this.state.modalIsOpen}>\r\n                  <ModalHeader toggle={this.ToggleModal.bind(this)}>\r\n                    Nuevo Objetivo Educacional\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Codigo Escuela\r\n                      </InputGroupAddon>\r\n                      <Dropdown\r\n                        name=\"Cod_Escuela\"\r\n                        options={this.state.dtEscuela}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.Cod_Escuela}\r\n                        style={{ width: \"70%\" }}\r\n                        placeholder=\"Selecciona Escuela Profesional\"\r\n                      />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Codigo Objetivo\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Codigo Objetivo Educacional\"\r\n                        value={this.state.Cod_Objetivo}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"Cod_Objetivo\"\r\n                      />\r\n                    </InputGroup>\r\n                    <br />\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        Descripcion\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Descripcion del Objetivo Educacional\"\r\n                        value={this.state.Descripcion}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"Descripcion\"\r\n                      />\r\n                    </InputGroup>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onBlur={this.createObjetivo}\r\n                      onClick={this.ToggleModal.bind(this)}\r\n                    >\r\n                      GUARDAR\r\n                    </Button>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={this.ToggleModal.bind(this)}\r\n                    >\r\n                      CANCELAR\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n        <div className=\"\">\r\n          <Growl ref={el => (this.growl = el)} />\r\n          <DataTable\r\n            value={this.state.dtObjEduc}\r\n            selectionMode=\"single\"\r\n            metaKeySelection={false}\r\n            selection={this.state.selecObjetivos}\r\n            responsive={true}\r\n            header={this.displaySelection(this.state.selecObjetivos)}\r\n            onSelectionChange={e => this.setState({ selecObjetivos: e.value })}\r\n            responsive={true}\r\n            editMode=\"row\"\r\n            rowEditorValidator={this.onRowEditorValidator}\r\n            onRowEditInit={this.onRowEditInit}\r\n            onRowEditSave={this.onRowEditSave}\r\n            onRowEditCancel={this.onRowEditCancel}\r\n          >\r\n            <Column\r\n              field=\"Cod_Escuela\"\r\n              header=\"Escuela\"\r\n              style={{height: '3.5em'}}\r\n              // style={{ textAlign: \"center\", width: \"28%\" }}\r\n              editor={this.EscuelaEditor}\r\n            />\r\n            <Column\r\n              field=\"Cod_Objetivo\"\r\n              header=\"Codigo\"\r\n              style={{height: '3.5em'}}\r\n              // style={{ textAlign: \"center\", width: \"10%\" }}\r\n            />\r\n            <Column\r\n              field=\"Descripcion\"\r\n              header=\"Descripcion\"\r\n              style={{height: '3.5em'}}\r\n              // style={{ textAlign: \"left\", width: \"65%\" }}\r\n              editor={props => this.editorForRowEditing(props, \"Descripcion\")}\r\n            />\r\n            <Column\r\n              rowEditor={true}\r\n              style={{height: '3.5em'}}\r\n              // style={{ width: \"7%\", textAlign: \"center\" }}\r\n            ></Column>\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageEditOB;","import React from 'react';\r\nimport PagesEditOB from '../components/PagesEditOB';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass PageEditOB extends React.Component {\r\n  render(){\r\n    return(  \r\n      <div> \r\n       <LoginNavbarUser />\r\n       <PagesEditOB/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageEditOB;","import React from \"react\";\r\nimport \"./styles/PagLogin.css\";\r\nimport logo from \"../images/LogoUAC.png\";\r\nimport api from \"../api\";\r\nimport ModalRepor from \"./ModalRepor\";\r\nimport Prueba from \"./Prueba\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Button } from \"primereact/button\";\r\n\r\n/** Este componente permite listar los cursos que el usuario tiene en el presente semestre.\r\n * @author: Luis Huallparimachi Saire y Joel Sumerente Ayerbe\r\n * @param wstoken: El parametro wstoken devuelve el token que solicitamos.\r\n * @param moodlewsrestformat: El parametro moodlewsrestformat permite darnos el formato en el que se mostrara                                  el contenido de la informacion.\r\n * @param wsfunction: El parametro wsfunction permite llamar al metodo del servicio de moodle.\r\n *                    La funcion (core_enrol_get_users_courses) permite obtener una lista de identificadores de curso en los                      que esta inscrito un usuario.\r\n * @param userid: El parametro userid devuelve el id del usuario que solicitamos.\r\n * @version: 1.0 17/12/2019\r\n */\r\n\r\nclass PagesReport extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userid: {},\r\n      result: [],\r\n      dtcurso: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.traerCurso();\r\n  }\r\n\r\n  traerCurso = async () => {\r\n    const docente = {\r\n      Docente: sessionStorage.getItem(\"fullname\"),\r\n    };\r\n    try {\r\n      const dtcurso = await api.cursoCrud.docentecurso(docente);\r\n      // console.log(dtCursoObjetivo.CursoObjetivos);\r\n      this.setState({\r\n        dtcurso: dtcurso.Cursos,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  //   editorForRowEditing(props, field) {\r\n  //     return (\r\n  //       <InputText\r\n  //         type=\"text\"\r\n  //         value={props.rowData[field]}\r\n  //         onChange={e =>\r\n  //           this.onEditorValueChangeForRowEditing(props, e.target.value)\r\n  //         }\r\n  //       />\r\n  //     );\r\n  //   }\r\n\r\n  validate = async (cod_curso) => {\r\n    const curso = {\r\n      Cod_Curso: cod_curso,\r\n    };    \r\n    sessionStorage.setItem('cursoid', (cod_curso));\r\n    try {\r\n      const rpta = await api.Reportes.validate(curso);\r\n      this.setState({\r\n        Mensaje: rpta.RepoActividad[0].MERROR,\r\n      });\r\n      this.state.Mensaje && this.setState({ visible: true });\r\n    } catch (error) {}\r\n  };\r\n\r\n  createTipo = async(pTipo) => {\r\n    sessionStorage.setItem('rtipo', (pTipo));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"centro\">\r\n            <h1>Cursos Procesados </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row abajo\">\r\n          {this.state.dtcurso.map((cursos) => (\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card General\" id={cursos.Cod_Curso}>\r\n                <div className=\"col d-none d-lg-block \">\r\n                  <img\r\n                    className=\"card-img-top styleimagen\"\r\n                    src={logo}\r\n                    alt=\"Imagen\"\r\n                  />\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <p className=\"center card-title color\">{cursos.NomCurso}</p>\r\n                  <a\r\n                    className=\"fuente btn-lg btn-block Boton\" //href=\"\"\r\n                    href=\"#\"\r\n                    onClick={(e) => this.validate(cursos.Cod_Curso)}\r\n                    role=\"button\"\r\n                  >\r\n                    CURSO\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                {this.state.Mensaje == \"GOZZUUUUU\" ? (\r\n                  //  <ModalRepor sms ={this.state.Mensaje}/>\r\n                  <Dialog\r\n                    header=\"Selecciona Tu Reporte\"\r\n                    visible={this.state.visible}\r\n                    footer={this.footer}\r\n                    style={{ width: \"50vw\" }}\r\n                    modal={true}\r\n                    onHide={() => this.setState({ visible: false })}\r\n                  > \r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                      <div className=\"card General\">\r\n                        <div className=\"card-body\">\r\n                          <p className=\"center card-title color\">Resultados</p>\r\n                          <p className=\"center card-title color\">Estudiante</p>\r\n                          <a\r\n                            className=\"fuente btn-lg btn-block\"\r\n                            href={\"/PageReportes/Tipo:RE\"}\r\n                            onClick={() => this.createTipo(\"RE\")}\r\n                            role=\"button\"\r\n                            >\r\n                            VER\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                           \r\n\r\n                    <div className=\"col-lg-6\">\r\n                      <div className=\"card General\">\r\n                        <div className=\"card-body\">\r\n                          <p className=\"center card-title color\">Indicadores</p>\r\n                          <p className=\"center card-title color\">Desempeño</p>\r\n                          <a\r\n                            className=\"fuente btn-lg btn-block\"\r\n                            href={\"/PageReportes/Tipo:IN\"}\r\n                            onClick={() => this.createTipo(\"IN\")}\r\n                            role=\"button\"\r\n                          >\r\n                            VER\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  </Dialog>\r\n                ) : (\r\n                  <Dialog\r\n                    header=\"ERROR\"\r\n                    visible={this.state.visible}\r\n                    footer={this.footer}\r\n                    style={{ width: \"50vw\" }}\r\n                    modal={true}\r\n                    onHide={() => this.setState({ visible: false })}\r\n                  >\r\n                    <h1>{this.state.Mensaje}</h1>\r\n                  </Dialog>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PagesReport;\r\n","import React from \"react\";\r\nimport api from \"../api\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Page, Text, View, Document, StyleSheet, PDFViewer,} from \"@react-pdf/renderer\";\r\nimport { Table, TableHeader, TableCell, DataTableCell, TableBody,} from \"@david.kucsai/react-pdf-table\";\r\nimport { PDFDocument, PDFText, PDFTable, PDFTableRow, PDFTableColumn, PDFColumns, PDFColumn,} from \"react-pdfmake\";\r\n\r\n\r\nclass ModalRepor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dtReporteActividad: [],\r\n      dtResultadoIndicador: [],\r\n      dtAlumno: [],\r\n      dtTAlumno: [],\r\n      dtActividadFinal: [],\r\n      visible : false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n   \r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          label={\"PRUEBA\"} \r\n          onClick={(e) => this.setState({ visible: true })}\r\n          onc\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ModalRepor;","import React from 'react';\r\nimport PagesReport from '../components/PagesReport';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass PageReport extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data :[],\r\n        };\r\n      }\r\n  componentDidMount(){\r\n    this.cargarUser();\r\n  }\r\n  cargarUser = async() => {\r\n    try{      \r\n      const response = await fetch(`${sessionStorage.getItem('url')}/webservice/rest/server.php?wstoken=${sessionStorage.getItem('token')}&wsfunction=core_webservice_get_site_info&moodlewsrestformat=json`);    \r\n      const data = await response.json();\r\n      this.setState({\r\n        username: data.username,\r\n        fullname: data.fullname,\r\n        userid: data.userid,\r\n        userpictureurl: data.userpictureurl,\r\n        data: data,\r\n      });     \r\n    }catch (error) {\r\n    }\r\n  };\r\n  render(){\r\n    return(  \r\n      <div> \r\n       <LoginNavbarUser/>\r\n       <PagesReport fullname={this.state.fullname}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageReport;","import React from \"react\";\r\nimport LogoUAC from \"../images/logoUAC_2.png\";\r\nimport styled from '@react-pdf/styled-components';\r\nimport \"./styles/PagLogin.css\";\r\nimport { Page, Text, View, Document, StyleSheet, PDFViewer,Image} from \"@react-pdf/renderer\";\r\nimport { Table, TableHeader, TableCell, DataTableCell, TableBody,} from \"@david.kucsai/react-pdf-table\";\r\nimport api from \"../api\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport { Button } from 'primereact/button';\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 12,\r\n    margin: 12,\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: \"justify\",\r\n  },\r\n  image: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 100,\r\n  },\r\n  header: {\r\n    fontSize: 30,\r\n    textAlign: 'right',\r\n     marginTop: -80,\r\n     marginLeft: 100,\r\n    paddingRight: 40,\r\n     color: '#FFFFFF',\r\n  },\r\n  pageNumber: {\r\n    position: \"absolute\",\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n  subtitulo: {\r\n    fontSize: 30,\r\n    textAlign: 'right',\r\n     marginTop: 0,\r\n     marginBottom: 50,\r\n     marginLeft: 100,\r\n    paddingRight: 40,\r\n     color: '#FFFFFF',\r\n  },\r\n  image: {\r\n    height: 75,\r\n    width: 85,\r\n    marginTop: -85,\r\n    marginLeft: 20,\r\n  },\r\n \r\n  });\r\n  let Footer = styled.Text`\r\n  left: 0px;\r\n  right: 0px;\r\n  color: grey;\r\n  bottom: 30px;\r\n  font-size: 12px;\r\n  position: absolute;\r\n  text-align: center`;\r\n\r\nclass PagesReportes extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dtReporteActividad: [],\r\n      dtReporteCSV: [],\r\n      dtResultado: [],\r\n      dtAlumno: [],\r\n      dtTAlumno: [],\r\n      dtActividadFinal: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(sessionStorage.getItem(\"rtipo\") == \"RE\"){\r\n      const cResultadoIndicador = {\r\n        Cod_Curso: sessionStorage.getItem(\"cursoid\"),\r\n      };\r\n      this.traerReporte(sessionStorage.getItem(\"cursoid\"), 2, 1);\r\n      this.traerResultadoCurso(cResultadoIndicador);\r\n      this.traerReporteCSV(sessionStorage.getItem(\"cursoid\"));\r\n    }\r\n    if(sessionStorage.getItem(\"rtipo\") == \"IN\"){\r\n      const cResultadoIndicador = {\r\n        Cod_Curso: sessionStorage.getItem(\"cursoid\"),\r\n      };\r\n        this.traerReporte(sessionStorage.getItem(\"cursoid\"), 2, 1);  \r\n        this.traerReporteCSV(sessionStorage.getItem(\"cursoid\"));\r\n      this.traerResultadoIndicador(cResultadoIndicador);\r\n    }\r\n  }\r\n\r\n  traerResultadoIndicador = async (cResultadoIndicador) => {\r\n    try {\r\n      const dtResultadoIndicador = await api.resultadoIndicadorCrud.listreinxCurso(\r\n        cResultadoIndicador\r\n      );\r\n      this.setState({\r\n        dtResultadoIndicador: dtResultadoIndicador.resultadoIndicadors,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  traerResultadoCurso = async cResultadoIndicador => {\r\n    try {\r\n      const dtResultado = await api.objetivoResultadoCrud.listxCurso(\r\n        cResultadoIndicador\r\n      );\r\n      this.setState({\r\n        dtResultado: dtResultado.ObjetivoResultados\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  traerAlumno = async () => {\r\n    try {\r\n      var URL =\r\n        sessionStorage.getItem(\"url\") +\r\n        \"/webservice/rest/server.php?wstoken=\" +\r\n        sessionStorage.getItem(\"token\") +\r\n        \"&moodlewsrestformat=json&wsfunction=core_enrol_get_enrolled_users&courseid=\" +\r\n        sessionStorage.getItem(\"cursoid\");\r\n      const response = await fetch(URL);\r\n      const dtAlumno = await response.json();\r\n      this.setState({\r\n        dtTAlumno: dtAlumno,\r\n      });\r\n    } catch (error) {}\r\n    this.state.dtTAlumno.forEach((element) => {\r\n      if (element.institution == null) {\r\n        const nrow = {\r\n          Cod_Persona: element.id,\r\n          Nombres: element.firstname,\r\n          Apellidos: element.lastname,\r\n          Codigo: element.email.replace(\"@uandina.edu.pe\", \"\"),\r\n        };\r\n        this.setState({\r\n          dtAlumno: [].concat(this.state.dtAlumno, nrow),\r\n          displayDialog: true,\r\n        });\r\n      }\r\n    });\r\n    this.sacarpromedio();\r\n  };\r\n  traerReporteCSV = async (pCod_Curso) => {\r\n    try {\r\n      const crubrica = {\r\n        Cod_Curso: pCod_Curso,\r\n      };\r\n      const dtReporteCSV = await api.Reportes.ReporteCSV(crubrica);\r\n      this.setState({\r\n        dtReporteCSV: dtReporteCSV.RepoActividad,\r\n      });\r\n      console.log(this.state.dtReporteCSV);\r\n    } catch (error) {}\r\n  };\r\n  traerReporte = async (pCod_Curso, pCod_Unidad, pId_Asignacion) => {\r\n    try {\r\n      const crubrica = {\r\n        Cod_Curso: pCod_Curso,\r\n        Cod_Unidad: pCod_Unidad,\r\n        Id_Asignacion: pId_Asignacion,\r\n      };\r\n      const dtReporteActividad = await api.Reportes.ReporteActividad(crubrica);\r\n      this.setState({\r\n        dtReporteActividad: dtReporteActividad.RepoActividad,\r\n      });\r\n      this.traerAlumno();\r\n    } catch (error) {}\r\n  };\r\n  sacarpromedio() {\r\n    if(sessionStorage.getItem(\"rtipo\") == \"RE\"){\r\n    var appJson = [];\r\n    for (let index = 0; index < this.state.dtAlumno.length; index++) {\r\n      let element = {\r\n        Codigo: this.state.dtAlumno[index].Codigo,\r\n        Nombres: this.state.dtAlumno[index].Nombres,\r\n        Apellidos: this.state.dtAlumno[index].Apellidos,\r\n        id: this.state.dtAlumno[index].Cod_Persona,\r\n        Notas: [],\r\n      }; \r\n      appJson.push(element);\r\n      for ( let indexy = 0; indexy < this.state.dtReporteActividad.length; indexy++) {\r\n        if (\r\n          this.state.dtAlumno[index].Cod_Persona ==\r\n          this.state.dtReporteActividad[indexy].Cod_Persona\r\n        ) {\r\n          let pNotas = {\r\n            Asignacion: this.state.dtReporteActividad[indexy].NomAsignacion,\r\n            Des_Criterio: this.state.dtReporteActividad[indexy].DesCriterio,\r\n            Puntaje: this.state.dtReporteActividad[indexy].PuntajeFinal,\r\n            Indicador: this.state.dtReporteActividad[indexy].Cod_Indicador,\r\n            Resultado: this.state.dtReporteActividad[indexy].Cod_Resultado,\r\n          };\r\n          element.Notas.push(pNotas);\r\n        }\r\n      }\r\n    }\r\n    var app2Json = [];\r\n    for (let index = 0; index < appJson.length; index++) {\r\n      let element = {\r\n        Codigo: appJson[index].Codigo,\r\n        Nombres: appJson[index].Nombres,\r\n        Apellidos: appJson[index].Apellidos,\r\n        id: appJson[index].id,\r\n        Resultados: [],\r\n      };\r\n      app2Json.push(element);\r\n      for (\r\n        let indexy = 0;\r\n        indexy < this.state.dtResultado.length;\r\n        indexy++\r\n      ) {\r\n        let Resultados = {\r\n          Resultado : this.state.dtResultado[indexy]\r\n            .Cod_Resultado,\r\n          Detalle: [],\r\n        };\r\n        element.Resultados.push(Resultados);\r\n        for (let indexz = 0; indexz < appJson[index].Notas.length; indexz++) {\r\n          var cadena =\r\n          sessionStorage.getItem(\"cursoid\")+\r\n            \"-\" +\r\n            appJson[index].Notas[indexz].Resultado;\r\n          if (\r\n            this.state.dtResultado[indexy].Cod_ResulCursObjetivo ==\r\n            cadena\r\n          ) {\r\n            let pNotas = {\r\n              Criterio: appJson[index].Notas[indexz].Des_Criterio,\r\n              Puntaje: appJson[index].Notas[indexz].Puntaje,\r\n            };\r\n            Resultados.Detalle.push(pNotas);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var app3Json = [];\r\n    for (let index = 0; index < app2Json.length; index++) {\r\n      let element = {\r\n        Codigo: appJson[index].Codigo,\r\n        Nombres: appJson[index].Nombres,\r\n        Apellidos: appJson[index].Apellidos,\r\n        id: appJson[index].id,\r\n        Resultados: [],\r\n      };\r\n      app3Json.push(element);\r\n      for (\r\n        let indexy = 0;\r\n        indexy < app2Json[index].Resultados.length;\r\n        indexy++\r\n      ) {\r\n        var cantidad = app2Json[index].Resultados[indexy].Detalle.length;\r\n        var suma = 0;\r\n        for (\r\n          let x = 0;\r\n          x < app2Json[index].Resultados[indexy].Detalle.length;\r\n          x++\r\n        ) {\r\n          suma = suma + app2Json[index].Resultados[indexy].Detalle[x].Puntaje;\r\n        }\r\n        var Nota = suma / cantidad;\r\n        if (Nota >= 0 && Nota <= 1) {\r\n          Nota = Nota;\r\n        }else{\r\n          Nota = 0;       \r\n        }\r\n        let Resultados = {\r\n          Resultado: app2Json[index].Resultados[indexy].Resultado,\r\n          Nota: Math.round(Nota * 100.0) / 100.0,\r\n          Detalle: [],\r\n        };\r\n        element.Resultados.push(Resultados);\r\n        for (\r\n          let x = 0;\r\n          x < app2Json[index].Resultados[indexy].Detalle.length;\r\n          x++\r\n        ) {\r\n          let pNotas = {\r\n            Criterio: app2Json[index].Resultados[indexy].Detalle[x].Criterio,\r\n            Puntaje: app2Json[index].Resultados[indexy].Detalle[x].Puntaje,\r\n          };\r\n          Resultados.Detalle.push(pNotas);\r\n        }\r\n      }\r\n    }\r\n    // console.log(app3Json);\r\n    this.setState({\r\n      dtActividadFinal: app3Json,\r\n    });\r\n  }\r\n\r\n///reportes indicador\r\n\r\n\r\n  if(sessionStorage.getItem(\"rtipo\") == \"IN\"){\r\n\r\n    //Rearmado de json para visualizacion pdf\r\n    var appJson = [];\r\n    for (let index = 0; index < this.state.dtAlumno.length; index++) {\r\n      let element = {\r\n        Codigo: this.state.dtAlumno[index].Codigo,\r\n        Nombres: this.state.dtAlumno[index].Nombres,\r\n        Apellidos: this.state.dtAlumno[index].Apellidos,\r\n        id: this.state.dtAlumno[index].Cod_Persona,\r\n        Notas: [],\r\n      }; \r\n      appJson.push(element);\r\n      for ( let indexy = 0; indexy < this.state.dtReporteActividad.length; indexy++) {\r\n        if (\r\n          this.state.dtAlumno[index].Cod_Persona ==\r\n          this.state.dtReporteActividad[indexy].Cod_Persona\r\n        ) {\r\n          let pNotas = {\r\n            Asignacion: this.state.dtReporteActividad[indexy].NomAsignacion,\r\n            Des_Criterio: this.state.dtReporteActividad[indexy].DesCriterio,\r\n            Puntaje: this.state.dtReporteActividad[indexy].PuntajeFinal,\r\n            Indicador: this.state.dtReporteActividad[indexy].Cod_Indicador,\r\n            Resultado: this.state.dtReporteActividad[indexy].Cod_Resultado,\r\n          };\r\n          element.Notas.push(pNotas);\r\n        }\r\n      }\r\n    }\r\n    var app2Json = [];\r\n    for (let index = 0; index < appJson.length; index++) {\r\n      let element = {\r\n        Codigo: appJson[index].Codigo,\r\n        Nombres: appJson[index].Nombres,\r\n        Apellidos: appJson[index].Apellidos,\r\n        id: appJson[index].id,\r\n        Indicadores: [],\r\n      };\r\n      app2Json.push(element);\r\n      for (\r\n        let indexy = 0;\r\n        indexy < this.state.dtResultadoIndicador.length;\r\n        indexy++\r\n      ) {\r\n        let Indicadores = {\r\n          Indicador: this.state.dtResultadoIndicador[indexy]\r\n            .Cod_IndicarResultado,\r\n          Nom_Indicador: this.state.dtResultadoIndicador[indexy]\r\n            .Cod_Indicador,\r\n          Detalle: [],\r\n        };\r\n        element.Indicadores.push(Indicadores);\r\n        for (let indexz = 0; indexz < appJson[index].Notas.length; indexz++) {\r\n          var cadena =\r\n            sessionStorage.getItem(\"cursoid\")+\r\n            \"-\" +\r\n            appJson[index].Notas[indexz].Resultado +\r\n            \"-\" +\r\n            appJson[index].Notas[indexz].Indicador;\r\n          if (\r\n            this.state.dtResultadoIndicador[indexy].Cod_IndicarResultado ==\r\n            cadena\r\n          ) {\r\n            let pNotas = {\r\n              Criterio: appJson[index].Notas[indexz].Des_Criterio,\r\n              Puntaje: appJson[index].Notas[indexz].Puntaje,\r\n            };\r\n            Indicadores.Detalle.push(pNotas);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var app3Json = [];\r\n    for (let index = 0; index < app2Json.length; index++) {\r\n      let element = {\r\n        Codigo: appJson[index].Codigo,\r\n        Nombres: appJson[index].Nombres,\r\n        Apellidos: appJson[index].Apellidos,\r\n        id: appJson[index].id,\r\n        Indicadores: [],\r\n      };\r\n      app3Json.push(element);\r\n      for (\r\n        let indexy = 0;\r\n        indexy < app2Json[index].Indicadores.length;\r\n        indexy++\r\n      ) {\r\n        var cantidad = app2Json[index].Indicadores[indexy].Detalle.length;\r\n        var suma = 0;\r\n        for (\r\n          let x = 0;\r\n          x < app2Json[index].Indicadores[indexy].Detalle.length;\r\n          x++\r\n        ) {\r\n          suma = suma + app2Json[index].Indicadores[indexy].Detalle[x].Puntaje;\r\n        }\r\n        var Nota = suma / cantidad;\r\n        if (Nota >= 0 && Nota <= 1) {\r\n          Nota = Nota;\r\n        }else{\r\n          Nota = 0;       \r\n        }\r\n        let Indicadores = {\r\n          Indicador: app2Json[index].Indicadores[indexy].Indicador,\r\n          Nom_Indicador: app2Json[index].Indicadores[indexy].Nom_Indicador,\r\n          Nota: Math.round(Nota * 100.0) / 100.0,\r\n          Detalle: [],\r\n        };\r\n        element.Indicadores.push(Indicadores);\r\n        for (\r\n          let x = 0;\r\n          x < app2Json[index].Indicadores[indexy].Detalle.length;\r\n          x++\r\n        ) {\r\n          let pNotas = {\r\n            Criterio: app2Json[index].Indicadores[indexy].Detalle[x].Criterio,\r\n            Puntaje: app2Json[index].Indicadores[indexy].Detalle[x].Puntaje,\r\n          };\r\n          Indicadores.Detalle.push(pNotas);\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      dtActividadFinal: app3Json,\r\n    });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n        {sessionStorage.getItem(\"rtipo\") == \"RE\" ? \r\n       <PDFViewer width=\"790\" height=\"700\">\r\n       <Document>\r\n         <Page style={styles.body}>\r\n         <View style={[styles.box,{height:100, backgroundColor:'#631100' }]} />\r\n                  <Image\r\n                  style={styles.image}\r\n                  src={LogoUAC}\r\n                 />\r\n                <Text style={styles.header}>Sistema de Información</Text>\r\n                <Text style={styles.subtitulo}>Resultado del Estudiante</Text>\r\n                <Text style={styles.title}>Reporte de Resultados del Estudiante</Text>\r\n                <Text style={styles.title}>{sessionStorage.getItem(\"fullnameCu\")+' - '+sessionStorage.getItem(\"fullname\")}</Text>\r\n           {this.state.dtActividadFinal.map((Persona) => (\r\n             <View\r\n               style={{ color: \"Black\", textAlign: \"center\", margin: 5 }}\r\n             >\r\n               <Text style={styles.subtitle}>{Persona.Codigo + ' ' + Persona.Apellidos + ', ' + Persona.Nombres}</Text>\r\n                 <Table\r\n                   data={Persona.Resultados}                      \r\n                 >                       \r\n                   <TableHeader textAlign={\"center\"}>\r\n                     <TableCell>RESULTADOS</TableCell>\r\n                     <TableCell>NOTA</TableCell>\r\n                   </TableHeader>\r\n                   <TableBody textAlign={\"center\"}>\r\n                   <DataTableCell getContent={(r) => r.Resultado}/>\r\n                   <DataTableCell getContent={(r) => r.Nota}/>    \r\n                   </TableBody>\r\n                 </Table>\r\n             </View>\r\n           ))}\r\n         </Page> \r\n       </Document>\r\n     </PDFViewer>\r\n          :\r\n          <PDFViewer width=\"790\" height=\"700\">\r\n            <Document>\r\n              <Page style={styles.body} >\r\n                <View style={[styles.box,{height:100, backgroundColor:'#631100' }]} />\r\n                  <Image\r\n                  style={styles.image}\r\n                  src={LogoUAC}\r\n                 />\r\n                <Text style={styles.header}>Sistema de Información</Text>\r\n                <Text style={styles.subtitulo}>Resultado del Estudiante</Text>\r\n                <Text style={styles.title}>Reporte de Indicadores de Desempeño</Text>\r\n                <Text style={styles.title}>{sessionStorage.getItem(\"fullnameCu\")+' - '+sessionStorage.getItem(\"fullname\")}</Text>\r\n                {this.state.dtActividadFinal.map((Persona) => (\r\n                  <View\r\n                    style={{ color: \"Black\", textAlign: \"center\", margin: 5 }}\r\n                  >\r\n                    <Text style={styles.subtitle}>{Persona.Codigo + ' ' + Persona.Apellidos + ', ' + Persona.Nombres}</Text>\r\n                      <Table\r\n                        data={Persona.Indicadores}                     \r\n                      >                       \r\n                        <TableHeader textAlign={\"center\"}>\r\n                          <TableCell>INDICADOR DE DESEMPEÑO</TableCell>\r\n                          <TableCell>NOTA</TableCell>\r\n                        </TableHeader>\r\n                        <TableBody textAlign={\"center\"} >\r\n                        <DataTableCell getContent={(r) => r.Nom_Indicador}/>\r\n                        <DataTableCell getContent={(r) => r.Nota}/>    \r\n                        </TableBody>\r\n                      </Table>\r\n                  </View>\r\n                ))}\r\n                <Footer render={({ pageNumber, totalPages}) => (\r\n                  `${pageNumber} / ${totalPages}`\r\n                )} fixed/>\r\n              </Page>\r\n            </Document>\r\n          </PDFViewer>\r\n          }\r\n          </div>\r\n          <div className= \"row\">\r\n            <div className = \"container row\">\r\n\r\n            </div>\r\n          <CSVLink className=\"fuente boton btn-lg btn-block\" filename={\"ReporteCSV.csv\"} data={this.state.dtReporteCSV} separator={\";\"}> Descarga CSV</CSVLink>\r\n \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PagesReportes;\r\n","import React from 'react';\r\nimport PagesReportes from '../components/PagesReportes';\r\nimport LoginNavbarUser from '../components/LoginNavbarUser';\r\nclass PageReportes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data :[],\r\n        };\r\n      }\r\n  componentDidMount(){\r\n    this.cargarUser();\r\n  }\r\n  cargarUser = async() => {\r\n    try{      \r\n      const response = await fetch(`${sessionStorage.getItem('url')}/webservice/rest/server.php?wstoken=${sessionStorage.getItem('token')}&wsfunction=core_webservice_get_site_info&moodlewsrestformat=json`);    \r\n      const data = await response.json();\r\n      this.setState({\r\n        username: data.username,\r\n        fullname: data.fullname,\r\n        userid: data.userid,\r\n        userpictureurl: data.userpictureurl,\r\n        data: data,\r\n      });     \r\n    }catch (error) {\r\n    }\r\n  };\r\n  render(){\r\n    return(  \r\n      <div> \r\n       <LoginNavbarUser/>\r\n       <PagesReportes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageReportes;","import React from 'react';\r\nimport './styles/Footer.css';\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <footer>\r\n          <div className=\"row\">\r\n            <div className=\"col titulo_pie\">\r\n                <h3>©2019 UNIVERSIDAD ANDINA DEL CUSCO<br/> Escuela Profesional de Ingeniería de Sistemas - EPIS</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col Subtitulo_Pie\">\r\n                <h5> ©Huallparimachi Saire, Luis Enrique - \r\n                    ©Sumerente Ayerbe, Joel Wilfredo\r\n                </h5>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport Footer from './components/Footer';\r\nfunction Layout(props) {\r\n  return (\r\n      <React.Fragment>\r\n        <Footer/>\r\n               \r\n      </React.Fragment>\r\n  )\r\n}\r\nexport default Layout;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, } from 'react-router-dom';\r\nimport PLogin from './pages/PLogin';\r\nimport Pageone from './pages/Pageone';\r\nimport Pagetwo from './pages/Pagetwo';\r\nimport Pagethree from './pages/Pagethree';\r\nimport Pagefour from './pages/Pagefour';\r\nimport Pagefive from './pages/Pagefive';\r\nimport Pagesix from './pages/Pagesix';\r\nimport Pageseven from './pages/Pageseven';\r\nimport Pageeight from './pages/Pageeight';\r\nimport Pagenine from './pages/Pagenine';\r\nimport PageEdit from './pages/PageEdit';\r\nimport PageEditES from './pages/PageEditES';\r\nimport PageEditIN from './pages/PageEditIN';\r\nimport PageEditRE from './pages/PageEditRE';\r\nimport PageEditOB from './pages/PageEditOB';\r\nimport PageReport from './pages/PageReport';\r\nimport PageReportes from './pages/PageReportes';\r\n\r\nimport Layout from './Layout';\r\nfunction App() {\r\n  return(\r\n    <BrowserRouter>    \r\n    <Route exact path=\"/\"component={PLogin}/>\r\n      <Switch>\r\n        <Route exact path=\"/Pageone/userid:userid\"component={Pageone}/>\r\n        <Route exact path=\"/Pagetwo/cursoid:cursoid\"component={Pagetwo}/>\r\n        <Route exact path=\"/Pagethree/cursoid:cursoid\"component={Pagethree}/>\r\n        <Route exact path=\"/Pagefour/unidadid:unidadid\"component={Pagefour}/>\r\n        <Route exact path=\"/Pagefive/cursoid:cursoid\"component={Pagefive}/>\r\n        <Route exact path=\"/Pagesix/cursoid:cursoid\"component={Pagesix}/>        \r\n        <Route exact path=\"/Pagenine/cursoid:cursoid\"component={Pagenine}/> \r\n        <Route exact path=\"/Pageseven/assignid:assignid\"component={Pageseven}/>\r\n        <Route exact path=\"/Pageeight/assignid:assignid\"component={Pageeight}/>\r\n        <Route exact path=\"/PageEdit/userid:userid\"component={PageEdit}/>\r\n        <Route exact path=\"/PageEditES/userid:userid\"component={PageEditES}/>\r\n        <Route exact path=\"/PageEditIN/userid:userid\"component={PageEditIN}/>\r\n        <Route exact path=\"/PageEditRE/userid:userid\"component={PageEditRE}/>\r\n        <Route exact path=\"/PageEditOB/userid:userid\"component={PageEditOB}/>\r\n        <Route exact path=\"/PageReport/userid:userid\"component={PageReport}/>\r\n        <Route exact path=\"/PageReportes/Tipo:Tipo\"component={PageReportes}/>\r\n      </Switch>\r\n      <Layout> </Layout>\r\n  </BrowserRouter>\r\n  );\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'; \r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nconst container = document.getElementById('root');\r\nReactDOM.render(<App/>, \r\n    container);\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/LogoUAC.ac287430.png\";"],"sourceRoot":""}